

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Dec 01 12:44:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4520 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _PORTEbits	set	3972
    49  0000                     _PORTD	set	3971
    50  0000                     _TRISE	set	3990
    51  0000                     _ADCON1	set	4033
    52  0000                     _TRISD	set	3989
    53                           
    54                           ; #config settings
    55  0000                     
    56                           	psect	cinit
    57  007D5A                     __pcinit:
    58                           	opt callstack 0
    59  007D5A                     start_initialization:
    60                           	opt callstack 0
    61  007D5A                     __initialization:
    62                           	opt callstack 0
    63  007D5A                     end_of_initialization:
    64                           	opt callstack 0
    65  007D5A                     __end_of__initialization:
    66                           	opt callstack 0
    67  007D5A  0100               	movlb	0
    68  007D5C  EFE8  F03E         	goto	_main	;jump to C main() function
    69                           
    70                           	psect	cstackCOMRAM
    71  000001                     __pcstackCOMRAM:
    72                           	opt callstack 0
    73  000001                     msdelay@itime:
    74                           	opt callstack 0
    75                           
    76                           ; 2 bytes @ 0x0
    77  000001                     	ds	2
    78  000003                     msdelay@i:
    79                           	opt callstack 0
    80                           
    81                           ; 2 bytes @ 0x2
    82  000003                     	ds	2
    83  000005                     msdelay@j:
    84                           	opt callstack 0
    85                           
    86                           ; 2 bytes @ 0x4
    87  000005                     	ds	2
    88  000007                     lcdcmd@value:
    89                           	opt callstack 0
    90  000007                     lcddata@value:
    91                           	opt callstack 0
    92                           
    93                           ; 1 bytes @ 0x6
    94  000007                     	ds	1
    95  000008                     
    96                           ; 1 bytes @ 0x7
    97 ;;
    98 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    99 ;;
   100 ;; *************** function _main *****************
   101 ;; Defined at:
   102 ;;		line 20 in file "LCD_MAIN.c"
   103 ;; Parameters:    Size  Location     Type
   104 ;;		None
   105 ;; Auto vars:     Size  Location     Type
   106 ;;		None
   107 ;; Return value:  Size  Location     Type
   108 ;;                  1    wreg      void 
   109 ;; Registers used:
   110 ;;		wreg, status,2, status,0, cstack
   111 ;; Tracked objects:
   112 ;;		On entry : 0/0
   113 ;;		On exit  : 0/0
   114 ;;		Unchanged: 0/0
   115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   116 ;;      Params:         0       0       0       0       0       0       0
   117 ;;      Locals:         0       0       0       0       0       0       0
   118 ;;      Temps:          0       0       0       0       0       0       0
   119 ;;      Totals:         0       0       0       0       0       0       0
   120 ;;Total ram usage:        0 bytes
   121 ;; Hardware stack levels required when called:    2
   122 ;; This function calls:
   123 ;;		_lcdcmd
   124 ;;		_lcddata
   125 ;;		_msdelay
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132  007DD0                     __ptext0:
   133                           	opt callstack 0
   134  007DD0                     _main:
   135                           	opt callstack 29
   136                           
   137                           ;LCD_MAIN.c: 22: msdelay(15);
   138                           
   139                           ;incstack = 0
   140  007DD0  0E00               	movlw	0
   141  007DD2  6E95               	movwf	3989,c	;volatile
   142                           
   143                           ;LCD_MAIN.c: 23: lcdcmd(0x01);
   144  007DD4  0E0A               	movlw	10
   145  007DD6  6EC1               	movwf	4033,c	;volatile
   146                           
   147                           ;LCD_MAIN.c: 24: msdelay(15);
   148  007DD8  0E00               	movlw	0
   149  007DDA  6E96               	movwf	3990,c	;volatile
   150                           
   151                           ;LCD_MAIN.c: 29: lcddata('L');
   152  007DDC  0E00               	movlw	0
   153  007DDE  6E02               	movwf	msdelay@itime+1,c
   154  007DE0  0E32               	movlw	50
   155  007DE2  6E01               	movwf	msdelay@itime,c
   156  007DE4  ECCC  F03E         	call	_msdelay	;wreg free
   157                           
   158                           ;LCD_MAIN.c: 30: msdelay(50);
   159  007DE8  0E38               	movlw	56
   160  007DEA  ECB0  F03E         	call	_lcdcmd
   161                           
   162                           ;LCD_MAIN.c: 31: lcddata('O');
   163  007DEE  0E00               	movlw	0
   164  007DF0  6E02               	movwf	msdelay@itime+1,c
   165  007DF2  0E32               	movlw	50
   166  007DF4  6E01               	movwf	msdelay@itime,c
   167  007DF6  ECCC  F03E         	call	_msdelay	;wreg free
   168                           
   169                           ;LCD_MAIN.c: 32: msdelay(50);
   170  007DFA  0E0E               	movlw	14
   171  007DFC  ECB0  F03E         	call	_lcdcmd
   172                           
   173                           ;LCD_MAIN.c: 33: lcddata('G');
   174  007E00  0E00               	movlw	0
   175  007E02  6E02               	movwf	msdelay@itime+1,c
   176  007E04  0E0F               	movlw	15
   177  007E06  6E01               	movwf	msdelay@itime,c
   178  007E08  ECCC  F03E         	call	_msdelay	;wreg free
   179                           
   180                           ;LCD_MAIN.c: 34: msdelay(50);
   181  007E0C  0E01               	movlw	1
   182  007E0E  ECB0  F03E         	call	_lcdcmd
   183                           
   184                           ;LCD_MAIN.c: 35: lcddata('S');
   185  007E12  0E00               	movlw	0
   186  007E14  6E02               	movwf	msdelay@itime+1,c
   187  007E16  0E0F               	movlw	15
   188  007E18  6E01               	movwf	msdelay@itime,c
   189  007E1A  ECCC  F03E         	call	_msdelay	;wreg free
   190                           
   191                           ;LCD_MAIN.c: 36: msdelay(50);
   192  007E1E  0E06               	movlw	6
   193  007E20  ECB0  F03E         	call	_lcdcmd
   194                           
   195                           ;LCD_MAIN.c: 37: lcddata('U');
   196  007E24  0E00               	movlw	0
   197  007E26  6E02               	movwf	msdelay@itime+1,c
   198  007E28  0E0F               	movlw	15
   199  007E2A  6E01               	movwf	msdelay@itime,c
   200  007E2C  ECCC  F03E         	call	_msdelay	;wreg free
   201                           
   202                           ;LCD_MAIN.c: 38: msdelay(50);
   203  007E30  0E81               	movlw	129
   204  007E32  ECB0  F03E         	call	_lcdcmd
   205                           
   206                           ;LCD_MAIN.c: 39: lcddata('N');
   207  007E36  0E00               	movlw	0
   208  007E38  6E02               	movwf	msdelay@itime+1,c
   209  007E3A  0E32               	movlw	50
   210  007E3C  6E01               	movwf	msdelay@itime,c
   211  007E3E  ECCC  F03E         	call	_msdelay	;wreg free
   212                           
   213                           ;LCD_MAIN.c: 40: msdelay(50);
   214  007E42  0E4C               	movlw	76
   215  007E44  ECBE  F03E         	call	_lcddata
   216                           
   217                           ;LCD_MAIN.c: 41: lcddata(0X14);
   218  007E48  0E00               	movlw	0
   219  007E4A  6E02               	movwf	msdelay@itime+1,c
   220  007E4C  0E32               	movlw	50
   221  007E4E  6E01               	movwf	msdelay@itime,c
   222  007E50  ECCC  F03E         	call	_msdelay	;wreg free
   223                           
   224                           ;LCD_MAIN.c: 42: lcddata('S');
   225  007E54  0E4F               	movlw	79
   226  007E56  ECBE  F03E         	call	_lcddata
   227                           
   228                           ;LCD_MAIN.c: 43: msdelay(50);
   229  007E5A  0E00               	movlw	0
   230  007E5C  6E02               	movwf	msdelay@itime+1,c
   231  007E5E  0E32               	movlw	50
   232  007E60  6E01               	movwf	msdelay@itime,c
   233  007E62  ECCC  F03E         	call	_msdelay	;wreg free
   234                           
   235                           ;LCD_MAIN.c: 44: lcddata('Y');
   236  007E66  0E47               	movlw	71
   237  007E68  ECBE  F03E         	call	_lcddata
   238                           
   239                           ;LCD_MAIN.c: 45: msdelay(50);
   240  007E6C  0E00               	movlw	0
   241  007E6E  6E02               	movwf	msdelay@itime+1,c
   242  007E70  0E32               	movlw	50
   243  007E72  6E01               	movwf	msdelay@itime,c
   244  007E74  ECCC  F03E         	call	_msdelay	;wreg free
   245                           
   246                           ;LCD_MAIN.c: 46: lcddata('S');
   247  007E78  0E53               	movlw	83
   248  007E7A  ECBE  F03E         	call	_lcddata
   249                           
   250                           ;LCD_MAIN.c: 47: msdelay(50);
   251  007E7E  0E00               	movlw	0
   252  007E80  6E02               	movwf	msdelay@itime+1,c
   253  007E82  0E32               	movlw	50
   254  007E84  6E01               	movwf	msdelay@itime,c
   255  007E86  ECCC  F03E         	call	_msdelay	;wreg free
   256                           
   257                           ;LCD_MAIN.c: 48: lcddata('T');
   258  007E8A  0E55               	movlw	85
   259  007E8C  ECBE  F03E         	call	_lcddata
   260                           
   261                           ;LCD_MAIN.c: 49: msdelay(50);
   262  007E90  0E00               	movlw	0
   263  007E92  6E02               	movwf	msdelay@itime+1,c
   264  007E94  0E32               	movlw	50
   265  007E96  6E01               	movwf	msdelay@itime,c
   266  007E98  ECCC  F03E         	call	_msdelay	;wreg free
   267                           
   268                           ;LCD_MAIN.c: 50: lcddata('E');
   269  007E9C  0E4E               	movlw	78
   270  007E9E  ECBE  F03E         	call	_lcddata
   271                           
   272                           ;LCD_MAIN.c: 51: msdelay(50);
   273  007EA2  0E00               	movlw	0
   274  007EA4  6E02               	movwf	msdelay@itime+1,c
   275  007EA6  0E32               	movlw	50
   276  007EA8  6E01               	movwf	msdelay@itime,c
   277  007EAA  ECCC  F03E         	call	_msdelay	;wreg free
   278                           
   279                           ;LCD_MAIN.c: 52: lcddata('M');
   280  007EAE  0E14               	movlw	20
   281  007EB0  ECBE  F03E         	call	_lcddata
   282                           
   283                           ;LCD_MAIN.c: 53: msdelay(50);
   284  007EB4  0E53               	movlw	83
   285  007EB6  ECBE  F03E         	call	_lcddata
   286                           
   287                           ;LCD_MAIN.c: 54: lcddata('S');
   288  007EBA  0E00               	movlw	0
   289  007EBC  6E02               	movwf	msdelay@itime+1,c
   290  007EBE  0E32               	movlw	50
   291  007EC0  6E01               	movwf	msdelay@itime,c
   292  007EC2  ECCC  F03E         	call	_msdelay	;wreg free
   293                           
   294                           ;LCD_MAIN.c: 55: msdelay(50);
   295  007EC6  0E59               	movlw	89
   296  007EC8  ECBE  F03E         	call	_lcddata
   297                           
   298                           ;LCD_MAIN.c: 56: lcdcmd(0xC1);
   299  007ECC  0E00               	movlw	0
   300  007ECE  6E02               	movwf	msdelay@itime+1,c
   301  007ED0  0E32               	movlw	50
   302  007ED2  6E01               	movwf	msdelay@itime,c
   303  007ED4  ECCC  F03E         	call	_msdelay	;wreg free
   304                           
   305                           ;LCD_MAIN.c: 57: lcddata('P');
   306  007ED8  0E53               	movlw	83
   307  007EDA  ECBE  F03E         	call	_lcddata
   308                           
   309                           ;LCD_MAIN.c: 58: msdelay(50);
   310  007EDE  0E00               	movlw	0
   311  007EE0  6E02               	movwf	msdelay@itime+1,c
   312  007EE2  0E32               	movlw	50
   313  007EE4  6E01               	movwf	msdelay@itime,c
   314  007EE6  ECCC  F03E         	call	_msdelay	;wreg free
   315                           
   316                           ;LCD_MAIN.c: 59: lcddata('I');
   317  007EEA  0E54               	movlw	84
   318  007EEC  ECBE  F03E         	call	_lcddata
   319                           
   320                           ;LCD_MAIN.c: 60: msdelay(50);
   321  007EF0  0E00               	movlw	0
   322  007EF2  6E02               	movwf	msdelay@itime+1,c
   323  007EF4  0E32               	movlw	50
   324  007EF6  6E01               	movwf	msdelay@itime,c
   325  007EF8  ECCC  F03E         	call	_msdelay	;wreg free
   326                           
   327                           ;LCD_MAIN.c: 61: lcddata('C');
   328  007EFC  0E45               	movlw	69
   329  007EFE  ECBE  F03E         	call	_lcddata
   330                           
   331                           ;LCD_MAIN.c: 62: msdelay(50);
   332  007F02  0E00               	movlw	0
   333  007F04  6E02               	movwf	msdelay@itime+1,c
   334  007F06  0E32               	movlw	50
   335  007F08  6E01               	movwf	msdelay@itime,c
   336  007F0A  ECCC  F03E         	call	_msdelay	;wreg free
   337                           
   338                           ;LCD_MAIN.c: 63: lcddata(0x14);
   339  007F0E  0E4D               	movlw	77
   340  007F10  ECBE  F03E         	call	_lcddata
   341                           
   342                           ;LCD_MAIN.c: 64: msdelay(50);
   343  007F14  0E00               	movlw	0
   344  007F16  6E02               	movwf	msdelay@itime+1,c
   345  007F18  0E32               	movlw	50
   346  007F1A  6E01               	movwf	msdelay@itime,c
   347  007F1C  ECCC  F03E         	call	_msdelay	;wreg free
   348                           
   349                           ;LCD_MAIN.c: 65: lcddata('1');
   350  007F20  0E53               	movlw	83
   351  007F22  ECBE  F03E         	call	_lcddata
   352                           
   353                           ;LCD_MAIN.c: 66: msdelay(50);
   354  007F26  0E00               	movlw	0
   355  007F28  6E02               	movwf	msdelay@itime+1,c
   356  007F2A  0E32               	movlw	50
   357  007F2C  6E01               	movwf	msdelay@itime,c
   358  007F2E  ECCC  F03E         	call	_msdelay	;wreg free
   359                           
   360                           ;LCD_MAIN.c: 67: lcddata('8');
   361  007F32  0EC1               	movlw	193
   362  007F34  ECB0  F03E         	call	_lcdcmd
   363                           
   364                           ;LCD_MAIN.c: 68: msdelay(50);
   365  007F38  0E50               	movlw	80
   366  007F3A  ECBE  F03E         	call	_lcddata
   367                           
   368                           ;LCD_MAIN.c: 69: lcddata('F');
   369  007F3E  0E00               	movlw	0
   370  007F40  6E02               	movwf	msdelay@itime+1,c
   371  007F42  0E32               	movlw	50
   372  007F44  6E01               	movwf	msdelay@itime,c
   373  007F46  ECCC  F03E         	call	_msdelay	;wreg free
   374                           
   375                           ;LCD_MAIN.c: 70: msdelay(15);
   376  007F4A  0E49               	movlw	73
   377  007F4C  ECBE  F03E         	call	_lcddata
   378                           
   379                           ;LCD_MAIN.c: 71: lcddata('4');
   380  007F50  0E00               	movlw	0
   381  007F52  6E02               	movwf	msdelay@itime+1,c
   382  007F54  0E32               	movlw	50
   383  007F56  6E01               	movwf	msdelay@itime,c
   384  007F58  ECCC  F03E         	call	_msdelay	;wreg free
   385                           
   386                           ;LCD_MAIN.c: 72: msdelay(50);
   387  007F5C  0E43               	movlw	67
   388  007F5E  ECBE  F03E         	call	_lcddata
   389                           
   390                           ;LCD_MAIN.c: 73: lcddata('5');
   391  007F62  0E00               	movlw	0
   392  007F64  6E02               	movwf	msdelay@itime+1,c
   393  007F66  0E32               	movlw	50
   394  007F68  6E01               	movwf	msdelay@itime,c
   395  007F6A  ECCC  F03E         	call	_msdelay	;wreg free
   396                           
   397                           ;LCD_MAIN.c: 74: msdelay(50);
   398  007F6E  0E14               	movlw	20
   399  007F70  ECBE  F03E         	call	_lcddata
   400                           
   401                           ;LCD_MAIN.c: 75: lcddata('2');
   402  007F74  0E00               	movlw	0
   403  007F76  6E02               	movwf	msdelay@itime+1,c
   404  007F78  0E32               	movlw	50
   405  007F7A  6E01               	movwf	msdelay@itime,c
   406  007F7C  ECCC  F03E         	call	_msdelay	;wreg free
   407                           
   408                           ;LCD_MAIN.c: 76: msdelay(50);
   409  007F80  0E31               	movlw	49
   410  007F82  ECBE  F03E         	call	_lcddata
   411                           
   412                           ;LCD_MAIN.c: 77: lcddata('0');
   413  007F86  0E00               	movlw	0
   414  007F88  6E02               	movwf	msdelay@itime+1,c
   415  007F8A  0E32               	movlw	50
   416  007F8C  6E01               	movwf	msdelay@itime,c
   417  007F8E  ECCC  F03E         	call	_msdelay	;wreg free
   418                           
   419                           ;LCD_MAIN.c: 78: msdelay(50);
   420  007F92  0E38               	movlw	56
   421  007F94  ECBE  F03E         	call	_lcddata
   422                           
   423                           ;LCD_MAIN.c: 79: 
   424  007F98  0E00               	movlw	0
   425  007F9A  6E02               	movwf	msdelay@itime+1,c
   426  007F9C  0E32               	movlw	50
   427  007F9E  6E01               	movwf	msdelay@itime,c
   428  007FA0  ECCC  F03E         	call	_msdelay	;wreg free
   429                           
   430                           ;LCD_MAIN.c: 80: for(;;);
   431  007FA4  0E46               	movlw	70
   432  007FA6  ECBE  F03E         	call	_lcddata
   433                           
   434                           ;LCD_MAIN.c: 81: }
   435  007FAA  0E00               	movlw	0
   436  007FAC  6E02               	movwf	msdelay@itime+1,c
   437  007FAE  0E0F               	movlw	15
   438  007FB0  6E01               	movwf	msdelay@itime,c
   439  007FB2  ECCC  F03E         	call	_msdelay	;wreg free
   440                           
   441                           ;LCD_MAIN.c: 82: 
   442  007FB6  0E34               	movlw	52
   443  007FB8  ECBE  F03E         	call	_lcddata
   444                           
   445                           ;LCD_MAIN.c: 83: 
   446  007FBC  0E00               	movlw	0
   447  007FBE  6E02               	movwf	msdelay@itime+1,c
   448  007FC0  0E32               	movlw	50
   449  007FC2  6E01               	movwf	msdelay@itime,c
   450  007FC4  ECCC  F03E         	call	_msdelay	;wreg free
   451                           
   452                           ;LCD_MAIN.c: 84:  void lcdcmd (unsigned char value)
   453  007FC8  0E35               	movlw	53
   454  007FCA  ECBE  F03E         	call	_lcddata
   455                           
   456                           ;LCD_MAIN.c: 85: {
   457  007FCE  0E00               	movlw	0
   458  007FD0  6E02               	movwf	msdelay@itime+1,c
   459  007FD2  0E32               	movlw	50
   460  007FD4  6E01               	movwf	msdelay@itime,c
   461  007FD6  ECCC  F03E         	call	_msdelay	;wreg free
   462                           
   463                           ;LCD_MAIN.c: 86: 
   464  007FDA  0E32               	movlw	50
   465  007FDC  ECBE  F03E         	call	_lcddata
   466                           
   467                           ;LCD_MAIN.c: 87: PORTD=value;
   468  007FE0  0E00               	movlw	0
   469  007FE2  6E02               	movwf	msdelay@itime+1,c
   470  007FE4  0E32               	movlw	50
   471  007FE6  6E01               	movwf	msdelay@itime,c
   472  007FE8  ECCC  F03E         	call	_msdelay	;wreg free
   473                           
   474                           ;LCD_MAIN.c: 88: PORTEbits.RE0=0;
   475  007FEC  0E30               	movlw	48
   476  007FEE  ECBE  F03E         	call	_lcddata
   477                           
   478                           ;LCD_MAIN.c: 89: PORTEbits.RE1=0;
   479  007FF2  0E00               	movlw	0
   480  007FF4  6E02               	movwf	msdelay@itime+1,c
   481  007FF6  0E32               	movlw	50
   482  007FF8  6E01               	movwf	msdelay@itime,c
   483  007FFA  ECCC  F03E         	call	_msdelay	;wreg free
   484  007FFE                     l21:
   485  007FFE  D7FF               	goto	l21
   486  008000                     __end_of_main:
   487                           	opt callstack 0
   488                           
   489 ;; *************** function _lcddata *****************
   490 ;; Defined at:
   491 ;;		line 109 in file "LCD_MAIN.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  value           1    wreg     unsigned char 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  value           1    6[COMRAM] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   505 ;;      Params:         0       0       0       0       0       0       0
   506 ;;      Locals:         1       0       0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0
   508 ;;      Totals:         1       0       0       0       0       0       0
   509 ;;Total ram usage:        1 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; Hardware stack levels required when called:    1
   512 ;; This function calls:
   513 ;;		_msdelay
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text1
   520  007D7C                     __ptext1:
   521                           	opt callstack 0
   522  007D7C                     _lcddata:
   523                           	opt callstack 29
   524                           
   525                           ;incstack = 0
   526                           ;lcddata@value stored from wreg
   527  007D7C  6E07               	movwf	lcddata@value,c
   528                           
   529                           ;LCD_MAIN.c: 109: ;LCD_MAIN.c: 110: };LCD_MAIN.c: 112: {
   530  007D7E  C007  FF83         	movff	lcddata@value,3971	;volatile
   531                           
   532                           ;LCD_MAIN.c: 113: int i,j;
   533  007D82  8084               	bsf	3972,0,c	;volatile
   534                           
   535                           ;LCD_MAIN.c: 114: for(i=0;i<itime;i++)
   536  007D84  9284               	bcf	3972,1,c	;volatile
   537                           
   538                           ;LCD_MAIN.c: 115: for(j=0;j<135;j++);
   539  007D86  8484               	bsf	3972,2,c	;volatile
   540                           
   541                           ;LCD_MAIN.c: 117: }
   542  007D88  0E00               	movlw	0
   543  007D8A  6E02               	movwf	msdelay@itime+1,c
   544  007D8C  0E01               	movlw	1
   545  007D8E  6E01               	movwf	msdelay@itime,c
   546  007D90  ECCC  F03E         	call	_msdelay	;wreg free
   547  007D94  9484               	bcf	3972,2,c	;volatile
   548  007D96  0012               	return		;funcret
   549  007D98                     __end_of_lcddata:
   550                           	opt callstack 0
   551                           
   552 ;; *************** function _lcdcmd *****************
   553 ;; Defined at:
   554 ;;		line 95 in file "LCD_MAIN.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  value           1    wreg     unsigned char 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  value           1    6[COMRAM] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   568 ;;      Params:         0       0       0       0       0       0       0
   569 ;;      Locals:         1       0       0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0
   571 ;;      Totals:         1       0       0       0       0       0       0
   572 ;;Total ram usage:        1 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    1
   575 ;; This function calls:
   576 ;;		_msdelay
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text2
   583  007D60                     __ptext2:
   584                           	opt callstack 0
   585  007D60                     _lcdcmd:
   586                           	opt callstack 29
   587                           
   588                           ;incstack = 0
   589                           ;lcdcmd@value stored from wreg
   590  007D60  6E07               	movwf	lcdcmd@value,c
   591                           
   592                           ;LCD_MAIN.c: 95: ;LCD_MAIN.c: 96: ;LCD_MAIN.c: 98:  void lcddata (unsigned char value)
   593  007D62  C007  FF83         	movff	lcdcmd@value,3971	;volatile
   594                           
   595                           ;LCD_MAIN.c: 99: {
   596  007D66  9084               	bcf	3972,0,c	;volatile
   597                           
   598                           ;LCD_MAIN.c: 100: 
   599  007D68  9284               	bcf	3972,1,c	;volatile
   600                           
   601                           ;LCD_MAIN.c: 101: PORTD=value;
   602  007D6A  8484               	bsf	3972,2,c	;volatile
   603                           
   604                           ;LCD_MAIN.c: 103: PORTEbits.RE1=0;
   605  007D6C  0E00               	movlw	0
   606  007D6E  6E02               	movwf	msdelay@itime+1,c
   607  007D70  0E01               	movlw	1
   608  007D72  6E01               	movwf	msdelay@itime,c
   609  007D74  ECCC  F03E         	call	_msdelay	;wreg free
   610                           
   611                           ;LCD_MAIN.c: 104: PORTEbits.RE2=1;
   612  007D78  9484               	bcf	3972,2,c	;volatile
   613  007D7A  0012               	return		;funcret
   614  007D7C                     __end_of_lcdcmd:
   615                           	opt callstack 0
   616                           
   617 ;; *************** function _msdelay *****************
   618 ;; Defined at:
   619 ;;		line 122 in file "LCD_MAIN.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  itime           2    0[COMRAM] unsigned int 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  j               2    4[COMRAM] int 
   624 ;;  i               2    2[COMRAM] int 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   634 ;;      Params:         2       0       0       0       0       0       0
   635 ;;      Locals:         4       0       0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0
   637 ;;      Totals:         6       0       0       0       0       0       0
   638 ;;Total ram usage:        6 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;;		_lcdcmd
   645 ;;		_lcddata
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text3
   650  007D98                     __ptext3:
   651                           	opt callstack 0
   652  007D98                     _msdelay:
   653                           	opt callstack 30
   654                           
   655                           ;incstack = 0
   656  007D98  0E00               	movlw	0
   657  007D9A  6E04               	movwf	msdelay@i+1,c
   658  007D9C  0E00               	movlw	0
   659  007D9E  6E03               	movwf	msdelay@i,c
   660  007DA0  D010               	goto	l891
   661  007DA2                     l879:
   662  007DA2  0E00               	movlw	0
   663  007DA4  6E06               	movwf	msdelay@j+1,c
   664  007DA6  0E00               	movlw	0
   665  007DA8  6E05               	movwf	msdelay@j,c
   666  007DAA                     l885:
   667  007DAA  4A05               	infsnz	msdelay@j,f,c
   668  007DAC  2A06               	incf	msdelay@j+1,f,c
   669  007DAE  BE06               	btfsc	msdelay@j+1,7,c
   670  007DB0  D7FC               	goto	l885
   671  007DB2  5006               	movf	msdelay@j+1,w,c
   672  007DB4  E104               	bnz	u30
   673  007DB6  0E87               	movlw	135
   674  007DB8  5C05               	subwf	msdelay@j,w,c
   675  007DBA  A0D8               	btfss	status,0,c
   676  007DBC  D7F6               	goto	l885
   677  007DBE                     u30:
   678  007DBE  4A03               	infsnz	msdelay@i,f,c
   679  007DC0  2A04               	incf	msdelay@i+1,f,c
   680  007DC2                     l891:
   681  007DC2  5001               	movf	msdelay@itime,w,c
   682  007DC4  5C03               	subwf	msdelay@i,w,c
   683  007DC6  5002               	movf	msdelay@itime+1,w,c
   684  007DC8  5804               	subwfb	msdelay@i+1,w,c
   685  007DCA  B0D8               	btfsc	status,0,c
   686  007DCC  0012               	return	
   687  007DCE  D7E9               	goto	l879
   688  007DD0                     __end_of_msdelay:
   689                           	opt callstack 0
   690  0000                     
   691                           	psect	rparam
   692  0000                     tosu	equ	0xFFF
   693                           tosh	equ	0xFFE
   694                           tosl	equ	0xFFD
   695                           stkptr	equ	0xFFC
   696                           pclatu	equ	0xFFB
   697                           pclath	equ	0xFFA
   698                           pcl	equ	0xFF9
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           prodh	equ	0xFF4
   704                           prodl	equ	0xFF3
   705                           indf0	equ	0xFEF
   706                           postinc0	equ	0xFEE
   707                           postdec0	equ	0xFED
   708                           preinc0	equ	0xFEC
   709                           plusw0	equ	0xFEB
   710                           fsr0h	equ	0xFEA
   711                           fsr0l	equ	0xFE9
   712                           wreg	equ	0xFE8
   713                           indf1	equ	0xFE7
   714                           postinc1	equ	0xFE6
   715                           postdec1	equ	0xFE5
   716                           preinc1	equ	0xFE4
   717                           plusw1	equ	0xFE3
   718                           fsr1h	equ	0xFE2
   719                           fsr1l	equ	0xFE1
   720                           bsr	equ	0xFE0
   721                           indf2	equ	0xFDF
   722                           postinc2	equ	0xFDE
   723                           postdec2	equ	0xFDD
   724                           preinc2	equ	0xFDC
   725                           plusw2	equ	0xFDB
   726                           fsr2h	equ	0xFDA
   727                           fsr2l	equ	0xFD9
   728                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      7       7
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcdcmd
    _main->_lcddata
    _lcddata->_msdelay
    _lcdcmd->_msdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7616
                             _lcdcmd
                            _lcddata
                            _msdelay
 ---------------------------------------------------------------------------------
 (1) _lcddata                                              1     1      0    2546
                                              6 COMRAM     1     1      0
                            _msdelay
 ---------------------------------------------------------------------------------
 (1) _lcdcmd                                               1     1      0    2546
                                              6 COMRAM     1     1      0
                            _msdelay
 ---------------------------------------------------------------------------------
 (1) _msdelay                                              6     4      2    2524
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdcmd
     _msdelay
   _lcddata
     _msdelay
   _msdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      7       7       1        5.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Dec 01 12:44:15 2019

                     l21 7FFE                       u30 7DBE              __CFG_OSC$HS 000000  
                    l891 7DC2                      l885 7DAA                      l879 7DA2  
            lcdcmd@value 0007             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _main 7DD0             lcddata@value 0007                     start 0000  
           ___param_bank 000000                    ?_main 0001           __CFG_DEBUG$OFF 000000  
                  _PORTD 000F83                    _TRISD 000F95                    _TRISE 000F96  
          __CFG_PWRT$OFF 000000          __end_of_lcddata 7D98          __end_of_msdelay 7DD0  
                  status 000FD8          __initialization 7D5A             __end_of_main 8000  
                 ??_main 0008            __activetblptr 000000                   _ADCON1 000FC1  
                 _lcdcmd 7D60                ??_lcddata 0007                ??_msdelay 0003  
             __accesstop 0080  __end_of__initialization 7D5A            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  ?_lcdcmd 0001                  __Hparam 0000  
                __Lparam 0000          __size_of_lcdcmd 001C                  __pcinit 7D5A  
                __ramtop 0600                  __ptext0 7DD0                  __ptext1 7D7C  
                __ptext2 7D60                  __ptext3 7D98                  _lcddata 7D7C  
                _msdelay 7D98     end_of_initialization 7D5A                _PORTEbits 000F84  
         __end_of_lcdcmd 7D7C      start_initialization 7D5A                 ??_lcdcmd 0007  
               ?_lcddata 0001                 ?_msdelay 0001             msdelay@itime 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of_lcddata 001C  
       __size_of_msdelay 0038            __size_of_main 0230                 msdelay@i 0003  
               msdelay@j 0005  
