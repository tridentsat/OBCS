

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 31 14:06:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataBANK0
   176  0683                     __pidataBANK0:	
   177                           
   178                           ;initializer for main@F933
   179  0683  3431               	retlw	49
   180  0684  3432               	retlw	50
   181  0685  3433               	retlw	51
   182  0686  3434               	retlw	52
   183  0687  3435               	retlw	53
   184  0688  3436               	retlw	54
   185  0689  3437               	retlw	55
   186  068A  3438               	retlw	56
   187  068B  3439               	retlw	57
   188  068C  3430               	retlw	48
   189  068D  3431               	retlw	49
   190  068E  3432               	retlw	50
   191  068F  3433               	retlw	51
   192  0690  3434               	retlw	52
   193  0691  3435               	retlw	53
   194  0692  3436               	retlw	54
   195  0693  3400               	retlw	0
   196                           
   197                           ;initializer for main@F935
   198  0694  3454               	retlw	84
   199  0695  3448               	retlw	72
   200  0696  3449               	retlw	73
   201  0697  3453               	retlw	83
   202  0698  3420               	retlw	32
   203  0699  3449               	retlw	73
   204  069A  3453               	retlw	83
   205  069B  3420               	retlw	32
   206  069C  3455               	retlw	85
   207  069D  3450               	retlw	80
   208  069E  3445               	retlw	69
   209  069F  344E               	retlw	78
   210  06A0  3444               	retlw	68
   211  06A1  3452               	retlw	82
   212  06A2  3441               	retlw	65
   213  06A3  3400               	retlw	0
   214  0043                     _RD3	set	67
   215  0042                     _RD2	set	66
   216  0047                     _RD7	set	71
   217  0046                     _RD6	set	70
   218  0045                     _RD5	set	69
   219  0044                     _RD4	set	68
   220  0088                     _TRISD	set	136
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  07F0                     start_initialization:	
   226  07F0                     __initialization:	
   227                           
   228                           ; Initialize objects allocated to BANK0
   229  07F0  1383               	bcf	3,7	;select IRP bank0
   230  07F1  306D               	movlw	low (__pdataBANK0+33)
   231  07F2  00FD               	movwf	btemp+-1
   232  07F3  3006               	movlw	high __pidataBANK0
   233  07F4  00FE               	movwf	btemp
   234  07F5  3083               	movlw	low __pidataBANK0
   235  07F6  00FF               	movwf	btemp+1
   236  07F7  304C               	movlw	low __pdataBANK0
   237  07F8  0084               	movwf	4
   238  07F9  120A  118A  2642   	fcall	init_ram0
   239  07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  07FC                     __end_of__initialization:	
   243  07FC  0183               	clrf	3
   244  07FD  120A  118A  2F8C   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	dataBANK0
   247  004C                     __pdataBANK0:	
   248  004C                     main@F933:	
   249  004C                     	ds	17
   250  005D                     main@F935:	
   251  005D                     	ds	16
   252                           
   253                           	psect	inittext
   254  063E                     init_fetch0:	
   255                           ;	Called with low address in FSR and high address in W
   256                           
   257  063E  087E               	movf	126,w
   258  063F  008A               	movwf	10
   259  0640  087F               	movf	127,w
   260  0641  0082               	movwf	2
   261  0642                     init_ram0:	
   262                           ;Called with:
   263                           ;	high address of idata address in btemp 
   264                           ;	low address of idata address in btemp+1 
   265                           ;	low address of data in FSR
   266                           ;	high address + 1 of data in btemp-1
   267                           
   268  0642  263E  120A  118A   	fcall	init_fetch0
   269  0645  0080               	movwf	0
   270  0646  0A84               	incf	4,f
   271  0647  0804               	movf	4,w
   272  0648  067D               	xorwf	125,w
   273  0649  1903               	btfsc	3,2
   274  064A  3400               	retlw	0
   275  064B  0AFF               	incf	127,f
   276  064C  1903               	btfsc	3,2
   277  064D  0AFE               	incf	126,f
   278  064E  2E42               	goto	init_ram0
   279                           
   280                           	psect	cstackCOMMON
   281  0070                     __pcstackCOMMON:	
   282  0070                     ?_Lcd_SetBit:	
   283  0070                     ??_Lcd_SetBit:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_Lcd_Cmd:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_Lcd_Clear:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_Lcd_Start:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_Lcd_Print_Char:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_Lcd_Print_String:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     Lcd_SetBit@data_bit:	
   302                           ; 1 bytes @ 0x0
   303                           
   304                           
   305                           ; 1 bytes @ 0x0
   306  0070                     	ds	1
   307  0071                     ??_Lcd_Cmd:	
   308  0071                     ??_Lcd_Print_Char:	
   309                           ; 1 bytes @ 0x1
   310                           
   311                           
   312                           ; 1 bytes @ 0x1
   313  0071                     	ds	1
   314  0072                     Lcd_Print_Char@Lower_Nibble:	
   315                           
   316                           ; 1 bytes @ 0x2
   317  0072                     	ds	1
   318  0073                     Lcd_Cmd@a:	
   319  0073                     Lcd_Print_Char@Upper_Nibble:	
   320                           ; 1 bytes @ 0x3
   321                           
   322                           
   323                           ; 1 bytes @ 0x3
   324  0073                     	ds	1
   325  0074                     ??_Lcd_Clear:	
   326  0074                     ?_Lcd_Set_Cursor:	
   327                           ; 1 bytes @ 0x4
   328                           
   329  0074                     ??_Lcd_Start:	
   330                           ; 1 bytes @ 0x4
   331                           
   332  0074                     Lcd_Set_Cursor@b:	
   333                           ; 1 bytes @ 0x4
   334                           
   335  0074                     Lcd_Print_Char@data:	
   336                           ; 1 bytes @ 0x4
   337                           
   338                           
   339                           ; 1 bytes @ 0x4
   340  0074                     	ds	1
   341  0075                     ??_Lcd_Set_Cursor:	
   342                           
   343                           ; 1 bytes @ 0x5
   344  0075                     	ds	2
   345  0077                     Lcd_Set_Cursor@a:	
   346                           
   347                           ; 1 bytes @ 0x7
   348  0077                     	ds	1
   349  0078                     Lcd_Set_Cursor@z:	
   350                           
   351                           ; 1 bytes @ 0x8
   352  0078                     	ds	1
   353  0079                     Lcd_Set_Cursor@y:	
   354                           
   355                           ; 1 bytes @ 0x9
   356  0079                     	ds	1
   357  007A                     Lcd_Set_Cursor@temp:	
   358                           
   359                           ; 1 bytes @ 0xA
   360  007A                     	ds	3
   361  007D                     ??_Lcd_Print_String:	
   362                           
   363                           ; 1 bytes @ 0xD
   364  007D                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     Lcd_Print_String@i:	
   369                           
   370                           ; 2 bytes @ 0x0
   371  0020                     	ds	2
   372  0022                     Lcd_Print_String@a:	
   373                           
   374                           ; 1 bytes @ 0x2
   375  0022                     	ds	1
   376  0023                     ?_main:	
   377  0023                     main@argc:	
   378                           ; 2 bytes @ 0x3
   379                           
   380                           
   381                           ; 2 bytes @ 0x3
   382  0023                     	ds	2
   383  0025                     main@argv:	
   384                           
   385                           ; 2 bytes @ 0x5
   386  0025                     	ds	2
   387  0027                     ??_main:	
   388                           
   389                           ; 1 bytes @ 0x7
   390  0027                     	ds	4
   391  002B                     main@str:	
   392                           
   393                           ; 17 bytes @ 0xB
   394  002B                     	ds	17
   395  003C                     main@abc:	
   396                           
   397                           ; 16 bytes @ 0x1C
   398  003C                     	ds	16
   399                           
   400                           	psect	maintext
   401  078C                     __pmaintext:	
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 143 in file "LCD_BETTER.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;  argc            2    3[BANK0 ] int 
   410 ;;  argv            2    5[BANK0 ] PTR PTR unsigned char 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  str            17   11[BANK0 ] unsigned char [17]
   413 ;;  abc            16   28[BANK0 ] unsigned char [16]
   414 ;;  a               2    0        unsigned int 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  2    3[BANK0 ] int 
   417 ;; Registers used:
   418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : B00/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       4       0       0       0
   425 ;;      Locals:         0      33       0       0       0
   426 ;;      Temps:          0       4       0       0       0
   427 ;;      Totals:         0      41       0       0       0
   428 ;;Total ram usage:       41 bytes
   429 ;; Hardware stack levels required when called:    3
   430 ;; This function calls:
   431 ;;		_Lcd_Clear
   432 ;;		_Lcd_Print_String
   433 ;;		_Lcd_Set_Cursor
   434 ;;		_Lcd_Start
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           
   441                           ;psect for function _main
   442  078C                     _main:	
   443                           
   444                           ;LCD_BETTER.c: 144:     unsigned int a;;LCD_BETTER.c: 145:     char str[]="1234567890123
      +                          456";
   445                           
   446                           ;incstack = 0
   447                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   448  078C  302B               	movlw	main@str& (0+255)
   449  078D  0084               	movwf	4
   450  078E  304C               	movlw	low main@F933
   451  078F  1283               	bcf	3,5	;RP0=0, select bank0
   452  0790  1303               	bcf	3,6	;RP1=0, select bank0
   453  0791  00A7               	movwf	??_main
   454  0792  0804               	movf	4,w
   455  0793  00A8               	movwf	??_main+1
   456  0794  3011               	movlw	17
   457  0795  00A9               	movwf	??_main+2
   458  0796                     u230:	
   459  0796  0827               	movf	??_main,w
   460  0797  0084               	movwf	4
   461  0798  1383               	bcf	3,7	;select IRP bank0
   462  0799  0800               	movf	0,w
   463  079A  00AA               	movwf	??_main+3
   464  079B  0AA7               	incf	??_main,f
   465  079C  0828               	movf	??_main+1,w
   466  079D  0084               	movwf	4
   467  079E  082A               	movf	??_main+3,w
   468  079F  0080               	movwf	0
   469  07A0  0AA8               	incf	??_main+1,f
   470  07A1  0BA9               	decfsz	??_main+2,f
   471  07A2  2F96               	goto	u230
   472                           
   473                           ;LCD_BETTER.c: 146:     char abc[]="THIS IS UPENDRA";
   474  07A3  303C               	movlw	main@abc& (0+255)
   475  07A4  0084               	movwf	4
   476  07A5  305D               	movlw	low main@F935
   477  07A6  00A7               	movwf	??_main
   478  07A7  0804               	movf	4,w
   479  07A8  00A8               	movwf	??_main+1
   480  07A9  3010               	movlw	16
   481  07AA  00A9               	movwf	??_main+2
   482  07AB                     u240:	
   483  07AB  0827               	movf	??_main,w
   484  07AC  0084               	movwf	4
   485  07AD  1383               	bcf	3,7	;select IRP bank0
   486  07AE  0800               	movf	0,w
   487  07AF  00AA               	movwf	??_main+3
   488  07B0  0AA7               	incf	??_main,f
   489  07B1  0828               	movf	??_main+1,w
   490  07B2  0084               	movwf	4
   491  07B3  082A               	movf	??_main+3,w
   492  07B4  0080               	movwf	0
   493  07B5  0AA8               	incf	??_main+1,f
   494  07B6  0BA9               	decfsz	??_main+2,f
   495  07B7  2FAB               	goto	u240
   496                           
   497                           ;LCD_BETTER.c: 147:     TRISD =0X00;
   498  07B8  1683               	bsf	3,5	;RP0=1, select bank1
   499  07B9  1303               	bcf	3,6	;RP1=0, select bank1
   500  07BA  0188               	clrf	8	;volatile
   501                           
   502                           ;LCD_BETTER.c: 148:     Lcd_Start();
   503  07BB  120A  118A  2739  120A  118A  	fcall	_Lcd_Start
   504  07C0                     l919:	
   505                           
   506                           ;LCD_BETTER.c: 151:     {;LCD_BETTER.c: 152:         Lcd_Clear();
   507  07C0  120A  118A  2633  120A  118A  	fcall	_Lcd_Clear
   508                           
   509                           ;LCD_BETTER.c: 153:         Lcd_Set_Cursor(1,1);
   510  07C5  01F4               	clrf	Lcd_Set_Cursor@b
   511  07C6  0AF4               	incf	Lcd_Set_Cursor@b,f
   512  07C7  3001               	movlw	1
   513  07C8  120A  118A  26EF  120A  118A  	fcall	_Lcd_Set_Cursor
   514                           
   515                           ;LCD_BETTER.c: 154:         Lcd_Print_String(str);
   516  07CD  302B               	movlw	(low (main@str| 0))& (0+255)
   517  07CE  120A  118A  26A4  120A  118A  	fcall	_Lcd_Print_String
   518                           
   519                           ;LCD_BETTER.c: 155:         Lcd_Set_Cursor(2,1);
   520  07D3  01F4               	clrf	Lcd_Set_Cursor@b
   521  07D4  0AF4               	incf	Lcd_Set_Cursor@b,f
   522  07D5  3002               	movlw	2
   523  07D6  120A  118A  26EF  120A  118A  	fcall	_Lcd_Set_Cursor
   524                           
   525                           ;LCD_BETTER.c: 156:         Lcd_Print_String(abc);
   526  07DB  303C               	movlw	(low (main@abc| 0))& (0+255)
   527  07DC  120A  118A  26A4  120A  118A  	fcall	_Lcd_Print_String
   528                           
   529                           ;LCD_BETTER.c: 159:         _delay((unsigned long)((300)*(20000000/4000.0)));
   530  07E1  3008               	movlw	8
   531  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   532  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   533  07E4  00A9               	movwf	??_main+2
   534  07E5  309D               	movlw	157
   535  07E6  00A8               	movwf	??_main+1
   536  07E7  3005               	movlw	5
   537  07E8  00A7               	movwf	??_main
   538  07E9                     u257:	
   539  07E9  0BA7               	decfsz	??_main,f
   540  07EA  2FE9               	goto	u257
   541  07EB  0BA8               	decfsz	??_main+1,f
   542  07EC  2FE9               	goto	u257
   543  07ED  0BA9               	decfsz	??_main+2,f
   544  07EE  2FE9               	goto	u257
   545  07EF  2FC0               	goto	l919
   546  07F0                     __end_of_main:	
   547                           
   548                           	psect	text1
   549  0739                     __ptext1:	
   550 ;; *************** function _Lcd_Start *****************
   551 ;; Defined at:
   552 ;;		line 94 in file "LCD_BETTER.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  i               4    0        long 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         4       0       0       0       0
   568 ;;      Temps:          2       0       0       0       0
   569 ;;      Totals:         6       0       0       0       0
   570 ;;Total ram usage:        6 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    2
   573 ;; This function calls:
   574 ;;		_Lcd_Cmd
   575 ;;		_Lcd_SetBit
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _Lcd_Start
   583  0739                     _Lcd_Start:	
   584                           
   585                           ;LCD_BETTER.c: 96:   Lcd_SetBit(0x00);
   586                           
   587                           ;incstack = 0
   588                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
   589  0739  3000               	movlw	0
   590  073A  120A  118A  264F  120A  118A  	fcall	_Lcd_SetBit
   591                           
   592                           ;LCD_BETTER.c: 98:   Lcd_Cmd(0x03);
   593  073F  3003               	movlw	3
   594  0740  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   595                           
   596                           ;LCD_BETTER.c: 99:     _delay((unsigned long)((5)*(20000000/4000.0)));
   597  0745  3021               	movlw	33
   598  0746  00F5               	movwf	??_Lcd_Start+1
   599  0747  3076               	movlw	118
   600  0748  00F4               	movwf	??_Lcd_Start
   601  0749                     u267:	
   602  0749  0BF4               	decfsz	??_Lcd_Start,f
   603  074A  2F49               	goto	u267
   604  074B  0BF5               	decfsz	??_Lcd_Start+1,f
   605  074C  2F49               	goto	u267
   606  074D  0000               	nop
   607                           
   608                           ;LCD_BETTER.c: 100:   Lcd_Cmd(0x03);
   609  074E  3003               	movlw	3
   610  074F  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   611                           
   612                           ;LCD_BETTER.c: 101:     _delay((unsigned long)((11)*(20000000/4000.0)));
   613  0754  3048               	movlw	72
   614  0755  00F5               	movwf	??_Lcd_Start+1
   615  0756  306C               	movlw	108
   616  0757  00F4               	movwf	??_Lcd_Start
   617  0758                     u277:	
   618  0758  0BF4               	decfsz	??_Lcd_Start,f
   619  0759  2F58               	goto	u277
   620  075A  0BF5               	decfsz	??_Lcd_Start+1,f
   621  075B  2F58               	goto	u277
   622  075C  0000               	nop
   623                           
   624                           ;LCD_BETTER.c: 102:   Lcd_Cmd(0x03);
   625  075D  3003               	movlw	3
   626  075E  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   627                           
   628                           ;LCD_BETTER.c: 103:   Lcd_Cmd(0x02);
   629  0763  3002               	movlw	2
   630  0764  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   631                           
   632                           ;LCD_BETTER.c: 104:   Lcd_Cmd(0x02);
   633  0769  3002               	movlw	2
   634  076A  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   635                           
   636                           ;LCD_BETTER.c: 105:   Lcd_Cmd(0x08);
   637  076F  3008               	movlw	8
   638  0770  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   639                           
   640                           ;LCD_BETTER.c: 106:   Lcd_Cmd(0x00);
   641  0775  3000               	movlw	0
   642  0776  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   643                           
   644                           ;LCD_BETTER.c: 107:   Lcd_Cmd(0x0C);
   645  077B  300C               	movlw	12
   646  077C  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   647                           
   648                           ;LCD_BETTER.c: 108:   Lcd_Cmd(0x00);
   649  0781  3000               	movlw	0
   650  0782  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   651                           
   652                           ;LCD_BETTER.c: 109:   Lcd_Cmd(0x06);
   653  0787  3006               	movlw	6
   654  0788  120A  118A  2669   	fcall	_Lcd_Cmd
   655  078B  0008               	return
   656  078C                     __end_of_Lcd_Start:	
   657                           
   658                           	psect	text2
   659  06EF                     __ptext2:	
   660 ;; *************** function _Lcd_Set_Cursor *****************
   661 ;; Defined at:
   662 ;;		line 74 in file "LCD_BETTER.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  a               1    wreg     unsigned char 
   665 ;;  b               1    4[COMMON] unsigned char 
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  a               1    7[COMMON] unsigned char 
   668 ;;  temp            1   10[COMMON] unsigned char 
   669 ;;  y               1    9[COMMON] unsigned char 
   670 ;;  z               1    8[COMMON] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, pclath, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         1       0       0       0       0
   681 ;;      Locals:         4       0       0       0       0
   682 ;;      Temps:          2       0       0       0       0
   683 ;;      Totals:         7       0       0       0       0
   684 ;;Total ram usage:        7 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    2
   687 ;; This function calls:
   688 ;;		_Lcd_Cmd
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _Lcd_Set_Cursor
   696  06EF                     _Lcd_Set_Cursor:	
   697                           
   698                           ;incstack = 0
   699                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   700                           ;Lcd_Set_Cursor@a stored from wreg
   701  06EF  00F7               	movwf	Lcd_Set_Cursor@a
   702                           
   703                           ;LCD_BETTER.c: 74: void Lcd_Set_Cursor(char a, char b);LCD_BETTER.c: 75: {;LCD_BETTER.c:
      +                           76:     char temp,z,y;;LCD_BETTER.c: 77:     if(a== 1)
   704  06F0  0377               	decf	Lcd_Set_Cursor@a,w
   705  06F1  1D03               	btfss	3,2
   706  06F2  2F14               	goto	l861
   707                           
   708                           ;LCD_BETTER.c: 78:     {;LCD_BETTER.c: 79:       temp = 0x80 + b - 1;
   709  06F3  0874               	movf	Lcd_Set_Cursor@b,w
   710  06F4  3E7F               	addlw	127
   711  06F5  00F5               	movwf	??_Lcd_Set_Cursor
   712  06F6  0875               	movf	??_Lcd_Set_Cursor,w
   713  06F7  00FA               	movwf	Lcd_Set_Cursor@temp
   714                           
   715                           ;LCD_BETTER.c: 80:         z = temp>>4;
   716  06F8  087A               	movf	Lcd_Set_Cursor@temp,w
   717  06F9  00F5               	movwf	??_Lcd_Set_Cursor
   718  06FA  3004               	movlw	4
   719  06FB                     u195:	
   720  06FB  1003               	clrc
   721  06FC  0CF5               	rrf	??_Lcd_Set_Cursor,f
   722  06FD  3EFF               	addlw	-1
   723  06FE  1D03               	skipz
   724  06FF  2EFB               	goto	u195
   725  0700  0875               	movf	??_Lcd_Set_Cursor,w
   726  0701  00F6               	movwf	??_Lcd_Set_Cursor+1
   727  0702  0876               	movf	??_Lcd_Set_Cursor+1,w
   728  0703  00F8               	movwf	Lcd_Set_Cursor@z
   729                           
   730                           ;LCD_BETTER.c: 81:         y = temp & 0x0F;
   731  0704  087A               	movf	Lcd_Set_Cursor@temp,w
   732  0705  390F               	andlw	15
   733  0706  00F5               	movwf	??_Lcd_Set_Cursor
   734  0707  0875               	movf	??_Lcd_Set_Cursor,w
   735  0708  00F9               	movwf	Lcd_Set_Cursor@y
   736                           
   737                           ;LCD_BETTER.c: 82:         Lcd_Cmd(z);
   738  0709  0878               	movf	Lcd_Set_Cursor@z,w
   739  070A  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   740                           
   741                           ;LCD_BETTER.c: 83:         Lcd_Cmd(y);
   742  070F  0879               	movf	Lcd_Set_Cursor@y,w
   743  0710  120A  118A  2669   	fcall	_Lcd_Cmd
   744                           
   745                           ;LCD_BETTER.c: 84:     }
   746  0713  0008               	return
   747  0714                     l861:	
   748  0714  3002               	movlw	2
   749  0715  0677               	xorwf	Lcd_Set_Cursor@a,w
   750  0716  1D03               	btfss	3,2
   751  0717  0008               	return
   752                           
   753                           ;LCD_BETTER.c: 86:     {;LCD_BETTER.c: 87:         temp = 0xC0 + b - 1;
   754  0718  0874               	movf	Lcd_Set_Cursor@b,w
   755  0719  3EBF               	addlw	191
   756  071A  00F5               	movwf	??_Lcd_Set_Cursor
   757  071B  0875               	movf	??_Lcd_Set_Cursor,w
   758  071C  00FA               	movwf	Lcd_Set_Cursor@temp
   759                           
   760                           ;LCD_BETTER.c: 88:         z = temp>>4;
   761  071D  087A               	movf	Lcd_Set_Cursor@temp,w
   762  071E  00F5               	movwf	??_Lcd_Set_Cursor
   763  071F  3004               	movlw	4
   764  0720                     u215:	
   765  0720  1003               	clrc
   766  0721  0CF5               	rrf	??_Lcd_Set_Cursor,f
   767  0722  3EFF               	addlw	-1
   768  0723  1D03               	skipz
   769  0724  2F20               	goto	u215
   770  0725  0875               	movf	??_Lcd_Set_Cursor,w
   771  0726  00F6               	movwf	??_Lcd_Set_Cursor+1
   772  0727  0876               	movf	??_Lcd_Set_Cursor+1,w
   773  0728  00F8               	movwf	Lcd_Set_Cursor@z
   774                           
   775                           ;LCD_BETTER.c: 89:         y = temp & 0x0F;
   776  0729  087A               	movf	Lcd_Set_Cursor@temp,w
   777  072A  390F               	andlw	15
   778  072B  00F5               	movwf	??_Lcd_Set_Cursor
   779  072C  0875               	movf	??_Lcd_Set_Cursor,w
   780  072D  00F9               	movwf	Lcd_Set_Cursor@y
   781                           
   782                           ;LCD_BETTER.c: 90:         Lcd_Cmd(z);
   783  072E  0878               	movf	Lcd_Set_Cursor@z,w
   784  072F  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
   785                           
   786                           ;LCD_BETTER.c: 91:         Lcd_Cmd(y);
   787  0734  0879               	movf	Lcd_Set_Cursor@y,w
   788  0735  120A  118A  2669   	fcall	_Lcd_Cmd
   789  0738  0008               	return
   790  0739                     __end_of_Lcd_Set_Cursor:	
   791                           
   792                           	psect	text3
   793  06A4                     __ptext3:	
   794 ;; *************** function _Lcd_Print_String *****************
   795 ;; Defined at:
   796 ;;		line 128 in file "LCD_BETTER.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  a               1    wreg     PTR unsigned char 
   799 ;;		 -> main@abc(16), main@str(17), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  a               1    2[BANK0 ] PTR unsigned char 
   802 ;;		 -> main@abc(16), main@str(17), 
   803 ;;  i               2    0[BANK0 ] int 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       3       0       0       0
   815 ;;      Temps:          1       0       0       0       0
   816 ;;      Totals:         1       3       0       0       0
   817 ;;Total ram usage:        4 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		_Lcd_Print_Char
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _Lcd_Print_String
   829  06A4                     _Lcd_Print_String:	
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   833                           ;Lcd_Print_String@a stored from wreg
   834  06A4  1283               	bcf	3,5	;RP0=0, select bank0
   835  06A5  1303               	bcf	3,6	;RP1=0, select bank0
   836  06A6  00A2               	movwf	Lcd_Print_String@a
   837                           
   838                           ;LCD_BETTER.c: 128: void Lcd_Print_String(char *a);LCD_BETTER.c: 129: {;LCD_BETTER.c: 13
      +                          0:     int i;;LCD_BETTER.c: 131:     for(i=0;a[i]!='\0';i++)
   839  06A7  01A0               	clrf	Lcd_Print_String@i
   840  06A8  01A1               	clrf	Lcd_Print_String@i+1
   841  06A9                     l911:	
   842  06A9  0820               	movf	Lcd_Print_String@i,w
   843  06AA  0722               	addwf	Lcd_Print_String@a,w
   844  06AB  00FD               	movwf	??_Lcd_Print_String
   845  06AC  087D               	movf	??_Lcd_Print_String,w
   846  06AD  0084               	movwf	4
   847  06AE  1383               	bcf	3,7	;select IRP bank0
   848  06AF  0800               	movf	0,w
   849  06B0  1903               	btfsc	3,2
   850  06B1  0008               	return
   851                           
   852                           ;LCD_BETTER.c: 132:        Lcd_Print_Char(a[i]);
   853  06B2  0820               	movf	Lcd_Print_String@i,w
   854  06B3  0722               	addwf	Lcd_Print_String@a,w
   855  06B4  00FD               	movwf	??_Lcd_Print_String
   856  06B5  087D               	movf	??_Lcd_Print_String,w
   857  06B6  0084               	movwf	4
   858  06B7  0800               	movf	0,w
   859  06B8  120A  118A  26C6  120A  118A  	fcall	_Lcd_Print_Char
   860  06BD  3001               	movlw	1
   861  06BE  1283               	bcf	3,5	;RP0=0, select bank0
   862  06BF  1303               	bcf	3,6	;RP1=0, select bank0
   863  06C0  07A0               	addwf	Lcd_Print_String@i,f
   864  06C1  1803               	skipnc
   865  06C2  0AA1               	incf	Lcd_Print_String@i+1,f
   866  06C3  3000               	movlw	0
   867  06C4  07A1               	addwf	Lcd_Print_String@i+1,f
   868  06C5  2EA9               	goto	l911
   869  06C6                     __end_of_Lcd_Print_String:	
   870                           
   871                           	psect	text4
   872  06C6                     __ptext4:	
   873 ;; *************** function _Lcd_Print_Char *****************
   874 ;; Defined at:
   875 ;;		line 112 in file "LCD_BETTER.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  data            1    wreg     unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  data            1    4[COMMON] unsigned char 
   880 ;;  i               4    0        long 
   881 ;;  i               4    0        long 
   882 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
   883 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0, pclath, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0       0       0       0       0
   894 ;;      Locals:        11       0       0       0       0
   895 ;;      Temps:          1       0       0       0       0
   896 ;;      Totals:        12       0       0       0       0
   897 ;;Total ram usage:       12 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    1
   900 ;; This function calls:
   901 ;;		_Lcd_SetBit
   902 ;; This function is called by:
   903 ;;		_Lcd_Print_String
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _Lcd_Print_Char
   909  06C6                     _Lcd_Print_Char:	
   910                           
   911                           ;incstack = 0
   912                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+pclath+cstack]
   913                           ;Lcd_Print_Char@data stored from wreg
   914  06C6  00F4               	movwf	Lcd_Print_Char@data
   915                           
   916                           ;LCD_BETTER.c: 112: void Lcd_Print_Char(char data);LCD_BETTER.c: 113: {;LCD_BETTER.c: 11
      +                          4:    char Lower_Nibble,Upper_Nibble;;LCD_BETTER.c: 115:    Lower_Nibble = data&0x0F;
   917  06C7  0874               	movf	Lcd_Print_Char@data,w
   918  06C8  390F               	andlw	15
   919  06C9  00F1               	movwf	??_Lcd_Print_Char
   920  06CA  0871               	movf	??_Lcd_Print_Char,w
   921  06CB  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
   922                           
   923                           ;LCD_BETTER.c: 116:    Upper_Nibble = data&0xF0;
   924  06CC  0874               	movf	Lcd_Print_Char@data,w
   925  06CD  39F0               	andlw	240
   926  06CE  00F1               	movwf	??_Lcd_Print_Char
   927  06CF  0871               	movf	??_Lcd_Print_Char,w
   928  06D0  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
   929                           
   930                           ;LCD_BETTER.c: 117:    RD2 = 1;
   931  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   932  06D2  1303               	bcf	3,6	;RP1=0, select bank0
   933  06D3  1508               	bsf	8,2	;volatile
   934                           
   935                           ;LCD_BETTER.c: 118:    Lcd_SetBit(Upper_Nibble>>4);
   936  06D4  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
   937  06D5  00F1               	movwf	??_Lcd_Print_Char
   938  06D6  3004               	movlw	4
   939  06D7                     u175:	
   940  06D7  1003               	clrc
   941  06D8  0CF1               	rrf	??_Lcd_Print_Char,f
   942  06D9  3EFF               	addlw	-1
   943  06DA  1D03               	skipz
   944  06DB  2ED7               	goto	u175
   945  06DC  0871               	movf	??_Lcd_Print_Char,w
   946  06DD  120A  118A  264F  120A  118A  	fcall	_Lcd_SetBit
   947                           
   948                           ;LCD_BETTER.c: 119:    RD3 = 1;
   949  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   950  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   951  06E4  1588               	bsf	8,3	;volatile
   952                           
   953                           ;LCD_BETTER.c: 121:    RD3 = 0;
   954  06E5  1188               	bcf	8,3	;volatile
   955                           
   956                           ;LCD_BETTER.c: 122:    Lcd_SetBit(Lower_Nibble);
   957  06E6  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
   958  06E7  120A  118A  264F   	fcall	_Lcd_SetBit
   959                           
   960                           ;LCD_BETTER.c: 123:    RD3 = 1;
   961  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   962  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   963  06EC  1588               	bsf	8,3	;volatile
   964                           
   965                           ;LCD_BETTER.c: 125:    RD3 = 0;
   966  06ED  1188               	bcf	8,3	;volatile
   967  06EE  0008               	return
   968  06EF                     __end_of_Lcd_Print_Char:	
   969                           
   970                           	psect	text5
   971  0633                     __ptext5:	
   972 ;; *************** function _Lcd_Clear *****************
   973 ;; Defined at:
   974 ;;		line 68 in file "LCD_BETTER.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0
   990 ;;      Temps:          0       0       0       0       0
   991 ;;      Totals:         0       0       0       0       0
   992 ;;Total ram usage:        0 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    2
   995 ;; This function calls:
   996 ;;		_Lcd_Cmd
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function _Lcd_Clear
  1004  0633                     _Lcd_Clear:	
  1005                           
  1006                           ;LCD_BETTER.c: 70:     Lcd_Cmd(0);
  1007                           
  1008                           ;incstack = 0
  1009                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1010  0633  3000               	movlw	0
  1011  0634  120A  118A  2669  120A  118A  	fcall	_Lcd_Cmd
  1012                           
  1013                           ;LCD_BETTER.c: 71:     Lcd_Cmd(1);
  1014  0639  3001               	movlw	1
  1015  063A  120A  118A  2669   	fcall	_Lcd_Cmd
  1016  063D  0008               	return
  1017  063E                     __end_of_Lcd_Clear:	
  1018                           
  1019                           	psect	text6
  1020  0669                     __ptext6:	
  1021 ;; *************** function _Lcd_Cmd *****************
  1022 ;; Defined at:
  1023 ;;		line 59 in file "LCD_BETTER.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  a               1    wreg     unsigned char 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  a               1    3[COMMON] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0, pclath, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         1       0       0       0       0
  1039 ;;      Temps:          2       0       0       0       0
  1040 ;;      Totals:         3       0       0       0       0
  1041 ;;Total ram usage:        3 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    1
  1044 ;; This function calls:
  1045 ;;		_Lcd_SetBit
  1046 ;; This function is called by:
  1047 ;;		_Lcd_Clear
  1048 ;;		_Lcd_Set_Cursor
  1049 ;;		_Lcd_Start
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _Lcd_Cmd
  1055  0669                     _Lcd_Cmd:	
  1056                           
  1057                           ;incstack = 0
  1058                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1059                           ;Lcd_Cmd@a stored from wreg
  1060  0669  00F3               	movwf	Lcd_Cmd@a
  1061                           
  1062                           ;LCD_BETTER.c: 59: void Lcd_Cmd(char a);LCD_BETTER.c: 60: {;LCD_BETTER.c: 61:     RD2 = 
      +                          0;
  1063  066A  1283               	bcf	3,5	;RP0=0, select bank0
  1064  066B  1303               	bcf	3,6	;RP1=0, select bank0
  1065  066C  1108               	bcf	8,2	;volatile
  1066                           
  1067                           ;LCD_BETTER.c: 62:     Lcd_SetBit(a);
  1068  066D  0873               	movf	Lcd_Cmd@a,w
  1069  066E  120A  118A  264F  120A  118A  	fcall	_Lcd_SetBit
  1070                           
  1071                           ;LCD_BETTER.c: 63:     RD3 = 1;
  1072  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0675  1588               	bsf	8,3	;volatile
  1075                           
  1076                           ;LCD_BETTER.c: 64:         _delay((unsigned long)((4)*(20000000/4000.0)));
  1077  0676  301A               	movlw	26
  1078  0677  00F2               	movwf	??_Lcd_Cmd+1
  1079  0678  30F8               	movlw	248
  1080  0679  00F1               	movwf	??_Lcd_Cmd
  1081  067A                     u287:	
  1082  067A  0BF1               	decfsz	??_Lcd_Cmd,f
  1083  067B  2E7A               	goto	u287
  1084  067C  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1085  067D  2E7A               	goto	u287
  1086  067E  0000               	nop
  1087                           
  1088                           ;LCD_BETTER.c: 65:         RD3 = 0;
  1089  067F  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0680  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0681  1188               	bcf	8,3	;volatile
  1092  0682  0008               	return
  1093  0683                     __end_of_Lcd_Cmd:	
  1094                           
  1095                           	psect	text7
  1096  064F                     __ptext7:	
  1097 ;; *************** function _Lcd_SetBit *****************
  1098 ;; Defined at:
  1099 ;;		line 36 in file "LCD_BETTER.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  data_bit        1    wreg     unsigned char 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  data_bit        1    0[COMMON] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         0       0       0       0       0
  1114 ;;      Locals:         1       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0
  1116 ;;      Totals:         1       0       0       0       0
  1117 ;;Total ram usage:        1 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_Lcd_Cmd
  1123 ;;		_Lcd_Start
  1124 ;;		_Lcd_Print_Char
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           
  1129                           ;psect for function _Lcd_SetBit
  1130  064F                     _Lcd_SetBit:	
  1131                           
  1132                           ;incstack = 0
  1133                           ; Regs used in _Lcd_SetBit: [wreg]
  1134                           ;Lcd_SetBit@data_bit stored from wreg
  1135  064F  00F0               	movwf	Lcd_SetBit@data_bit
  1136                           
  1137                           ;LCD_BETTER.c: 36: void Lcd_SetBit(char data_bit);LCD_BETTER.c: 37: {;LCD_BETTER.c: 38: 
      +                              if(data_bit& 1)
  1138  0650  1C70               	btfss	Lcd_SetBit@data_bit,0
  1139  0651  2E56               	goto	l21
  1140                           
  1141                           ;LCD_BETTER.c: 39:         RD4 = 1;
  1142  0652  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0653  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0654  1608               	bsf	8,4	;volatile
  1145  0655  2E59               	goto	l22
  1146  0656                     l21:	
  1147                           ;LCD_BETTER.c: 40:     else
  1148                           
  1149                           
  1150                           ;LCD_BETTER.c: 41:         RD4 = 0;
  1151  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0658  1208               	bcf	8,4	;volatile
  1154  0659                     l22:	
  1155                           
  1156                           ;LCD_BETTER.c: 43:     if(data_bit& 2)
  1157  0659  1CF0               	btfss	Lcd_SetBit@data_bit,1
  1158  065A  2E5D               	goto	l23
  1159                           
  1160                           ;LCD_BETTER.c: 44:         RD5 = 1;
  1161  065B  1688               	bsf	8,5	;volatile
  1162  065C  2E5E               	goto	l24
  1163  065D                     l23:	
  1164                           ;LCD_BETTER.c: 45:     else
  1165                           
  1166                           
  1167                           ;LCD_BETTER.c: 46:         RD5 = 0;
  1168  065D  1288               	bcf	8,5	;volatile
  1169  065E                     l24:	
  1170                           
  1171                           ;LCD_BETTER.c: 48:     if(data_bit& 4)
  1172  065E  1D70               	btfss	Lcd_SetBit@data_bit,2
  1173  065F  2E62               	goto	l25
  1174                           
  1175                           ;LCD_BETTER.c: 49:         RD6 = 1;
  1176  0660  1708               	bsf	8,6	;volatile
  1177  0661  2E63               	goto	l26
  1178  0662                     l25:	
  1179                           ;LCD_BETTER.c: 50:     else
  1180                           
  1181                           
  1182                           ;LCD_BETTER.c: 51:         RD6 = 0;
  1183  0662  1308               	bcf	8,6	;volatile
  1184  0663                     l26:	
  1185                           
  1186                           ;LCD_BETTER.c: 53:     if(data_bit& 8)
  1187  0663  1DF0               	btfss	Lcd_SetBit@data_bit,3
  1188  0664  2E67               	goto	l27
  1189                           
  1190                           ;LCD_BETTER.c: 54:         RD7 = 1;
  1191  0665  1788               	bsf	8,7	;volatile
  1192  0666  0008               	return
  1193  0667                     l27:	
  1194                           ;LCD_BETTER.c: 55:     else
  1195                           
  1196                           
  1197                           ;LCD_BETTER.c: 56:         RD7 = 0;
  1198  0667  1388               	bcf	8,7	;volatile
  1199  0668  0008               	return
  1200  0669                     __end_of_Lcd_SetBit:	
  1201  007E                     btemp	set	126	;btemp
  1202  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> main@abc(BANK0[16]), main@str(BANK0[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Print_String
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit

Critical Paths under _main in BANK0

    _main->_Lcd_Print_String

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    39      4    1362
                                              3 BANK0     41    37      4
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            6     6      0     244
                                              4 COMMON     6     6      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     4     4      0     426
                                             13 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                      12    12      0     270
                                              1 COMMON    12    12      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 31 14:06:04 2019

                         pc 0002                 __CFG_CP$OFF 0000                          l21 0656  
                        l22 0659                          l23 065D                          l24 065E  
                        l25 0662                          l26 0663                          l27 0667  
                        fsr 0004                         l911 06A9                         l861 0714  
                       l919 07C0                         _RD2 0042                         _RD3 0043  
                       _RD4 0044                         _RD5 0045                         _RD6 0046  
                       _RD7 0047                         u230 0796                         u215 0720  
                       u240 07AB                         u175 06D7                         u257 07E9  
              __CFG_CPD$OFF 0000                         u195 06FB                         u267 0749  
                       u277 0758                         u287 067A                         fsr0 0004  
                       indf 0000                __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000  
              __CFG_WRT$OFF 0000                        _main 078C                        btemp 007E  
                      start 0000          Lcd_Print_Char@data 0074             __end_of_Lcd_Cmd 0683  
                _Lcd_SetBit 064F                       ?_main 0023               __CFG_WDTE$OFF 0000  
   __size_of_Lcd_Set_Cursor 004A                       _TRISD 0088              __CFG_BOREN$OFF 0000  
                     pclath 000A   __size_of_Lcd_Print_String 0022                       status 0003  
                     wtemp0 007E     __size_of_Lcd_Print_Char 0029             __initialization 07F0  
              __end_of_main 07F0                      ??_main 0027          __size_of_Lcd_Clear 000B  
        __size_of_Lcd_Start 0053                   ??_Lcd_Cmd 0071              __CFG_PWRTE$OFF 0000  
               ?_Lcd_SetBit 0070             Lcd_Set_Cursor@a 0077             Lcd_Set_Cursor@b 0074  
           Lcd_Set_Cursor@y 0079             Lcd_Set_Cursor@z 0078     __end_of__initialization 07FC  
         __end_of_Lcd_Clear 063E           __end_of_Lcd_Start 078C              __pcstackCOMMON 0070  
              __pidataBANK0 0683              _Lcd_Set_Cursor 06EF            _Lcd_Print_String 06A4  
       __size_of_Lcd_SetBit 001A              _Lcd_Print_Char 06C6                  __pmaintext 078C  
        Lcd_SetBit@data_bit 0070      __end_of_Lcd_Set_Cursor 0739                     _Lcd_Cmd 0669  
    __end_of_Lcd_Print_Char 06EF             ?_Lcd_Set_Cursor 0074                     __ptext1 0739  
                   __ptext2 06EF                     __ptext3 06A4                     __ptext4 06C6  
                   __ptext5 0633                     __ptext6 0669                     __ptext7 064F  
                   main@abc 003C                     main@str 002B        end_of_initialization 07FC  
           ?_Lcd_Print_Char 0070                ??_Lcd_SetBit 0070          __end_of_Lcd_SetBit 0669  
                 _Lcd_Clear 0633                   _Lcd_Start 0739    __end_of_Lcd_Print_String 06C6  
       start_initialization 07F0           Lcd_Print_String@a 0022           Lcd_Print_String@i 0020  
                ?_Lcd_Clear 0070                  init_fetch0 063E                  ?_Lcd_Start 0070  
               __pdataBANK0 004C  Lcd_Print_Char@Lower_Nibble 0072                   ___latbits 0002  
             __pcstackBANK0 0020                    ?_Lcd_Cmd 0070            ??_Lcd_Set_Cursor 0075  
          ??_Lcd_Print_Char 0071                    Lcd_Cmd@a 0073                 ??_Lcd_Clear 0074  
               ??_Lcd_Start 0074            __size_of_Lcd_Cmd 001A           ?_Lcd_Print_String 0070  
        ??_Lcd_Print_String 007D               __size_of_main 0064                    main@F933 004C  
                  main@F935 005D  Lcd_Print_Char@Upper_Nibble 0073                    main@argc 0023  
                  main@argv 0025                    init_ram0 0642          Lcd_Set_Cursor@temp 007A  
