

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jul 26 14:47:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.05
    44                           ; Generated 20/12/2018 GMT
    45                           ; 
    46                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	strings
   199  0800                     __pstrings:	
   200  0800                     stringtab:	
   201  0800                     __stringtab:	
   202                           
   203                           ;	String table - string pointers are 1 byte each
   204  0800  1BFF               	btfsc	btemp+1,7
   205  0801  280A               	ljmp	stringcode
   206  0802  1383               	bcf	3,7
   207  0803  187F               	btfsc	btemp+1,0
   208  0804  1783               	bsf	3,7
   209  0805  0800               	movf	0,w
   210  0806  0A84               	incf	4,f
   211  0807  1903               	skipnz
   212  0808  0AFF               	incf	btemp+1,f
   213  0809  0008               	return
   214  080A                     stringcode:	
   215  080A                     stringdir:	
   216  080A  3008               	movlw	high stringdir
   217  080B  008A               	movwf	10
   218  080C  0804               	movf	4,w
   219  080D  0A84               	incf	4,f
   220  080E  0782               	addwf	2,f
   221  080F                     __stringbase:	
   222  080F  3400               	retlw	0
   223  0810                     __end_of__stringtab:	
   224  0810                     __powers_:	
   225  0810  3400               	retlw	0
   226  0811  3400               	retlw	0
   227  0812  3480               	retlw	128
   228  0813  343F               	retlw	63
   229  0814  3400               	retlw	0
   230  0815  3400               	retlw	0
   231  0816  3420               	retlw	32
   232  0817  3441               	retlw	65
   233  0818  3400               	retlw	0
   234  0819  3400               	retlw	0
   235  081A  34C8               	retlw	200
   236  081B  3442               	retlw	66
   237  081C  3400               	retlw	0
   238  081D  3400               	retlw	0
   239  081E  347A               	retlw	122
   240  081F  3444               	retlw	68
   241  0820  3400               	retlw	0
   242  0821  3440               	retlw	64
   243  0822  341C               	retlw	28
   244  0823  3446               	retlw	70
   245  0824  3400               	retlw	0
   246  0825  3450               	retlw	80
   247  0826  34C3               	retlw	195
   248  0827  3447               	retlw	71
   249  0828  3400               	retlw	0
   250  0829  3424               	retlw	36
   251  082A  3474               	retlw	116
   252  082B  3449               	retlw	73
   253  082C  3480               	retlw	128
   254  082D  3496               	retlw	150
   255  082E  3418               	retlw	24
   256  082F  344B               	retlw	75
   257  0830  3420               	retlw	32
   258  0831  34BC               	retlw	188
   259  0832  34BE               	retlw	190
   260  0833  344C               	retlw	76
   261  0834  3428               	retlw	40
   262  0835  346B               	retlw	107
   263  0836  346E               	retlw	110
   264  0837  344E               	retlw	78
   265  0838  34F9               	retlw	249
   266  0839  3402               	retlw	2
   267  083A  3415               	retlw	21
   268  083B  3450               	retlw	80
   269  083C  34EC               	retlw	236
   270  083D  3478               	retlw	120
   271  083E  34AD               	retlw	173
   272  083F  3460               	retlw	96
   273  0840  34CA               	retlw	202
   274  0841  34F2               	retlw	242
   275  0842  3449               	retlw	73
   276  0843  3471               	retlw	113
   277  0844                     __end_of__powers_:	
   278  0844                     __npowers_:	
   279  0844  3400               	retlw	0
   280  0845  3400               	retlw	0
   281  0846  3480               	retlw	128
   282  0847  343F               	retlw	63
   283  0848  34CD               	retlw	205
   284  0849  34CC               	retlw	204
   285  084A  34CC               	retlw	204
   286  084B  343D               	retlw	61
   287  084C  340A               	retlw	10
   288  084D  34D7               	retlw	215
   289  084E  3423               	retlw	35
   290  084F  343C               	retlw	60
   291  0850  346F               	retlw	111
   292  0851  3412               	retlw	18
   293  0852  3483               	retlw	131
   294  0853  343A               	retlw	58
   295  0854  3417               	retlw	23
   296  0855  34B7               	retlw	183
   297  0856  34D1               	retlw	209
   298  0857  3438               	retlw	56
   299  0858  34AC               	retlw	172
   300  0859  34C5               	retlw	197
   301  085A  3427               	retlw	39
   302  085B  3437               	retlw	55
   303  085C  34BD               	retlw	189
   304  085D  3437               	retlw	55
   305  085E  3486               	retlw	134
   306  085F  3435               	retlw	53
   307  0860  3495               	retlw	149
   308  0861  34BF               	retlw	191
   309  0862  34D6               	retlw	214
   310  0863  3433               	retlw	51
   311  0864  3477               	retlw	119
   312  0865  34CC               	retlw	204
   313  0866  342B               	retlw	43
   314  0867  3432               	retlw	50
   315  0868  345F               	retlw	95
   316  0869  3470               	retlw	112
   317  086A  3489               	retlw	137
   318  086B  3430               	retlw	48
   319  086C  34FF               	retlw	255
   320  086D  34E6               	retlw	230
   321  086E  34DB               	retlw	219
   322  086F  342E               	retlw	46
   323  0870  3408               	retlw	8
   324  0871  34E5               	retlw	229
   325  0872  343C               	retlw	60
   326  0873  341E               	retlw	30
   327  0874  3460               	retlw	96
   328  0875  3442               	retlw	66
   329  0876  34A2               	retlw	162
   330  0877  340D               	retlw	13
   331  0878                     __end_of__npowers_:	
   332  0878                     _dpowers:	
   333  0878  3401               	retlw	1
   334  0879  3400               	retlw	0
   335  087A  3400               	retlw	0
   336  087B  3400               	retlw	0
   337  087C  340A               	retlw	10
   338  087D  3400               	retlw	0
   339  087E  3400               	retlw	0
   340  087F  3400               	retlw	0
   341  0880  3464               	retlw	100
   342  0881  3400               	retlw	0
   343  0882  3400               	retlw	0
   344  0883  3400               	retlw	0
   345  0884  34E8               	retlw	232
   346  0885  3403               	retlw	3
   347  0886  3400               	retlw	0
   348  0887  3400               	retlw	0
   349  0888  3410               	retlw	16
   350  0889  3427               	retlw	39
   351  088A  3400               	retlw	0
   352  088B  3400               	retlw	0
   353  088C  34A0               	retlw	160
   354  088D  3486               	retlw	134
   355  088E  3401               	retlw	1
   356  088F  3400               	retlw	0
   357  0890  3440               	retlw	64
   358  0891  3442               	retlw	66
   359  0892  340F               	retlw	15
   360  0893  3400               	retlw	0
   361  0894  3480               	retlw	128
   362  0895  3496               	retlw	150
   363  0896  3498               	retlw	152
   364  0897  3400               	retlw	0
   365  0898  3400               	retlw	0
   366  0899  34E1               	retlw	225
   367  089A  34F5               	retlw	245
   368  089B  3405               	retlw	5
   369  089C  3400               	retlw	0
   370  089D  34CA               	retlw	202
   371  089E  349A               	retlw	154
   372  089F  343B               	retlw	59
   373  08A0                     __end_of_dpowers:	
   374  08A0                     STR_1:	
   375  08A0  3425               	retlw	37	;'%'
   376  08A1  3473               	retlw	115	;'s'
   377  08A2  3420               	retlw	32	;' '
   378  08A3  3474               	retlw	116	;'t'
   379  08A4  346F               	retlw	111	;'o'
   380  08A5  3420               	retlw	32	;' '
   381  08A6  3425               	retlw	37	;'%'
   382  08A7  3466               	retlw	102	;'f'
   383  08A8  3400               	retlw	0
   384  08A9                     STR_2:	
   385  08A9  3428               	retlw	40	;'('
   386  08AA  346E               	retlw	110	;'n'
   387  08AB  3475               	retlw	117	;'u'
   388  08AC  346C               	retlw	108	;'l'
   389  08AD  346C               	retlw	108	;'l'
   390  08AE  3429               	retlw	41	;')'
   391  08AF  3400               	retlw	0
   392                           
   393                           ; #config settings
   394  0000                     
   395                           	psect	cinit
   396  07FC                     start_initialization:	
   397  07FC                     __initialization:	
   398  07FC                     end_of_initialization:	
   399                           ;End of C runtime variable initialization code
   400                           
   401  07FC                     __end_of__initialization:	
   402  07FC  0183               	clrf	3
   403  07FD  160A  158A  2CFA   	ljmp	_main	;jump to C main() function
   404                           
   405                           	psect	cstackBANK1
   406  00A0                     __pcstackBANK1:	
   407  00A0                     ?_printf:	
   408                           
   409                           ; 2 bytes @ 0x0
   410  00A0                     	ds	5
   411  00A5                     ??_printf:	
   412                           
   413                           ; 1 bytes @ 0x5
   414  00A5                     	ds	5
   415  00AA                     _printf$767:	
   416                           
   417                           ; 4 bytes @ 0xA
   418  00AA                     	ds	4
   419  00AE                     printf@f:	
   420                           
   421                           ; 1 bytes @ 0xE
   422  00AE                     	ds	1
   423  00AF                     printf@ap:	
   424                           
   425                           ; 1 bytes @ 0xF
   426  00AF                     	ds	1
   427  00B0                     printf@flag:	
   428                           
   429                           ; 2 bytes @ 0x10
   430  00B0                     	ds	2
   431  00B2                     printf@cp:	
   432                           
   433                           ; 2 bytes @ 0x12
   434  00B2                     	ds	2
   435  00B4                     printf@prec:	
   436                           
   437                           ; 2 bytes @ 0x14
   438  00B4                     	ds	2
   439  00B6                     printf@val:	
   440                           
   441                           ; 4 bytes @ 0x16
   442  00B6                     	ds	4
   443  00BA                     printf@eexp:	
   444                           
   445                           ; 2 bytes @ 0x1A
   446  00BA                     	ds	2
   447  00BC                     printf@tmpval:	
   448                           
   449                           ; 4 bytes @ 0x1C
   450  00BC                     	ds	4
   451  00C0                     printf@fval:	
   452                           
   453                           ; 4 bytes @ 0x20
   454  00C0                     	ds	4
   455  00C4                     printf@c:	
   456                           
   457                           ; 1 bytes @ 0x24
   458  00C4                     	ds	1
   459  00C5                     main@buf:	
   460                           
   461                           ; 10 bytes @ 0x25
   462  00C5                     	ds	10
   463  00CF                     main@i:	
   464                           
   465                           ; 4 bytes @ 0x2F
   466  00CF                     	ds	4
   467                           
   468                           	psect	cstackCOMMON
   469  0070                     __pcstackCOMMON:	
   470  0070                     ?_isspace:	
   471  0070                     ?_isdigit:	
   472                           ; 1 bit 
   473                           
   474  0070                     ?___fleq:	
   475                           ; 1 bit 
   476                           
   477  0070                     ?___flge:	
   478                           ; 1 bit 
   479                           
   480  0070                     ?_cgets:	
   481                           ; 1 bit 
   482                           
   483  0070                     ??_cgets:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_putch:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ??_putch:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ??_isspace:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ??_isdigit:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_getche:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ??_getche:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_main:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?___bmul:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?__Umul8_16:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?___wmul:	
   514                           ; 2 bytes @ 0x0
   515                           
   516  0070                     ?___awmod:	
   517                           ; 2 bytes @ 0x0
   518                           
   519  0070                     ?___lwmod:	
   520                           ; 2 bytes @ 0x0
   521                           
   522  0070                     ?__tdiv_to_l_:	
   523                           ; 2 bytes @ 0x0
   524                           
   525  0070                     ?__div_to_l_:	
   526                           ; 4 bytes @ 0x0
   527                           
   528  0070                     ?___lmul:	
   529                           ; 4 bytes @ 0x0
   530                           
   531  0070                     ?___lldiv:	
   532                           ; 4 bytes @ 0x0
   533                           
   534  0070                     ?___flneg:	
   535                           ; 4 bytes @ 0x0
   536                           
   537  0070                     ?___llmod:	
   538                           ; 4 bytes @ 0x0
   539                           
   540  0070                     ?___fldiv:	
   541                           ; 4 bytes @ 0x0
   542                           
   543  0070                     ?___xxtofl:	
   544                           ; 4 bytes @ 0x0
   545                           
   546  0070                     ___bmul@multiplicand:	
   547                           ; 4 bytes @ 0x0
   548                           
   549  0070                     _isdigit$586:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     _isspace$589:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     putch@c:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     __Umul8_16@multiplicand:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ___wmul@multiplier:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ___awmod@divisor:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0070                     ___lwmod@divisor:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0070                     ___lmul@multiplier:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0070                     ___lldiv@divisor:	
   574                           ; 4 bytes @ 0x0
   575                           
   576  0070                     __div_to_l_@f1:	
   577                           ; 4 bytes @ 0x0
   578                           
   579  0070                     ___fleq@ff1:	
   580                           ; 4 bytes @ 0x0
   581                           
   582  0070                     ___flge@ff1:	
   583                           ; 4 bytes @ 0x0
   584                           
   585  0070                     ___flneg@f1:	
   586                           ; 4 bytes @ 0x0
   587                           
   588  0070                     __tdiv_to_l_@f1:	
   589                           ; 4 bytes @ 0x0
   590                           
   591  0070                     ___llmod@divisor:	
   592                           ; 4 bytes @ 0x0
   593                           
   594  0070                     ___fldiv@a:	
   595                           ; 4 bytes @ 0x0
   596                           
   597  0070                     ___xxtofl@val:	
   598                           ; 4 bytes @ 0x0
   599                           
   600                           
   601                           ; 4 bytes @ 0x0
   602  0070                     	ds	1
   603  0071                     ??___bmul:	
   604  0071                     isdigit@c:	
   605                           ; 1 bytes @ 0x1
   606                           
   607  0071                     isspace@c:	
   608                           ; 1 bytes @ 0x1
   609                           
   610                           
   611                           ; 1 bytes @ 0x1
   612  0071                     	ds	1
   613  0072                     ??__Umul8_16:	
   614  0072                     ___bmul@product:	
   615                           ; 1 bytes @ 0x2
   616                           
   617  0072                     ___wmul@multiplicand:	
   618                           ; 1 bytes @ 0x2
   619                           
   620  0072                     ___awmod@dividend:	
   621                           ; 2 bytes @ 0x2
   622                           
   623  0072                     ___lwmod@dividend:	
   624                           ; 2 bytes @ 0x2
   625                           
   626  0072                     cgets@c:	
   627                           ; 2 bytes @ 0x2
   628                           
   629                           
   630                           ; 2 bytes @ 0x2
   631  0072                     	ds	1
   632  0073                     ___bmul@multiplier:	
   633                           
   634                           ; 1 bytes @ 0x3
   635  0073                     	ds	1
   636  0074                     ??___wmul:	
   637  0074                     ??___awmod:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     ??___flneg:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0074                     ??___lwmod:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0074                     ??___xxtofl:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0074                     cgets@s:	
   650                           ; 1 bytes @ 0x4
   651                           
   652  0074                     ___wmul@product:	
   653                           ; 1 bytes @ 0x4
   654                           
   655  0074                     __Umul8_16@product:	
   656                           ; 2 bytes @ 0x4
   657                           
   658  0074                     ___lmul@multiplicand:	
   659                           ; 2 bytes @ 0x4
   660                           
   661  0074                     ___lldiv@dividend:	
   662                           ; 4 bytes @ 0x4
   663                           
   664  0074                     __div_to_l_@f2:	
   665                           ; 4 bytes @ 0x4
   666                           
   667  0074                     ___fleq@ff2:	
   668                           ; 4 bytes @ 0x4
   669                           
   670  0074                     ___flge@ff2:	
   671                           ; 4 bytes @ 0x4
   672                           
   673  0074                     __tdiv_to_l_@f2:	
   674                           ; 4 bytes @ 0x4
   675                           
   676  0074                     ___llmod@dividend:	
   677                           ; 4 bytes @ 0x4
   678                           
   679  0074                     ___fldiv@b:	
   680                           ; 4 bytes @ 0x4
   681                           
   682                           
   683                           ; 4 bytes @ 0x4
   684  0074                     	ds	1
   685  0075                     ___awmod@counter:	
   686  0075                     ___lwmod@counter:	
   687                           ; 1 bytes @ 0x5
   688                           
   689  0075                     cgets@s1:	
   690                           ; 1 bytes @ 0x5
   691                           
   692                           
   693                           ; 1 bytes @ 0x5
   694  0075                     	ds	1
   695  0076                     ?___lwdiv:	
   696  0076                     ___awmod@sign:	
   697                           ; 2 bytes @ 0x6
   698                           
   699  0076                     ___lwdiv@divisor:	
   700                           ; 1 bytes @ 0x6
   701                           
   702  0076                     __Umul8_16@word_mpld:	
   703                           ; 2 bytes @ 0x6
   704                           
   705                           
   706                           ; 2 bytes @ 0x6
   707  0076                     	ds	1
   708  0077                     ?___awdiv:	
   709  0077                     ___awdiv@divisor:	
   710                           ; 2 bytes @ 0x7
   711                           
   712                           
   713                           ; 2 bytes @ 0x7
   714  0077                     	ds	1
   715  0078                     ??__tdiv_to_l_:	
   716  0078                     ??__div_to_l_:	
   717                           ; 1 bytes @ 0x8
   718                           
   719  0078                     ??___lmul:	
   720                           ; 1 bytes @ 0x8
   721                           
   722  0078                     ??___lldiv:	
   723                           ; 1 bytes @ 0x8
   724                           
   725  0078                     ??___fleq:	
   726                           ; 1 bytes @ 0x8
   727                           
   728  0078                     ??___flge:	
   729                           ; 1 bytes @ 0x8
   730                           
   731  0078                     ??___llmod:	
   732                           ; 1 bytes @ 0x8
   733                           
   734  0078                     ??___fldiv:	
   735                           ; 1 bytes @ 0x8
   736                           
   737  0078                     ___xxtofl@sign:	
   738                           ; 1 bytes @ 0x8
   739                           
   740  0078                     __Umul8_16@multiplier:	
   741                           ; 1 bytes @ 0x8
   742                           
   743  0078                     ___lwdiv@dividend:	
   744                           ; 1 bytes @ 0x8
   745                           
   746                           
   747                           ; 2 bytes @ 0x8
   748  0078                     	ds	1
   749  0079                     ___llmod@counter:	
   750  0079                     ___xxtofl@exp:	
   751                           ; 1 bytes @ 0x9
   752                           
   753  0079                     ___awdiv@dividend:	
   754                           ; 1 bytes @ 0x9
   755                           
   756  0079                     ___lmul@product:	
   757                           ; 2 bytes @ 0x9
   758                           
   759  0079                     ___lldiv@quotient:	
   760                           ; 4 bytes @ 0x9
   761                           
   762                           
   763                           ; 4 bytes @ 0x9
   764  0079                     	ds	1
   765  007A                     ??___lwdiv:	
   766  007A                     ___xxtofl@arg:	
   767                           ; 1 bytes @ 0xA
   768                           
   769                           
   770                           ; 4 bytes @ 0xA
   771  007A                     	ds	1
   772  007B                     ??___awdiv:	
   773  007B                     ___lwdiv@quotient:	
   774                           ; 1 bytes @ 0xB
   775                           
   776                           
   777                           ; 2 bytes @ 0xB
   778  007B                     	ds	2
   779  007D                     ___lldiv@counter:	
   780  007D                     ___lwdiv@counter:	
   781                           ; 1 bytes @ 0xD
   782                           
   783                           
   784                           ; 1 bytes @ 0xD
   785  007D                     	ds	1
   786  007E                     ??_atof:	
   787  007E                     ??___flsub:	
   788                           ; 1 bytes @ 0xE
   789                           
   790                           
   791                           	psect	cstackBANK0
   792  0020                     __pcstackBANK0:	
   793                           ; 1 bytes @ 0xE
   794                           
   795  0020                     ___awdiv@counter:	
   796  0020                     __div_to_l_@quot:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0020                     __tdiv_to_l_@quot:	
   800                           ; 4 bytes @ 0x0
   801                           
   802  0020                     ___fldiv@rem:	
   803                           ; 4 bytes @ 0x0
   804                           
   805                           
   806                           ; 4 bytes @ 0x0
   807  0020                     	ds	1
   808  0021                     ___awdiv@sign:	
   809                           
   810                           ; 1 bytes @ 0x1
   811  0021                     	ds	1
   812  0022                     ___awdiv@quotient:	
   813                           
   814                           ; 2 bytes @ 0x2
   815  0022                     	ds	2
   816  0024                     ?___flmul:	
   817  0024                     __div_to_l_@cntr:	
   818                           ; 4 bytes @ 0x4
   819                           
   820  0024                     __tdiv_to_l_@cntr:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0024                     ___fldiv@sign:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0024                     ___flmul@b:	
   827                           ; 1 bytes @ 0x4
   828                           
   829                           
   830                           ; 4 bytes @ 0x4
   831  0024                     	ds	1
   832  0025                     __div_to_l_@exp1:	
   833  0025                     __tdiv_to_l_@exp1:	
   834                           ; 1 bytes @ 0x5
   835                           
   836  0025                     ___fldiv@new_exp:	
   837                           ; 1 bytes @ 0x5
   838                           
   839                           
   840                           ; 2 bytes @ 0x5
   841  0025                     	ds	2
   842  0027                     ___fldiv@grs:	
   843                           
   844                           ; 4 bytes @ 0x7
   845  0027                     	ds	1
   846  0028                     ___flmul@a:	
   847                           
   848                           ; 4 bytes @ 0x8
   849  0028                     	ds	3
   850  002B                     ___fldiv@bexp:	
   851                           
   852                           ; 1 bytes @ 0xB
   853  002B                     	ds	1
   854  002C                     ??___flmul:	
   855  002C                     ___fldiv@aexp:	
   856                           ; 1 bytes @ 0xC
   857                           
   858                           
   859                           ; 1 bytes @ 0xC
   860  002C                     	ds	5
   861  0031                     ___flmul@sign:	
   862                           
   863                           ; 1 bytes @ 0x11
   864  0031                     	ds	1
   865  0032                     ___flmul@grs:	
   866                           
   867                           ; 4 bytes @ 0x12
   868  0032                     	ds	4
   869  0036                     ___flmul@aexp:	
   870                           
   871                           ; 1 bytes @ 0x16
   872  0036                     	ds	1
   873  0037                     ___flmul@bexp:	
   874                           
   875                           ; 1 bytes @ 0x17
   876  0037                     	ds	1
   877  0038                     ___flmul@prod:	
   878                           
   879                           ; 4 bytes @ 0x18
   880  0038                     	ds	4
   881  003C                     ___flmul@temp:	
   882                           
   883                           ; 2 bytes @ 0x1C
   884  003C                     	ds	2
   885  003E                     ?_fround:	
   886  003E                     ?_scale:	
   887                           ; 4 bytes @ 0x1E
   888                           
   889  003E                     ?_strtod:	
   890                           ; 4 bytes @ 0x1E
   891                           
   892  003E                     strtod@res:	
   893                           ; 4 bytes @ 0x1E
   894                           
   895                           
   896                           ; 1 bytes @ 0x1E
   897  003E                     	ds	4
   898  0042                     ??_fround:	
   899  0042                     ??_scale:	
   900                           ; 1 bytes @ 0x22
   901                           
   902  0042                     ??_strtod:	
   903                           ; 1 bytes @ 0x22
   904                           
   905                           
   906                           ; 1 bytes @ 0x22
   907  0042                     	ds	4
   908  0046                     strtod@eexp:	
   909                           
   910                           ; 1 bytes @ 0x26
   911  0046                     	ds	1
   912  0047                     strtod@flags:	
   913                           
   914                           ; 1 bytes @ 0x27
   915  0047                     	ds	1
   916  0048                     strtod@expon:	
   917                           
   918                           ; 1 bytes @ 0x28
   919  0048                     	ds	1
   920  0049                     strtod@_u:	
   921  0049                     _fround$765:	
   922                           ; 4 bytes @ 0x29
   923                           
   924                           
   925                           ; 4 bytes @ 0x29
   926  0049                     	ds	3
   927  004C                     _scale$766:	
   928                           
   929                           ; 4 bytes @ 0x2C
   930  004C                     	ds	1
   931  004D                     strtod@s:	
   932  004D                     _fround$764:	
   933                           ; 1 bytes @ 0x2D
   934                           
   935                           
   936                           ; 4 bytes @ 0x2D
   937  004D                     	ds	1
   938  004E                     ?_atof:	
   939                           
   940                           ; 4 bytes @ 0x2E
   941  004E                     	ds	2
   942  0050                     scale@scl:	
   943                           
   944                           ; 1 bytes @ 0x30
   945  0050                     	ds	1
   946  0051                     ?___fltol:	
   947  0051                     fround@prec:	
   948                           ; 4 bytes @ 0x31
   949                           
   950  0051                     ___fltol@f1:	
   951                           ; 1 bytes @ 0x31
   952                           
   953                           
   954                           ; 4 bytes @ 0x31
   955  0051                     	ds	1
   956  0052                     ?___fladd:	
   957  0052                     ___fladd@b:	
   958                           ; 4 bytes @ 0x32
   959                           
   960                           
   961                           ; 4 bytes @ 0x32
   962  0052                     	ds	1
   963  0053                     atof@s:	
   964                           
   965                           ; 1 bytes @ 0x33
   966  0053                     	ds	2
   967  0055                     ??___fltol:	
   968                           
   969                           ; 1 bytes @ 0x35
   970  0055                     	ds	1
   971  0056                     ___fladd@a:	
   972                           
   973                           ; 4 bytes @ 0x36
   974  0056                     	ds	4
   975  005A                     ??___fladd:	
   976  005A                     ___fltol@sign1:	
   977                           ; 1 bytes @ 0x3A
   978                           
   979                           
   980                           ; 1 bytes @ 0x3A
   981  005A                     	ds	1
   982  005B                     ___fltol@exp1:	
   983                           
   984                           ; 1 bytes @ 0x3B
   985  005B                     	ds	7
   986  0062                     ___fladd@signs:	
   987                           
   988                           ; 1 bytes @ 0x42
   989  0062                     	ds	1
   990  0063                     ___fladd@aexp:	
   991                           
   992                           ; 1 bytes @ 0x43
   993  0063                     	ds	1
   994  0064                     ___fladd@bexp:	
   995                           
   996                           ; 1 bytes @ 0x44
   997  0064                     	ds	1
   998  0065                     ___fladd@grs:	
   999                           
  1000                           ; 1 bytes @ 0x45
  1001  0065                     	ds	1
  1002  0066                     ?___flsub:	
  1003  0066                     ___flsub@a:	
  1004                           ; 4 bytes @ 0x46
  1005                           
  1006                           
  1007                           ; 4 bytes @ 0x46
  1008  0066                     	ds	4
  1009  006A                     ___flsub@b:	
  1010                           
  1011                           ; 4 bytes @ 0x4A
  1012  006A                     	ds	4
  1013  006E                     ??_main:	
  1014                           
  1015                           ; 1 bytes @ 0x4E
  1016  006E                     	ds	1
  1017                           
  1018                           	psect	maintext
  1019  1CFA                     __pmaintext:	
  1020 ;;
  1021 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1022 ;;
  1023 ;; *************** function _main *****************
  1024 ;; Defined at:
  1025 ;;		line 33 in file "main_test.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  buf            10   37[BANK1 ] unsigned char [10]
  1030 ;;  i               4   47[BANK1 ] unsigned char [10]
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : B00/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         0       0      14       0       0
  1042 ;;      Temps:          0       1       0       0       0
  1043 ;;      Totals:         0       1      14       0       0
  1044 ;;Total ram usage:       15 bytes
  1045 ;; Hardware stack levels required when called:    4
  1046 ;; This function calls:
  1047 ;;		_atof
  1048 ;;		_cgets
  1049 ;;		_printf
  1050 ;; This function is called by:
  1051 ;;		Startup code after reset
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function _main
  1057  1CFA                     _main:	
  1058                           
  1059                           ;main_test.c: 35:     char buf[10];;main_test.c: 36:     double i;;main_test.c: 37:     
      +                          cgets(buf);
  1060                           
  1061                           ;incstack = 0
  1062                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1063  1CFA  30C5               	movlw	(low (main@buf| 0))& (0+255)
  1064  1CFB  160A  118A  2001  160A  158A  	fcall	_cgets
  1065                           
  1066                           ;main_test.c: 38:     i=atof(buf);
  1067  1D00  30C5               	movlw	(low (main@buf| 0))& (0+255)
  1068  1D01  160A  158A  2472  160A  158A  	fcall	_atof
  1069  1D06  1283               	bcf	3,5	;RP0=0, select bank0
  1070  1D07  1303               	bcf	3,6	;RP1=0, select bank0
  1071  1D08  0851               	movf	?_atof+3,w
  1072  1D09  1683               	bsf	3,5	;RP0=1, select bank1
  1073  1D0A  1303               	bcf	3,6	;RP1=0, select bank1
  1074  1D0B  00D2               	movwf	(main@i+3)^(0+128)
  1075  1D0C  1283               	bcf	3,5	;RP0=0, select bank0
  1076  1D0D  1303               	bcf	3,6	;RP1=0, select bank0
  1077  1D0E  0850               	movf	?_atof+2,w
  1078  1D0F  1683               	bsf	3,5	;RP0=1, select bank1
  1079  1D10  1303               	bcf	3,6	;RP1=0, select bank1
  1080  1D11  00D1               	movwf	(main@i+2)^(0+128)
  1081  1D12  1283               	bcf	3,5	;RP0=0, select bank0
  1082  1D13  1303               	bcf	3,6	;RP1=0, select bank0
  1083  1D14  084F               	movf	?_atof+1,w
  1084  1D15  1683               	bsf	3,5	;RP0=1, select bank1
  1085  1D16  1303               	bcf	3,6	;RP1=0, select bank1
  1086  1D17  00D0               	movwf	(main@i+1)^(0+128)
  1087  1D18  1283               	bcf	3,5	;RP0=0, select bank0
  1088  1D19  1303               	bcf	3,6	;RP1=0, select bank0
  1089  1D1A  084E               	movf	?_atof,w
  1090  1D1B  1683               	bsf	3,5	;RP0=1, select bank1
  1091  1D1C  1303               	bcf	3,6	;RP1=0, select bank1
  1092  1D1D  00CF               	movwf	main@i^(0+128)
  1093                           
  1094                           ;main_test.c: 39:     printf("%s to %f",buf,i);
  1095  1D1E  30C5               	movlw	(low (main@buf| 0))& (0+255)
  1096  1D1F  1283               	bcf	3,5	;RP0=0, select bank0
  1097  1D20  1303               	bcf	3,6	;RP1=0, select bank0
  1098  1D21  00EE               	movwf	??_main
  1099  1D22  086E               	movf	??_main,w
  1100  1D23  1683               	bsf	3,5	;RP0=1, select bank1
  1101  1D24  1303               	bcf	3,6	;RP1=0, select bank1
  1102  1D25  00A0               	movwf	?_printf^(0+128)
  1103  1D26  0852               	movf	(main@i+3)^(0+128),w
  1104  1D27  00A4               	movwf	((?_printf+3)^(0+128)+1)
  1105  1D28  0851               	movf	(main@i+2)^(0+128),w
  1106  1D29  00A3               	movwf	((?_printf+2)^(0+128)+1)
  1107  1D2A  0850               	movf	(main@i+1)^(0+128),w
  1108  1D2B  00A2               	movwf	((?_printf+1)^(0+128)+1)
  1109  1D2C  084F               	movf	main@i^(0+128),w
  1110  1D2D  00A1               	movwf	(?_printf^(0+128)+1)
  1111  1D2E  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1112  1D2F  120A  118A  2261   	fcall	_printf
  1113  1D32  120A  118A  2800   	ljmp	start
  1114  1D35                     __end_of_main:	
  1115                           
  1116                           	psect	text1
  1117  0261                     __ptext1:	
  1118 ;; *************** function _printf *****************
  1119 ;; Defined at:
  1120 ;;		line 472 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  f               1    wreg     PTR const unsigned char 
  1123 ;;		 -> STR_1(9), 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  1126 ;;		 -> STR_1(9), 
  1127 ;;  fval            4   32[BANK1 ] PTR const unsigned char 
  1128 ;;  tmpval          4   28[BANK1 ] struct .
  1129 ;;  val             4   22[BANK1 ] unsigned long 
  1130 ;;  eexp            2   26[BANK1 ] int 
  1131 ;;  prec            2   20[BANK1 ] int 
  1132 ;;  cp              2   18[BANK1 ] PTR const unsigned char 
  1133 ;;		 -> STR_2(7), ?_printf(2), main@buf(10), 
  1134 ;;  flag            2   16[BANK1 ] unsigned short 
  1135 ;;  len             2    0        unsigned int 
  1136 ;;  width           2    0        int 
  1137 ;;  c               1   36[BANK1 ] unsigned char 
  1138 ;;  ap              1   15[BANK1 ] PTR void [1]
  1139 ;;		 -> ?_printf(2), 
  1140 ;;  d               1    0        unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2    0[BANK1 ] int 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       5       0       0
  1151 ;;      Locals:         0       0      27       0       0
  1152 ;;      Temps:          0       0       5       0       0
  1153 ;;      Totals:         0       0      37       0       0
  1154 ;;Total ram usage:       37 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    3
  1157 ;; This function calls:
  1158 ;;		___awdiv
  1159 ;;		___fladd
  1160 ;;		___fleq
  1161 ;;		___flge
  1162 ;;		___flmul
  1163 ;;		___flneg
  1164 ;;		___flsub
  1165 ;;		___fltol
  1166 ;;		___lldiv
  1167 ;;		___llmod
  1168 ;;		___wmul
  1169 ;;		___xxtofl
  1170 ;;		__div_to_l_
  1171 ;;		__tdiv_to_l_
  1172 ;;		_fround
  1173 ;;		_putch
  1174 ;;		_scale
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _printf
  1182  0261                     _printf:	
  1183                           
  1184                           ;incstack = 0
  1185                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1186                           ;printf@f stored from wreg
  1187  0261  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0262  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0263  00AE               	movwf	printf@f^(0+128)
  1190                           
  1191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 472: printf
      +                          (const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\
      +                          doprnt.c: 473: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 474:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common
      +                          \doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\comm
      +                          on\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90
      +                          \common\doprnt.c: 512:  int prec;
  1192  0264  30A0               	movlw	(low (?_printf| 0))& (0+255)
  1193  0265  00A5               	movwf	??_printf^(0+128)
  1194  0266  0825               	movf	??_printf^(0+128),w
  1195  0267  00AF               	movwf	printf@ap^(0+128)
  1196  0268                     l3720:	
  1197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1198                           
  1199                           
  1200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1201  0268  3001               	movlw	1
  1202  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1203  026A  1303               	bcf	3,6	;RP1=0, select bank1
  1204  026B  07AE               	addwf	printf@f^(0+128),f
  1205  026C  30FF               	movlw	-1
  1206  026D  072E               	addwf	printf@f^(0+128),w
  1207  026E  0084               	movwf	4
  1208  026F  120A  158A  200A  120A  118A  	fcall	stringdir
  1209  0274  00A5               	movwf	??_printf^(0+128)
  1210  0275  0825               	movf	??_printf^(0+128),w
  1211  0276  00C4               	movwf	printf@c^(0+128)
  1212  0277  0844               	movf	printf@c^(0+128),w
  1213  0278  1903               	btfsc	3,2
  1214  0279  0008               	return
  1215                           
  1216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1217  027A  3025               	movlw	37
  1218  027B  0644               	xorwf	printf@c^(0+128),w
  1219  027C  1903               	btfsc	3,2
  1220  027D  2A80               	goto	l3564
  1221                           
  1222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    (putch
      +                          (c) );
  1223  027E  0844               	movf	printf@c^(0+128),w
  1224  027F  2FF5               	goto	L1
  1225  0280                     l3564:	
  1226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1227                           
  1228                           
  1229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1230  0280  01B0               	clrf	printf@flag^(0+128)
  1231  0281  01B1               	clrf	(printf@flag+1)^(0+128)
  1232                           
  1233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1234  0282  2AC9               	goto	l3582
  1235  0283                     l134:	
  1236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1237                           
  1238                           
  1239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1240  0283  1531               	bsf	(printf@flag^(0+128)+1),2
  1241                           
  1242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1243  0284  2AE6               	goto	l3584
  1244  0285                     l3566:	
  1245                           
  1246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 753:     cp
      +                           = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  1247  0285  082F               	movf	printf@ap^(0+128),w
  1248  0286  0084               	movwf	4
  1249  0287  1383               	bcf	3,7	;select IRP bank0
  1250  0288  0800               	movf	0,w
  1251  0289  00B2               	movwf	printf@cp^(0+128)
  1252  028A  3000               	movlw	0
  1253  028B  00B3               	movwf	(printf@cp+1)^(0+128)
  1254  028C  3001               	movlw	1
  1255  028D  00A5               	movwf	??_printf^(0+128)
  1256  028E  0825               	movf	??_printf^(0+128),w
  1257  028F  07AF               	addwf	printf@ap^(0+128),f
  1258                           
  1259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 759:    if(
      +                          !cp)
  1260  0290  0832               	movf	printf@cp^(0+128),w
  1261  0291  0433               	iorwf	(printf@cp+1)^(0+128),w
  1262  0292  1D03               	btfss	3,2
  1263  0293  2A98               	goto	l3578
  1264                           
  1265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 760:     cp
      +                           = "(null)";
  1266  0294  309A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1267  0295  00B2               	movwf	printf@cp^(0+128)
  1268  0296  3080               	movlw	128
  1269  0297  00B3               	movwf	(printf@cp+1)^(0+128)
  1270  0298                     l3578:	
  1271                           
  1272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 796:    whi
      +                          le(*cp)
  1273  0298  0833               	movf	(printf@cp+1)^(0+128),w
  1274  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1275  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1276  029B  00FF               	movwf	127
  1277  029C  1683               	bsf	3,5	;RP0=1, select bank1
  1278  029D  1303               	bcf	3,6	;RP1=0, select bank1
  1279  029E  0832               	movf	printf@cp^(0+128),w
  1280  029F  0084               	movwf	4
  1281  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1282  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1283  02A2  120A  158A  2000  120A  118A  	fcall	stringtab
  1284  02A7  3A00               	xorlw	0
  1285  02A8  1903               	btfsc	3,2
  1286  02A9  2A68               	goto	l3720
  1287                           
  1288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 797:     (p
      +                          utch(*cp++) );
  1289  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  1290  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  1291  02AC  0833               	movf	(printf@cp+1)^(0+128),w
  1292  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1293  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1294  02AF  00FF               	movwf	127
  1295  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  1296  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  1297  02B2  0832               	movf	printf@cp^(0+128),w
  1298  02B3  0084               	movwf	4
  1299  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1300  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1301  02B6  120A  158A  2000  120A  118A  	fcall	stringtab
  1302  02BB  120A  118A  2003  120A  118A  	fcall	_putch
  1303  02C0  3001               	movlw	1
  1304  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  1305  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  1306  02C3  07B2               	addwf	printf@cp^(0+128),f
  1307  02C4  1803               	skipnc
  1308  02C5  0AB3               	incf	(printf@cp+1)^(0+128),f
  1309  02C6  3000               	movlw	0
  1310  02C7  07B3               	addwf	(printf@cp+1)^(0+128),f
  1311  02C8  2A98               	goto	l3578
  1312  02C9                     l3582:	
  1313  02C9  3001               	movlw	1
  1314  02CA  07AE               	addwf	printf@f^(0+128),f
  1315  02CB  30FF               	movlw	-1
  1316  02CC  072E               	addwf	printf@f^(0+128),w
  1317  02CD  0084               	movwf	4
  1318  02CE  120A  158A  200A  120A  118A  	fcall	stringdir
  1319  02D3  00C4               	movwf	printf@c^(0+128)
  1320  02D4  00A5               	movwf	??_printf^(0+128)
  1321  02D5  01A6               	clrf	(??_printf^(0+128)+1)
  1322                           
  1323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1324                           ; Switch size 1, requested type "simple"
  1325                           ; Number of cases is 1, Range of values is 0 to 0
  1326                           ; switch strategies available:
  1327                           ; Name         Instructions Cycles
  1328                           ; simple_byte            4     3 (average)
  1329                           ; direct_byte           11     8 (fixed)
  1330                           ; jumptable            260     6 (fixed)
  1331                           ;	Chosen strategy is simple_byte
  1332  02D6  0826               	movf	(??_printf+1)^(0+128),w
  1333  02D7  3A00               	xorlw	0	; case 0
  1334  02D8  1903               	skipnz
  1335  02D9  2ADB               	goto	l3784
  1336  02DA  2A68               	goto	l3720
  1337  02DB                     l3784:	
  1338                           
  1339                           ; Switch size 1, requested type "simple"
  1340                           ; Number of cases is 3, Range of values is 0 to 115
  1341                           ; switch strategies available:
  1342                           ; Name         Instructions Cycles
  1343                           ; simple_byte           10     6 (average)
  1344                           ; jumptable            260     6 (fixed)
  1345                           ;	Chosen strategy is simple_byte
  1346  02DB  0825               	movf	??_printf^(0+128),w
  1347  02DC  3A00               	xorlw	0	; case 0
  1348  02DD  1903               	skipnz
  1349  02DE  2FFB               	goto	l181
  1350  02DF  3A66               	xorlw	102	; case 102
  1351  02E0  1903               	skipnz
  1352  02E1  2A83               	goto	l134
  1353  02E2  3A15               	xorlw	21	; case 115
  1354  02E3  1903               	skipnz
  1355  02E4  2A85               	goto	l3566
  1356  02E5  2A68               	goto	l3720
  1357  02E6                     l3584:	
  1358                           
  1359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1360  02E6  3000               	movlw	0
  1361  02E7  0530               	andwf	printf@flag^(0+128),w
  1362  02E8  00A5               	movwf	??_printf^(0+128)
  1363  02E9  3007               	movlw	7
  1364  02EA  0531               	andwf	(printf@flag+1)^(0+128),w
  1365  02EB  00A6               	movwf	(??_printf+1)^(0+128)
  1366  02EC  0825               	movf	??_printf^(0+128),w
  1367  02ED  0426               	iorwf	(??_printf^(0+128)+1),w
  1368  02EE  1903               	btfsc	3,2
  1369  02EF  2FEA               	goto	l3716
  1370                           
  1371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1372  02F0  3006               	movlw	6
  1373  02F1  00B4               	movwf	printf@prec^(0+128)
  1374  02F2  3000               	movlw	0
  1375  02F3  00B5               	movwf	(printf@prec^(0+128)+1)
  1376                           
  1377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1378  02F4  082F               	movf	printf@ap^(0+128),w
  1379  02F5  0084               	movwf	4
  1380  02F6  1383               	bcf	3,7	;select IRP bank0
  1381  02F7  0800               	movf	0,w
  1382  02F8  00C0               	movwf	printf@fval^(0+128)
  1383  02F9  0A84               	incf	4,f
  1384  02FA  0800               	movf	0,w
  1385  02FB  00C1               	movwf	(printf@fval+1)^(0+128)
  1386  02FC  0A84               	incf	4,f
  1387  02FD  0800               	movf	0,w
  1388  02FE  00C2               	movwf	(printf@fval+2)^(0+128)
  1389  02FF  0A84               	incf	4,f
  1390  0300  0800               	movf	0,w
  1391  0301  00C3               	movwf	(printf@fval+3)^(0+128)
  1392  0302  3004               	movlw	4
  1393  0303  00A5               	movwf	??_printf^(0+128)
  1394  0304  0825               	movf	??_printf^(0+128),w
  1395  0305  07AF               	addwf	printf@ap^(0+128),f
  1396                           
  1397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  1398  0306  0843               	movf	(printf@fval+3)^(0+128),w
  1399  0307  00F3               	movwf	___flge@ff1+3
  1400  0308  0842               	movf	(printf@fval+2)^(0+128),w
  1401  0309  00F2               	movwf	___flge@ff1+2
  1402  030A  0841               	movf	(printf@fval+1)^(0+128),w
  1403  030B  00F1               	movwf	___flge@ff1+1
  1404  030C  0840               	movf	printf@fval^(0+128),w
  1405  030D  00F0               	movwf	___flge@ff1
  1406  030E  3000               	movlw	0
  1407  030F  00F7               	movwf	___flge@ff2+3
  1408  0310  3000               	movlw	0
  1409  0311  00F6               	movwf	___flge@ff2+2
  1410  0312  3000               	movlw	0
  1411  0313  00F5               	movwf	___flge@ff2+1
  1412  0314  3000               	movlw	0
  1413  0315  00F4               	movwf	___flge@ff2
  1414  0316  160A  158A  276D  120A  118A  	fcall	___flge
  1415  031B  1803               	btfsc	3,0
  1416  031C  2B3A               	goto	l3598
  1417                           
  1418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  1419  031D  1683               	bsf	3,5	;RP0=1, select bank1
  1420  031E  1303               	bcf	3,6	;RP1=0, select bank1
  1421  031F  0843               	movf	(printf@fval+3)^(0+128),w
  1422  0320  00F3               	movwf	___flneg@f1+3
  1423  0321  0842               	movf	(printf@fval+2)^(0+128),w
  1424  0322  00F2               	movwf	___flneg@f1+2
  1425  0323  0841               	movf	(printf@fval+1)^(0+128),w
  1426  0324  00F1               	movwf	___flneg@f1+1
  1427  0325  0840               	movf	printf@fval^(0+128),w
  1428  0326  00F0               	movwf	___flneg@f1
  1429  0327  120A  118A  2006  120A  118A  	fcall	___flneg
  1430  032C  0873               	movf	?___flneg+3,w
  1431  032D  1683               	bsf	3,5	;RP0=1, select bank1
  1432  032E  1303               	bcf	3,6	;RP1=0, select bank1
  1433  032F  00C3               	movwf	(printf@fval+3)^(0+128)
  1434  0330  0872               	movf	?___flneg+2,w
  1435  0331  00C2               	movwf	(printf@fval+2)^(0+128)
  1436  0332  0871               	movf	?___flneg+1,w
  1437  0333  00C1               	movwf	(printf@fval+1)^(0+128)
  1438  0334  0870               	movf	?___flneg,w
  1439  0335  00C0               	movwf	printf@fval^(0+128)
  1440                           
  1441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  1442  0336  3003               	movlw	3
  1443  0337  04B0               	iorwf	printf@flag^(0+128),f
  1444  0338  3000               	movlw	0
  1445  0339  04B1               	iorwf	(printf@flag+1)^(0+128),f
  1446  033A                     l3598:	
  1447                           
  1448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  1449  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1450  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1451  033C  01BA               	clrf	printf@eexp^(0+128)
  1452  033D  01BB               	clrf	(printf@eexp+1)^(0+128)
  1453                           
  1454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  1455  033E  0843               	movf	(printf@fval+3)^(0+128),w
  1456  033F  00F3               	movwf	___fleq@ff1+3
  1457  0340  0842               	movf	(printf@fval+2)^(0+128),w
  1458  0341  00F2               	movwf	___fleq@ff1+2
  1459  0342  0841               	movf	(printf@fval+1)^(0+128),w
  1460  0343  00F1               	movwf	___fleq@ff1+1
  1461  0344  0840               	movf	printf@fval^(0+128),w
  1462  0345  00F0               	movwf	___fleq@ff1
  1463  0346  3000               	movlw	0
  1464  0347  00F7               	movwf	___fleq@ff2+3
  1465  0348  3000               	movlw	0
  1466  0349  00F6               	movwf	___fleq@ff2+2
  1467  034A  3000               	movlw	0
  1468  034B  00F5               	movwf	___fleq@ff2+1
  1469  034C  3000               	movlw	0
  1470  034D  00F4               	movwf	___fleq@ff2
  1471  034E  120A  158A  20B0  120A  118A  	fcall	___fleq
  1472  0353  1803               	btfsc	3,0
  1473  0354  2C3E               	goto	l3628
  1474                           
  1475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1476  0355  1003               	clrc
  1477  0356  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0357  1303               	bcf	3,6	;RP1=0, select bank1
  1479  0358  0D42               	rlf	(printf@fval+2)^(0+128),w
  1480  0359  0D43               	rlf	(printf@fval+3)^(0+128),w
  1481  035A  3E82               	addlw	130
  1482  035B  00BA               	movwf	printf@eexp^(0+128)
  1483  035C  30FF               	movlw	255
  1484  035D  1803               	skipnc
  1485  035E  3000               	movlw	0
  1486  035F  00BB               	movwf	(printf@eexp^(0+128)+1)
  1487                           
  1488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  1489  0360  30FF               	movlw	255
  1490  0361  07BA               	addwf	printf@eexp^(0+128),f
  1491  0362  1803               	skipnc
  1492  0363  0ABB               	incf	(printf@eexp+1)^(0+128),f
  1493  0364  30FF               	movlw	255
  1494  0365  07BB               	addwf	(printf@eexp+1)^(0+128),f
  1495                           
  1496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  1497  0366  3003               	movlw	3
  1498  0367  00F0               	movwf	___wmul@multiplier
  1499  0368  3000               	movlw	0
  1500  0369  00F1               	movwf	___wmul@multiplier+1
  1501  036A  083B               	movf	(printf@eexp+1)^(0+128),w
  1502  036B  00F3               	movwf	___wmul@multiplicand+1
  1503  036C  083A               	movf	printf@eexp^(0+128),w
  1504  036D  00F2               	movwf	___wmul@multiplicand
  1505  036E  160A  158A  2485  120A  118A  	fcall	___wmul
  1506  0373  0871               	movf	?___wmul+1,w
  1507  0374  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0375  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0376  00BB               	movwf	(printf@eexp+1)^(0+128)
  1510  0377  0870               	movf	?___wmul,w
  1511  0378  00BA               	movwf	printf@eexp^(0+128)
  1512                           
  1513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  1514  0379  300A               	movlw	10
  1515  037A  00F7               	movwf	___awdiv@divisor
  1516  037B  3000               	movlw	0
  1517  037C  00F8               	movwf	___awdiv@divisor+1
  1518  037D  083B               	movf	(printf@eexp+1)^(0+128),w
  1519  037E  00FA               	movwf	___awdiv@dividend+1
  1520  037F  083A               	movf	printf@eexp^(0+128),w
  1521  0380  00F9               	movwf	___awdiv@dividend
  1522  0381  160A  158A  2647  120A  118A  	fcall	___awdiv
  1523  0386  0878               	movf	?___awdiv+1,w
  1524  0387  1683               	bsf	3,5	;RP0=1, select bank1
  1525  0388  1303               	bcf	3,6	;RP1=0, select bank1
  1526  0389  00BB               	movwf	(printf@eexp+1)^(0+128)
  1527  038A  0877               	movf	?___awdiv,w
  1528  038B  00BA               	movwf	printf@eexp^(0+128)
  1529                           
  1530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  1531  038C  1FBB               	btfss	(printf@eexp+1)^(0+128),7
  1532  038D  2B94               	goto	l3614
  1533                           
  1534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  1535  038E  30FF               	movlw	255
  1536  038F  07BA               	addwf	printf@eexp^(0+128),f
  1537  0390  1803               	skipnc
  1538  0391  0ABB               	incf	(printf@eexp+1)^(0+128),f
  1539  0392  30FF               	movlw	255
  1540  0393  07BB               	addwf	(printf@eexp+1)^(0+128),f
  1541  0394                     l3614:	
  1542                           
  1543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  1544  0394  033A               	decf	printf@eexp^(0+128),w
  1545  0395  3AFF               	xorlw	255
  1546  0396  120A  158A  24B7  120A  118A  	fcall	_scale
  1547  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1548  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1549  039D  0841               	movf	?_scale+3,w
  1550  039E  1683               	bsf	3,5	;RP0=1, select bank1
  1551  039F  1303               	bcf	3,6	;RP1=0, select bank1
  1552  03A0  00BF               	movwf	(printf@tmpval+3)^(0+128)
  1553  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1554  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1555  03A3  0840               	movf	?_scale+2,w
  1556  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  1557  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  1558  03A6  00BE               	movwf	(printf@tmpval+2)^(0+128)
  1559  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  1560  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  1561  03A9  083F               	movf	?_scale+1,w
  1562  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  1563  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  1564  03AC  00BD               	movwf	(printf@tmpval+1)^(0+128)
  1565  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  1566  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  1567  03AF  083E               	movf	?_scale,w
  1568  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  1569  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  1570  03B2  00BC               	movwf	printf@tmpval^(0+128)
  1571                           
  1572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  1573  03B3  0843               	movf	(printf@fval+3)^(0+128),w
  1574  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1575  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1576  03B6  00A7               	movwf	___flmul@b+3
  1577  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  1578  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  1579  03B9  0842               	movf	(printf@fval+2)^(0+128),w
  1580  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  1581  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  1582  03BC  00A6               	movwf	___flmul@b+2
  1583  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  1584  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  1585  03BF  0841               	movf	(printf@fval+1)^(0+128),w
  1586  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1587  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1588  03C2  00A5               	movwf	___flmul@b+1
  1589  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1590  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1591  03C5  0840               	movf	printf@fval^(0+128),w
  1592  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1593  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1594  03C8  00A4               	movwf	___flmul@b
  1595  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  1596  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  1597  03CB  083F               	movf	(printf@tmpval+3)^(0+128),w
  1598  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1599  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1600  03CE  00AB               	movwf	___flmul@a+3
  1601  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  1602  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  1603  03D1  083E               	movf	(printf@tmpval+2)^(0+128),w
  1604  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1605  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1606  03D4  00AA               	movwf	___flmul@a+2
  1607  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  1608  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  1609  03D7  083D               	movf	(printf@tmpval+1)^(0+128),w
  1610  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1611  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1612  03DA  00A9               	movwf	___flmul@a+1
  1613  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  1614  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  1615  03DD  083C               	movf	printf@tmpval^(0+128),w
  1616  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1617  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1618  03E0  00A8               	movwf	___flmul@a
  1619  03E1  120A  158A  21A2  120A  118A  	fcall	___flmul
  1620  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1621  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1622  03E8  0827               	movf	?___flmul+3,w
  1623  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1624  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1625  03EB  00BF               	movwf	(printf@tmpval+3)^(0+128)
  1626  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1627  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1628  03EE  0826               	movf	?___flmul+2,w
  1629  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  1630  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  1631  03F1  00BE               	movwf	(printf@tmpval+2)^(0+128)
  1632  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1633  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1634  03F4  0825               	movf	?___flmul+1,w
  1635  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  1636  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  1637  03F7  00BD               	movwf	(printf@tmpval+1)^(0+128)
  1638  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1639  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1640  03FA  0824               	movf	?___flmul,w
  1641  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  1642  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  1643  03FD  00BC               	movwf	printf@tmpval^(0+128)
  1644                           
  1645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  1646  03FE  083F               	movf	(printf@tmpval+3)^(0+128),w
  1647  03FF  00F3               	movwf	___flge@ff1+3
  1648  0400  083E               	movf	(printf@tmpval+2)^(0+128),w
  1649  0401  00F2               	movwf	___flge@ff1+2
  1650  0402  083D               	movf	(printf@tmpval+1)^(0+128),w
  1651  0403  00F1               	movwf	___flge@ff1+1
  1652  0404  083C               	movf	printf@tmpval^(0+128),w
  1653  0405  00F0               	movwf	___flge@ff1
  1654  0406  303F               	movlw	63
  1655  0407  00F7               	movwf	___flge@ff2+3
  1656  0408  3080               	movlw	128
  1657  0409  00F6               	movwf	___flge@ff2+2
  1658  040A  3000               	movlw	0
  1659  040B  00F5               	movwf	___flge@ff2+1
  1660  040C  3000               	movlw	0
  1661  040D  00F4               	movwf	___flge@ff2
  1662  040E  160A  158A  276D  120A  118A  	fcall	___flge
  1663  0413  1803               	btfsc	3,0
  1664  0414  2C1D               	goto	l3622
  1665                           
  1666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  1667  0415  30FF               	movlw	255
  1668  0416  1683               	bsf	3,5	;RP0=1, select bank1
  1669  0417  1303               	bcf	3,6	;RP1=0, select bank1
  1670  0418  07BA               	addwf	printf@eexp^(0+128),f
  1671  0419  1803               	skipnc
  1672  041A  0ABB               	incf	(printf@eexp+1)^(0+128),f
  1673  041B  30FF               	movlw	255
  1674  041C  2C3D               	goto	L6
  1675  041D                     l3622:	
  1676  041D  1683               	bsf	3,5	;RP0=1, select bank1
  1677  041E  1303               	bcf	3,6	;RP1=0, select bank1
  1678  041F  083F               	movf	(printf@tmpval+3)^(0+128),w
  1679  0420  00F3               	movwf	___flge@ff1+3
  1680  0421  083E               	movf	(printf@tmpval+2)^(0+128),w
  1681  0422  00F2               	movwf	___flge@ff1+2
  1682  0423  083D               	movf	(printf@tmpval+1)^(0+128),w
  1683  0424  00F1               	movwf	___flge@ff1+1
  1684  0425  083C               	movf	printf@tmpval^(0+128),w
  1685  0426  00F0               	movwf	___flge@ff1
  1686  0427  3041               	movlw	65
  1687  0428  00F7               	movwf	___flge@ff2+3
  1688  0429  3020               	movlw	32
  1689  042A  00F6               	movwf	___flge@ff2+2
  1690  042B  3000               	movlw	0
  1691  042C  00F5               	movwf	___flge@ff2+1
  1692  042D  3000               	movlw	0
  1693  042E  00F4               	movwf	___flge@ff2
  1694  042F  160A  158A  276D  120A  118A  	fcall	___flge
  1695  0434  1C03               	btfss	3,0
  1696  0435  2C3E               	goto	l3628
  1697                           
  1698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  1699  0436  3001               	movlw	1
  1700  0437  1683               	bsf	3,5	;RP0=1, select bank1
  1701  0438  1303               	bcf	3,6	;RP1=0, select bank1
  1702  0439  07BA               	addwf	printf@eexp^(0+128),f
  1703  043A  1803               	skipnc
  1704  043B  0ABB               	incf	(printf@eexp+1)^(0+128),f
  1705  043C  3000               	movlw	0
  1706  043D                     L6:	
  1707  043D  07BB               	addwf	(printf@eexp+1)^(0+128),f
  1708  043E                     l3628:	
  1709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  1710                           
  1711                           
  1712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  1713  043E  3006               	movlw	6
  1714  043F  160A  118A  2357  120A  118A  	fcall	_fround
  1715  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0446  0841               	movf	?_fround+3,w
  1718  0447  00D5               	movwf	___fladd@b+3
  1719  0448  0840               	movf	?_fround+2,w
  1720  0449  00D4               	movwf	___fladd@b+2
  1721  044A  083F               	movf	?_fround+1,w
  1722  044B  00D3               	movwf	___fladd@b+1
  1723  044C  083E               	movf	?_fround,w
  1724  044D  00D2               	movwf	___fladd@b
  1725  044E  1683               	bsf	3,5	;RP0=1, select bank1
  1726  044F  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0450  0843               	movf	(printf@fval+3)^(0+128),w
  1728  0451  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0452  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0453  00D9               	movwf	___fladd@a+3
  1731  0454  1683               	bsf	3,5	;RP0=1, select bank1
  1732  0455  1303               	bcf	3,6	;RP1=0, select bank1
  1733  0456  0842               	movf	(printf@fval+2)^(0+128),w
  1734  0457  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0458  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0459  00D8               	movwf	___fladd@a+2
  1737  045A  1683               	bsf	3,5	;RP0=1, select bank1
  1738  045B  1303               	bcf	3,6	;RP1=0, select bank1
  1739  045C  0841               	movf	(printf@fval+1)^(0+128),w
  1740  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1741  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1742  045F  00D7               	movwf	___fladd@a+1
  1743  0460  1683               	bsf	3,5	;RP0=1, select bank1
  1744  0461  1303               	bcf	3,6	;RP1=0, select bank1
  1745  0462  0840               	movf	printf@fval^(0+128),w
  1746  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0465  00D6               	movwf	___fladd@a
  1749  0466  120A  118A  2032  120A  118A  	fcall	___fladd
  1750  046B  1283               	bcf	3,5	;RP0=0, select bank0
  1751  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1752  046D  0855               	movf	?___fladd+3,w
  1753  046E  1683               	bsf	3,5	;RP0=1, select bank1
  1754  046F  1303               	bcf	3,6	;RP1=0, select bank1
  1755  0470  00C3               	movwf	(printf@fval+3)^(0+128)
  1756  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1758  0473  0854               	movf	?___fladd+2,w
  1759  0474  1683               	bsf	3,5	;RP0=1, select bank1
  1760  0475  1303               	bcf	3,6	;RP1=0, select bank1
  1761  0476  00C2               	movwf	(printf@fval+2)^(0+128)
  1762  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0479  0853               	movf	?___fladd+1,w
  1765  047A  1683               	bsf	3,5	;RP0=1, select bank1
  1766  047B  1303               	bcf	3,6	;RP1=0, select bank1
  1767  047C  00C1               	movwf	(printf@fval+1)^(0+128)
  1768  047D  1283               	bcf	3,5	;RP0=0, select bank0
  1769  047E  1303               	bcf	3,6	;RP1=0, select bank0
  1770  047F  0852               	movf	?___fladd,w
  1771  0480  1683               	bsf	3,5	;RP0=1, select bank1
  1772  0481  1303               	bcf	3,6	;RP1=0, select bank1
  1773  0482  00C0               	movwf	printf@fval^(0+128)
  1774                           
  1775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1776  0483  083B               	movf	(printf@eexp+1)^(0+128),w
  1777  0484  3A80               	xorlw	128
  1778  0485  00FF               	movwf	127
  1779  0486  3080               	movlw	128
  1780  0487  027F               	subwf	127,w
  1781  0488  1D03               	skipz
  1782  0489  2C8C               	goto	u6375
  1783  048A  300A               	movlw	10
  1784  048B  023A               	subwf	printf@eexp^(0+128),w
  1785  048C                     u6375:	
  1786  048C  1803               	skipnc
  1787  048D  2CD9               	goto	l3638
  1788  048E  1683               	bsf	3,5	;RP0=1, select bank1
  1789  048F  1303               	bcf	3,6	;RP1=0, select bank1
  1790  0490  0843               	movf	(printf@fval+3)^(0+128),w
  1791  0491  00F3               	movwf	___fleq@ff1+3
  1792  0492  0842               	movf	(printf@fval+2)^(0+128),w
  1793  0493  00F2               	movwf	___fleq@ff1+2
  1794  0494  0841               	movf	(printf@fval+1)^(0+128),w
  1795  0495  00F1               	movwf	___fleq@ff1+1
  1796  0496  0840               	movf	printf@fval^(0+128),w
  1797  0497  00F0               	movwf	___fleq@ff1
  1798  0498  3000               	movlw	0
  1799  0499  00F7               	movwf	___fleq@ff2+3
  1800  049A  3000               	movlw	0
  1801  049B  00F6               	movwf	___fleq@ff2+2
  1802  049C  3000               	movlw	0
  1803  049D  00F5               	movwf	___fleq@ff2+1
  1804  049E  3000               	movlw	0
  1805  049F  00F4               	movwf	___fleq@ff2
  1806  04A0  120A  158A  20B0  120A  118A  	fcall	___fleq
  1807  04A5  1803               	btfsc	3,0
  1808  04A6  2D42               	goto	l3652
  1809  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  1810  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  1811  04A9  0843               	movf	(printf@fval+3)^(0+128),w
  1812  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1813  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1814  04AC  00D4               	movwf	___fltol@f1+3
  1815  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  1816  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  1817  04AF  0842               	movf	(printf@fval+2)^(0+128),w
  1818  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  1819  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  1820  04B2  00D3               	movwf	___fltol@f1+2
  1821  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  1822  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  1823  04B5  0841               	movf	(printf@fval+1)^(0+128),w
  1824  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1825  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1826  04B8  00D2               	movwf	___fltol@f1+1
  1827  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  1828  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  1829  04BB  0840               	movf	printf@fval^(0+128),w
  1830  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  1831  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  1832  04BE  00D1               	movwf	___fltol@f1
  1833  04BF  160A  158A  2700  120A  118A  	fcall	___fltol
  1834  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  1835  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  1836  04C6  0854               	movf	?___fltol+3,w
  1837  04C7  0453               	iorwf	?___fltol+2,w
  1838  04C8  0452               	iorwf	?___fltol+1,w
  1839  04C9  0451               	iorwf	?___fltol,w
  1840  04CA  1D03               	skipz
  1841  04CB  2D42               	goto	l3652
  1842  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  1843  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  1844  04CE  083B               	movf	(printf@eexp+1)^(0+128),w
  1845  04CF  3A80               	xorlw	128
  1846  04D0  00FF               	movwf	127
  1847  04D1  3080               	movlw	128
  1848  04D2  027F               	subwf	127,w
  1849  04D3  1D03               	skipz
  1850  04D4  2CD7               	goto	u6405
  1851  04D5  3002               	movlw	2
  1852  04D6  023A               	subwf	printf@eexp^(0+128),w
  1853  04D7                     u6405:	
  1854  04D7  1C03               	skipc
  1855  04D8  2D42               	goto	l3652
  1856  04D9                     l3638:	
  1857                           
  1858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  1859  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  1860  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  1861  04DB  083F               	movf	(printf@tmpval+3)^(0+128),w
  1862  04DC  00F3               	movwf	___flge@ff1+3
  1863  04DD  083E               	movf	(printf@tmpval+2)^(0+128),w
  1864  04DE  00F2               	movwf	___flge@ff1+2
  1865  04DF  083D               	movf	(printf@tmpval+1)^(0+128),w
  1866  04E0  00F1               	movwf	___flge@ff1+1
  1867  04E1  083C               	movf	printf@tmpval^(0+128),w
  1868  04E2  00F0               	movwf	___flge@ff1
  1869  04E3  3040               	movlw	64
  1870  04E4  00F7               	movwf	___flge@ff2+3
  1871  04E5  3089               	movlw	137
  1872  04E6  00F6               	movwf	___flge@ff2+2
  1873  04E7  3070               	movlw	112
  1874  04E8  00F5               	movwf	___flge@ff2+1
  1875  04E9  305F               	movlw	95
  1876  04EA  00F4               	movwf	___flge@ff2
  1877  04EB  160A  158A  276D  120A  118A  	fcall	___flge
  1878  04F0  1803               	btfsc	3,0
  1879  04F1  2CF4               	goto	l3642
  1880                           
  1881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1882  04F2  30F7               	movlw	247
  1883  04F3  2CF5               	goto	L2
  1884  04F4                     l3642:	
  1885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  1886                           
  1887                           
  1888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1889  04F4  30F8               	movlw	248
  1890  04F5                     L2:	
  1891  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  1892  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  1893  04F7  07BA               	addwf	printf@eexp^(0+128),f
  1894  04F8  1803               	skipnc
  1895  04F9  0ABB               	incf	(printf@eexp+1)^(0+128),f
  1896  04FA  30FF               	movlw	255
  1897  04FB  07BB               	addwf	(printf@eexp+1)^(0+128),f
  1898                           
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  1900  04FC  083A               	movf	printf@eexp^(0+128),w
  1901  04FD  120A  158A  24B7  120A  118A  	fcall	_scale
  1902  0502  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0503  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0504  0841               	movf	?_scale+3,w
  1905  0505  1683               	bsf	3,5	;RP0=1, select bank1
  1906  0506  1303               	bcf	3,6	;RP1=0, select bank1
  1907  0507  00BF               	movwf	(printf@tmpval+3)^(0+128)
  1908  0508  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0509  1303               	bcf	3,6	;RP1=0, select bank0
  1910  050A  0840               	movf	?_scale+2,w
  1911  050B  1683               	bsf	3,5	;RP0=1, select bank1
  1912  050C  1303               	bcf	3,6	;RP1=0, select bank1
  1913  050D  00BE               	movwf	(printf@tmpval+2)^(0+128)
  1914  050E  1283               	bcf	3,5	;RP0=0, select bank0
  1915  050F  1303               	bcf	3,6	;RP1=0, select bank0
  1916  0510  083F               	movf	?_scale+1,w
  1917  0511  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0512  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0513  00BD               	movwf	(printf@tmpval+1)^(0+128)
  1920  0514  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0515  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0516  083E               	movf	?_scale,w
  1923  0517  1683               	bsf	3,5	;RP0=1, select bank1
  1924  0518  1303               	bcf	3,6	;RP1=0, select bank1
  1925  0519  00BC               	movwf	printf@tmpval^(0+128)
  1926  051A  0843               	movf	(printf@fval+3)^(0+128),w
  1927  051B  00F3               	movwf	__div_to_l_@f1+3
  1928  051C  0842               	movf	(printf@fval+2)^(0+128),w
  1929  051D  00F2               	movwf	__div_to_l_@f1+2
  1930  051E  0841               	movf	(printf@fval+1)^(0+128),w
  1931  051F  00F1               	movwf	__div_to_l_@f1+1
  1932  0520  0840               	movf	printf@fval^(0+128),w
  1933  0521  00F0               	movwf	__div_to_l_@f1
  1934  0522  083F               	movf	(printf@tmpval+3)^(0+128),w
  1935  0523  00F7               	movwf	__div_to_l_@f2+3
  1936  0524  083E               	movf	(printf@tmpval+2)^(0+128),w
  1937  0525  00F6               	movwf	__div_to_l_@f2+2
  1938  0526  083D               	movf	(printf@tmpval+1)^(0+128),w
  1939  0527  00F5               	movwf	__div_to_l_@f2+1
  1940  0528  083C               	movf	printf@tmpval^(0+128),w
  1941  0529  00F4               	movwf	__div_to_l_@f2
  1942  052A  120A  158A  20F8  120A  118A  	fcall	__div_to_l_
  1943  052F  0873               	movf	?__div_to_l_+3,w
  1944  0530  1683               	bsf	3,5	;RP0=1, select bank1
  1945  0531  1303               	bcf	3,6	;RP1=0, select bank1
  1946  0532  00B9               	movwf	(printf@val+3)^(0+128)
  1947  0533  0872               	movf	?__div_to_l_+2,w
  1948  0534  00B8               	movwf	(printf@val+2)^(0+128)
  1949  0535  0871               	movf	?__div_to_l_+1,w
  1950  0536  00B7               	movwf	(printf@val+1)^(0+128)
  1951  0537  0870               	movf	?__div_to_l_,w
  1952  0538  00B6               	movwf	printf@val^(0+128)
  1953                           
  1954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  1955  0539  3000               	movlw	0
  1956  053A  00C3               	movwf	(printf@fval+3)^(0+128)
  1957  053B  3000               	movlw	0
  1958  053C  00C2               	movwf	(printf@fval+2)^(0+128)
  1959  053D  3000               	movlw	0
  1960  053E  00C1               	movwf	(printf@fval+1)^(0+128)
  1961  053F  3000               	movlw	0
  1962  0540  00C0               	movwf	printf@fval^(0+128)
  1963                           
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  1965  0541  2DC6               	goto	l3658
  1966  0542                     l3652:	
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  1969  0542  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0543  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0544  0843               	movf	(printf@fval+3)^(0+128),w
  1972  0545  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0546  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0547  00D4               	movwf	___fltol@f1+3
  1975  0548  1683               	bsf	3,5	;RP0=1, select bank1
  1976  0549  1303               	bcf	3,6	;RP1=0, select bank1
  1977  054A  0842               	movf	(printf@fval+2)^(0+128),w
  1978  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1979  054C  1303               	bcf	3,6	;RP1=0, select bank0
  1980  054D  00D3               	movwf	___fltol@f1+2
  1981  054E  1683               	bsf	3,5	;RP0=1, select bank1
  1982  054F  1303               	bcf	3,6	;RP1=0, select bank1
  1983  0550  0841               	movf	(printf@fval+1)^(0+128),w
  1984  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0553  00D2               	movwf	___fltol@f1+1
  1987  0554  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0555  1303               	bcf	3,6	;RP1=0, select bank1
  1989  0556  0840               	movf	printf@fval^(0+128),w
  1990  0557  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0558  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0559  00D1               	movwf	___fltol@f1
  1993  055A  160A  158A  2700  120A  118A  	fcall	___fltol
  1994  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0561  0854               	movf	?___fltol+3,w
  1997  0562  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0563  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0564  00B9               	movwf	(printf@val+3)^(0+128)
  2000  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0567  0853               	movf	?___fltol+2,w
  2003  0568  1683               	bsf	3,5	;RP0=1, select bank1
  2004  0569  1303               	bcf	3,6	;RP1=0, select bank1
  2005  056A  00B8               	movwf	(printf@val+2)^(0+128)
  2006  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2007  056C  1303               	bcf	3,6	;RP1=0, select bank0
  2008  056D  0852               	movf	?___fltol+1,w
  2009  056E  1683               	bsf	3,5	;RP0=1, select bank1
  2010  056F  1303               	bcf	3,6	;RP1=0, select bank1
  2011  0570  00B7               	movwf	(printf@val+1)^(0+128)
  2012  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0573  0851               	movf	?___fltol,w
  2015  0574  1683               	bsf	3,5	;RP0=1, select bank1
  2016  0575  1303               	bcf	3,6	;RP1=0, select bank1
  2017  0576  00B6               	movwf	printf@val^(0+128)
  2018                           
  2019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2020  0577  0839               	movf	(printf@val+3)^(0+128),w
  2021  0578  00F3               	movwf	___xxtofl@val+3
  2022  0579  0838               	movf	(printf@val+2)^(0+128),w
  2023  057A  00F2               	movwf	___xxtofl@val+2
  2024  057B  0837               	movf	(printf@val+1)^(0+128),w
  2025  057C  00F1               	movwf	___xxtofl@val+1
  2026  057D  0836               	movf	printf@val^(0+128),w
  2027  057E  00F0               	movwf	___xxtofl@val
  2028  057F  3000               	movlw	0
  2029  0580  160A  118A  2062  120A  118A  	fcall	___xxtofl
  2030  0585  0873               	movf	?___xxtofl+3,w
  2031  0586  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0587  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0588  00E9               	movwf	___flsub@a+3
  2034  0589  0872               	movf	?___xxtofl+2,w
  2035  058A  00E8               	movwf	___flsub@a+2
  2036  058B  0871               	movf	?___xxtofl+1,w
  2037  058C  00E7               	movwf	___flsub@a+1
  2038  058D  0870               	movf	?___xxtofl,w
  2039  058E  00E6               	movwf	___flsub@a
  2040  058F  1683               	bsf	3,5	;RP0=1, select bank1
  2041  0590  1303               	bcf	3,6	;RP1=0, select bank1
  2042  0591  0843               	movf	(printf@fval+3)^(0+128),w
  2043  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0594  00ED               	movwf	___flsub@b+3
  2046  0595  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0596  1303               	bcf	3,6	;RP1=0, select bank1
  2048  0597  0842               	movf	(printf@fval+2)^(0+128),w
  2049  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2051  059A  00EC               	movwf	___flsub@b+2
  2052  059B  1683               	bsf	3,5	;RP0=1, select bank1
  2053  059C  1303               	bcf	3,6	;RP1=0, select bank1
  2054  059D  0841               	movf	(printf@fval+1)^(0+128),w
  2055  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2056  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2057  05A0  00EB               	movwf	___flsub@b+1
  2058  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  2059  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  2060  05A3  0840               	movf	printf@fval^(0+128),w
  2061  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2062  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2063  05A6  00EA               	movwf	___flsub@b
  2064  05A7  160A  158A  24A6  120A  118A  	fcall	___flsub
  2065  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2066  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2067  05AE  0869               	movf	?___flsub+3,w
  2068  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  2069  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  2070  05B1  00C3               	movwf	(printf@fval+3)^(0+128)
  2071  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  2072  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  2073  05B4  0868               	movf	?___flsub+2,w
  2074  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  2075  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  2076  05B7  00C2               	movwf	(printf@fval+2)^(0+128)
  2077  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2078  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2079  05BA  0867               	movf	?___flsub+1,w
  2080  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  2081  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  2082  05BD  00C1               	movwf	(printf@fval+1)^(0+128)
  2083  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2084  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2085  05C0  0866               	movf	?___flsub,w
  2086  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  2087  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  2088  05C3  00C0               	movwf	printf@fval^(0+128)
  2089                           
  2090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2091  05C4  01BA               	clrf	printf@eexp^(0+128)
  2092  05C5  01BB               	clrf	(printf@eexp+1)^(0+128)
  2093  05C6                     l3658:	
  2094                           
  2095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2096  05C6  01C4               	clrf	printf@c^(0+128)
  2097  05C7  0AC4               	incf	printf@c^(0+128),f
  2098  05C8                     l3664:	
  2099                           
  2100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2101  05C8  0844               	movf	printf@c^(0+128),w
  2102  05C9  00A5               	movwf	??_printf^(0+128)
  2103  05CA  3001               	movlw	1
  2104  05CB                     u6425:	
  2105  05CB  1003               	clrc
  2106  05CC  0DA5               	rlf	??_printf^(0+128),f
  2107  05CD  3EFF               	addlw	-1
  2108  05CE  1D03               	skipz
  2109  05CF  2DCB               	goto	u6425
  2110  05D0  1003               	clrc
  2111  05D1  0D25               	rlf	??_printf^(0+128),w
  2112  05D2  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2113  05D3  0084               	movwf	4
  2114  05D4  120A  158A  200A  120A  118A  	fcall	stringdir
  2115  05D9  00A6               	movwf	(??_printf+1)^(0+128)
  2116  05DA  120A  158A  200A  120A  118A  	fcall	stringdir
  2117  05DF  00A7               	movwf	((??_printf+1)^(0+128)+1)
  2118  05E0  120A  158A  200A  120A  118A  	fcall	stringdir
  2119  05E5  00A8               	movwf	((??_printf+1)^(0+128)+2)
  2120  05E6  120A  158A  200A  120A  118A  	fcall	stringdir
  2121  05EB  00A9               	movwf	((??_printf+1)^(0+128)+3)
  2122  05EC  0829               	movf	(??_printf+4)^(0+128),w
  2123  05ED  0239               	subwf	(printf@val+3)^(0+128),w
  2124  05EE  1D03               	skipz
  2125  05EF  2DFA               	goto	u6435
  2126  05F0  0828               	movf	(??_printf+3)^(0+128),w
  2127  05F1  0238               	subwf	(printf@val+2)^(0+128),w
  2128  05F2  1D03               	skipz
  2129  05F3  2DFA               	goto	u6435
  2130  05F4  0827               	movf	(??_printf+2)^(0+128),w
  2131  05F5  0237               	subwf	(printf@val+1)^(0+128),w
  2132  05F6  1D03               	skipz
  2133  05F7  2DFA               	goto	u6435
  2134  05F8  0826               	movf	(??_printf+1)^(0+128),w
  2135  05F9  0236               	subwf	printf@val^(0+128),w
  2136  05FA                     u6435:	
  2137  05FA  1C03               	btfss	3,0
  2138  05FB  2E04               	goto	l3670
  2139  05FC  3001               	movlw	1
  2140  05FD  00A5               	movwf	??_printf^(0+128)
  2141  05FE  0825               	movf	??_printf^(0+128),w
  2142  05FF  07C4               	addwf	printf@c^(0+128),f
  2143  0600  300A               	movlw	10
  2144  0601  0644               	xorwf	printf@c^(0+128),w
  2145  0602  1D03               	btfss	3,2
  2146  0603  2DC8               	goto	l3664
  2147  0604                     l3670:	
  2148                           
  2149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2150  0604  3003               	movlw	3
  2151  0605  0530               	andwf	printf@flag^(0+128),w
  2152  0606  00A5               	movwf	??_printf^(0+128)
  2153  0607  3000               	movlw	0
  2154  0608  0531               	andwf	(printf@flag+1)^(0+128),w
  2155  0609  00A6               	movwf	(??_printf+1)^(0+128)
  2156  060A  0825               	movf	??_printf^(0+128),w
  2157  060B  0426               	iorwf	(??_printf^(0+128)+1),w
  2158  060C  1903               	btfsc	3,2
  2159  060D  2E14               	goto	l3680
  2160                           
  2161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          (putch('-') );
  2162  060E  302D               	movlw	45
  2163  060F                     L3:	
  2164  060F  120A  118A  2003  120A  118A  	fcall	_putch
  2165  0614                     l3680:	
  2166                           
  2167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2168  0614  3001               	movlw	1
  2169  0615  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0616  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0617  02C4               	subwf	printf@c^(0+128),f
  2172  0618  0A44               	incf	printf@c^(0+128),w
  2173  0619  1903               	btfsc	3,2
  2174  061A  2E86               	goto	l3686
  2175                           
  2176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2177  061B  0844               	movf	printf@c^(0+128),w
  2178  061C  00A5               	movwf	??_printf^(0+128)
  2179  061D  3001               	movlw	1
  2180  061E                     u6465:	
  2181  061E  1003               	clrc
  2182  061F  0DA5               	rlf	??_printf^(0+128),f
  2183  0620  3EFF               	addlw	-1
  2184  0621  1D03               	skipz
  2185  0622  2E1E               	goto	u6465
  2186  0623  1003               	clrc
  2187  0624  0D25               	rlf	??_printf^(0+128),w
  2188  0625  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2189  0626  0084               	movwf	4
  2190  0627  120A  158A  200A  120A  118A  	fcall	stringdir
  2191  062C  00F0               	movwf	___lldiv@divisor
  2192  062D  120A  158A  200A  120A  118A  	fcall	stringdir
  2193  0632  00F1               	movwf	___lldiv@divisor+1
  2194  0633  120A  158A  200A  120A  118A  	fcall	stringdir
  2195  0638  00F2               	movwf	___lldiv@divisor+2
  2196  0639  120A  158A  200A  120A  118A  	fcall	stringdir
  2197  063E  00F3               	movwf	___lldiv@divisor+3
  2198  063F  0839               	movf	(printf@val+3)^(0+128),w
  2199  0640  00F7               	movwf	___lldiv@dividend+3
  2200  0641  0838               	movf	(printf@val+2)^(0+128),w
  2201  0642  00F6               	movwf	___lldiv@dividend+2
  2202  0643  0837               	movf	(printf@val+1)^(0+128),w
  2203  0644  00F5               	movwf	___lldiv@dividend+1
  2204  0645  0836               	movf	printf@val^(0+128),w
  2205  0646  00F4               	movwf	___lldiv@dividend
  2206  0647  160A  158A  26A2  120A  118A  	fcall	___lldiv
  2207  064C  0873               	movf	?___lldiv+3,w
  2208  064D  1683               	bsf	3,5	;RP0=1, select bank1
  2209  064E  1303               	bcf	3,6	;RP1=0, select bank1
  2210  064F  00BF               	movwf	(printf@tmpval+3)^(0+128)
  2211  0650  0872               	movf	?___lldiv+2,w
  2212  0651  00BE               	movwf	(printf@tmpval+2)^(0+128)
  2213  0652  0871               	movf	?___lldiv+1,w
  2214  0653  00BD               	movwf	(printf@tmpval+1)^(0+128)
  2215  0654  0870               	movf	?___lldiv,w
  2216  0655  00BC               	movwf	printf@tmpval^(0+128)
  2217                           
  2218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2219  0656  3000               	movlw	0
  2220  0657  00F3               	movwf	___llmod@divisor+3
  2221  0658  3000               	movlw	0
  2222  0659  00F2               	movwf	___llmod@divisor+2
  2223  065A  3000               	movlw	0
  2224  065B  00F1               	movwf	___llmod@divisor+1
  2225  065C  300A               	movlw	10
  2226  065D  00F0               	movwf	___llmod@divisor
  2227  065E  083F               	movf	(printf@tmpval+3)^(0+128),w
  2228  065F  00F7               	movwf	___llmod@dividend+3
  2229  0660  083E               	movf	(printf@tmpval+2)^(0+128),w
  2230  0661  00F6               	movwf	___llmod@dividend+2
  2231  0662  083D               	movf	(printf@tmpval+1)^(0+128),w
  2232  0663  00F5               	movwf	___llmod@dividend+1
  2233  0664  083C               	movf	printf@tmpval^(0+128),w
  2234  0665  00F4               	movwf	___llmod@dividend
  2235  0666  160A  158A  25FB  120A  118A  	fcall	___llmod
  2236  066B  0873               	movf	?___llmod+3,w
  2237  066C  1683               	bsf	3,5	;RP0=1, select bank1
  2238  066D  1303               	bcf	3,6	;RP1=0, select bank1
  2239  066E  00BF               	movwf	(printf@tmpval+3)^(0+128)
  2240  066F  0872               	movf	?___llmod+2,w
  2241  0670  00BE               	movwf	(printf@tmpval+2)^(0+128)
  2242  0671  0871               	movf	?___llmod+1,w
  2243  0672  00BD               	movwf	(printf@tmpval+1)^(0+128)
  2244  0673  0870               	movf	?___llmod,w
  2245  0674  00BC               	movwf	printf@tmpval^(0+128)
  2246                           
  2247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          (putch('0' + tmpval.vd) );
  2248  0675  083C               	movf	printf@tmpval^(0+128),w
  2249  0676  3E30               	addlw	48
  2250  0677  2E0F               	goto	L3
  2251  0678                     l3682:	
  2252                           
  2253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          putch('0') );
  2254  0678  3030               	movlw	48
  2255  0679  120A  118A  2003  120A  118A  	fcall	_putch
  2256                           
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2258  067E  30FF               	movlw	255
  2259  067F  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0680  1303               	bcf	3,6	;RP1=0, select bank1
  2261  0681  07BA               	addwf	printf@eexp^(0+128),f
  2262  0682  1803               	skipnc
  2263  0683  0ABB               	incf	(printf@eexp+1)^(0+128),f
  2264  0684  30FF               	movlw	255
  2265  0685  07BB               	addwf	(printf@eexp+1)^(0+128),f
  2266  0686                     l3686:	
  2267                           
  2268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2269  0686  083B               	movf	(printf@eexp+1)^(0+128),w
  2270  0687  3A80               	xorlw	128
  2271  0688  00FF               	movwf	127
  2272  0689  3080               	movlw	128
  2273  068A  027F               	subwf	127,w
  2274  068B  1D03               	skipz
  2275  068C  2E8F               	goto	u6485
  2276  068D  3001               	movlw	1
  2277  068E  023A               	subwf	printf@eexp^(0+128),w
  2278  068F                     u6485:	
  2279  068F  1803               	skipnc
  2280  0690  2E78               	goto	l3682
  2281                           
  2282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2283  0691  1683               	bsf	3,5	;RP0=1, select bank1
  2284  0692  1303               	bcf	3,6	;RP1=0, select bank1
  2285  0693  0835               	movf	(printf@prec+1)^(0+128),w
  2286  0694  3A80               	xorlw	128
  2287  0695  00FF               	movwf	127
  2288  0696  3080               	movlw	128
  2289  0697  027F               	subwf	127,w
  2290  0698  1D03               	skipz
  2291  0699  2E9C               	goto	u6495
  2292  069A  3009               	movlw	9
  2293  069B  0234               	subwf	printf@prec^(0+128),w
  2294  069C                     u6495:	
  2295  069C  1C03               	skipc
  2296  069D  2EA2               	goto	l3692
  2297                           
  2298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2299  069E  3008               	movlw	8
  2300  069F  1683               	bsf	3,5	;RP0=1, select bank1
  2301  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  2302  06A1  2EA5               	goto	L4
  2303  06A2                     l3692:	
  2304                           
  2305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2306  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  2307  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  2308  06A4  0834               	movf	printf@prec^(0+128),w
  2309  06A5                     L4:	
  2310  06A5  00A5               	movwf	??_printf^(0+128)
  2311  06A6  0825               	movf	??_printf^(0+128),w
  2312  06A7  00C4               	movwf	printf@c^(0+128)
  2313                           
  2314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2315  06A8  0844               	movf	printf@c^(0+128),w
  2316  06A9  00A5               	movwf	??_printf^(0+128)
  2317  06AA  01A6               	clrf	(??_printf^(0+128)+1)
  2318  06AB  0825               	movf	??_printf^(0+128),w
  2319  06AC  02B4               	subwf	printf@prec^(0+128),f
  2320  06AD  0826               	movf	(??_printf+1)^(0+128),w
  2321  06AE  1C03               	skipc
  2322  06AF  03B5               	decf	(printf@prec+1)^(0+128),f
  2323  06B0  02B5               	subwf	(printf@prec+1)^(0+128),f
  2324                           
  2325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2326  06B1  0844               	movf	printf@c^(0+128),w
  2327  06B2  1903               	btfsc	3,2
  2328  06B3  2EBA               	goto	l3698
  2329                           
  2330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          putch('.') );
  2331  06B4  302E               	movlw	46
  2332  06B5  120A  118A  2003  120A  118A  	fcall	_putch
  2333  06BA                     l3698:	
  2334                           
  2335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2336  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  2337  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  2338  06BC  0844               	movf	printf@c^(0+128),w
  2339  06BD  120A  158A  24B7  120A  118A  	fcall	_scale
  2340  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2341  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2342  06C4  0841               	movf	?_scale+3,w
  2343  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  2344  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  2345  06C7  00AD               	movwf	(_printf$767+3)^(0+128)
  2346  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2347  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2348  06CA  0840               	movf	?_scale+2,w
  2349  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  2350  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  2351  06CD  00AC               	movwf	(_printf$767+2)^(0+128)
  2352  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2353  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2354  06D0  083F               	movf	?_scale+1,w
  2355  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  2356  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  2357  06D3  00AB               	movwf	(_printf$767+1)^(0+128)
  2358  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  2359  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  2360  06D6  083E               	movf	?_scale,w
  2361  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  2362  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  2363  06D9  00AA               	movwf	_printf$767^(0+128)
  2364                           
  2365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2366  06DA  082D               	movf	(_printf$767+3)^(0+128),w
  2367  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  2368  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  2369  06DD  00AB               	movwf	___flmul@a+3
  2370  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  2371  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  2372  06E0  082C               	movf	(_printf$767+2)^(0+128),w
  2373  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2374  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2375  06E3  00AA               	movwf	___flmul@a+2
  2376  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  2377  06E5  1303               	bcf	3,6	;RP1=0, select bank1
  2378  06E6  082B               	movf	(_printf$767+1)^(0+128),w
  2379  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2380  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2381  06E9  00A9               	movwf	___flmul@a+1
  2382  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  2383  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  2384  06EC  082A               	movf	_printf$767^(0+128),w
  2385  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  2386  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  2387  06EF  00A8               	movwf	___flmul@a
  2388  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  2389  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  2390  06F2  0843               	movf	(printf@fval+3)^(0+128),w
  2391  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  2392  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  2393  06F5  00A7               	movwf	___flmul@b+3
  2394  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  2395  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  2396  06F8  0842               	movf	(printf@fval+2)^(0+128),w
  2397  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  2398  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  2399  06FB  00A6               	movwf	___flmul@b+2
  2400  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  2401  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  2402  06FE  0841               	movf	(printf@fval+1)^(0+128),w
  2403  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0700  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0701  00A5               	movwf	___flmul@b+1
  2406  0702  1683               	bsf	3,5	;RP0=1, select bank1
  2407  0703  1303               	bcf	3,6	;RP1=0, select bank1
  2408  0704  0840               	movf	printf@fval^(0+128),w
  2409  0705  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0706  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0707  00A4               	movwf	___flmul@b
  2412  0708  120A  158A  21A2  120A  118A  	fcall	___flmul
  2413  070D  1283               	bcf	3,5	;RP0=0, select bank0
  2414  070E  1303               	bcf	3,6	;RP1=0, select bank0
  2415  070F  0827               	movf	?___flmul+3,w
  2416  0710  00D4               	movwf	___fltol@f1+3
  2417  0711  0826               	movf	?___flmul+2,w
  2418  0712  00D3               	movwf	___fltol@f1+2
  2419  0713  0825               	movf	?___flmul+1,w
  2420  0714  00D2               	movwf	___fltol@f1+1
  2421  0715  0824               	movf	?___flmul,w
  2422  0716  00D1               	movwf	___fltol@f1
  2423  0717  160A  158A  2700  120A  118A  	fcall	___fltol
  2424  071C  1283               	bcf	3,5	;RP0=0, select bank0
  2425  071D  1303               	bcf	3,6	;RP1=0, select bank0
  2426  071E  0854               	movf	?___fltol+3,w
  2427  071F  1683               	bsf	3,5	;RP0=1, select bank1
  2428  0720  1303               	bcf	3,6	;RP1=0, select bank1
  2429  0721  00B9               	movwf	(printf@val+3)^(0+128)
  2430  0722  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0723  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0724  0853               	movf	?___fltol+2,w
  2433  0725  1683               	bsf	3,5	;RP0=1, select bank1
  2434  0726  1303               	bcf	3,6	;RP1=0, select bank1
  2435  0727  00B8               	movwf	(printf@val+2)^(0+128)
  2436  0728  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0729  1303               	bcf	3,6	;RP1=0, select bank0
  2438  072A  0852               	movf	?___fltol+1,w
  2439  072B  1683               	bsf	3,5	;RP0=1, select bank1
  2440  072C  1303               	bcf	3,6	;RP1=0, select bank1
  2441  072D  00B7               	movwf	(printf@val+1)^(0+128)
  2442  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2443  072F  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0730  0851               	movf	?___fltol,w
  2445  0731  1683               	bsf	3,5	;RP0=1, select bank1
  2446  0732  1303               	bcf	3,6	;RP1=0, select bank1
  2447  0733                     L5:	
  2448  0733  00B6               	movwf	printf@val^(0+128)
  2449                           
  2450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2451  0734  3001               	movlw	1
  2452  0735  02C4               	subwf	printf@c^(0+128),f
  2453  0736  0A44               	incf	printf@c^(0+128),w
  2454  0737  1903               	btfsc	3,2
  2455  0738  2FE5               	goto	l3714
  2456                           
  2457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  2458                           
  2459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2460  0739  0844               	movf	printf@c^(0+128),w
  2461  073A  00A5               	movwf	??_printf^(0+128)
  2462  073B  3001               	movlw	1
  2463  073C                     u6515:	
  2464  073C  1003               	clrc
  2465  073D  0DA5               	rlf	??_printf^(0+128),f
  2466  073E  3EFF               	addlw	-1
  2467  073F  1D03               	skipz
  2468  0740  2F3C               	goto	u6515
  2469  0741  1003               	clrc
  2470  0742  0D25               	rlf	??_printf^(0+128),w
  2471  0743  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2472  0744  0084               	movwf	4
  2473  0745  120A  158A  200A  120A  118A  	fcall	stringdir
  2474  074A  00F0               	movwf	___lldiv@divisor
  2475  074B  120A  158A  200A  120A  118A  	fcall	stringdir
  2476  0750  00F1               	movwf	___lldiv@divisor+1
  2477  0751  120A  158A  200A  120A  118A  	fcall	stringdir
  2478  0756  00F2               	movwf	___lldiv@divisor+2
  2479  0757  120A  158A  200A  120A  118A  	fcall	stringdir
  2480  075C  00F3               	movwf	___lldiv@divisor+3
  2481  075D  0839               	movf	(printf@val+3)^(0+128),w
  2482  075E  00F7               	movwf	___lldiv@dividend+3
  2483  075F  0838               	movf	(printf@val+2)^(0+128),w
  2484  0760  00F6               	movwf	___lldiv@dividend+2
  2485  0761  0837               	movf	(printf@val+1)^(0+128),w
  2486  0762  00F5               	movwf	___lldiv@dividend+1
  2487  0763  0836               	movf	printf@val^(0+128),w
  2488  0764  00F4               	movwf	___lldiv@dividend
  2489  0765  160A  158A  26A2  120A  118A  	fcall	___lldiv
  2490  076A  0873               	movf	?___lldiv+3,w
  2491  076B  1683               	bsf	3,5	;RP0=1, select bank1
  2492  076C  1303               	bcf	3,6	;RP1=0, select bank1
  2493  076D  00BF               	movwf	(printf@tmpval+3)^(0+128)
  2494  076E  0872               	movf	?___lldiv+2,w
  2495  076F  00BE               	movwf	(printf@tmpval+2)^(0+128)
  2496  0770  0871               	movf	?___lldiv+1,w
  2497  0771  00BD               	movwf	(printf@tmpval+1)^(0+128)
  2498  0772  0870               	movf	?___lldiv,w
  2499  0773  00BC               	movwf	printf@tmpval^(0+128)
  2500                           
  2501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  2502  0774  3000               	movlw	0
  2503  0775  00F3               	movwf	___llmod@divisor+3
  2504  0776  3000               	movlw	0
  2505  0777  00F2               	movwf	___llmod@divisor+2
  2506  0778  3000               	movlw	0
  2507  0779  00F1               	movwf	___llmod@divisor+1
  2508  077A  300A               	movlw	10
  2509  077B  00F0               	movwf	___llmod@divisor
  2510  077C  083F               	movf	(printf@tmpval+3)^(0+128),w
  2511  077D  00F7               	movwf	___llmod@dividend+3
  2512  077E  083E               	movf	(printf@tmpval+2)^(0+128),w
  2513  077F  00F6               	movwf	___llmod@dividend+2
  2514  0780  083D               	movf	(printf@tmpval+1)^(0+128),w
  2515  0781  00F5               	movwf	___llmod@dividend+1
  2516  0782  083C               	movf	printf@tmpval^(0+128),w
  2517  0783  00F4               	movwf	___llmod@dividend
  2518  0784  160A  158A  25FB  120A  118A  	fcall	___llmod
  2519  0789  0873               	movf	?___llmod+3,w
  2520  078A  1683               	bsf	3,5	;RP0=1, select bank1
  2521  078B  1303               	bcf	3,6	;RP1=0, select bank1
  2522  078C  00BF               	movwf	(printf@tmpval+3)^(0+128)
  2523  078D  0872               	movf	?___llmod+2,w
  2524  078E  00BE               	movwf	(printf@tmpval+2)^(0+128)
  2525  078F  0871               	movf	?___llmod+1,w
  2526  0790  00BD               	movwf	(printf@tmpval+1)^(0+128)
  2527  0791  0870               	movf	?___llmod,w
  2528  0792  00BC               	movwf	printf@tmpval^(0+128)
  2529                           
  2530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          putch('0' + tmpval.vd) );
  2531  0793  083C               	movf	printf@tmpval^(0+128),w
  2532  0794  3E30               	addlw	48
  2533  0795  120A  118A  2003  120A  118A  	fcall	_putch
  2534                           
  2535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  2536  079A  1683               	bsf	3,5	;RP0=1, select bank1
  2537  079B  1303               	bcf	3,6	;RP1=0, select bank1
  2538  079C  0844               	movf	printf@c^(0+128),w
  2539  079D  00A5               	movwf	??_printf^(0+128)
  2540  079E  3001               	movlw	1
  2541  079F                     u6525:	
  2542  079F  1003               	clrc
  2543  07A0  0DA5               	rlf	??_printf^(0+128),f
  2544  07A1  3EFF               	addlw	-1
  2545  07A2  1D03               	skipz
  2546  07A3  2F9F               	goto	u6525
  2547  07A4  1003               	clrc
  2548  07A5  0D25               	rlf	??_printf^(0+128),w
  2549  07A6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2550  07A7  0084               	movwf	4
  2551  07A8  120A  158A  200A  120A  118A  	fcall	stringdir
  2552  07AD  00F0               	movwf	___llmod@divisor
  2553  07AE  120A  158A  200A  120A  118A  	fcall	stringdir
  2554  07B3  00F1               	movwf	___llmod@divisor+1
  2555  07B4  120A  158A  200A  120A  118A  	fcall	stringdir
  2556  07B9  00F2               	movwf	___llmod@divisor+2
  2557  07BA  120A  158A  200A  120A  118A  	fcall	stringdir
  2558  07BF  00F3               	movwf	___llmod@divisor+3
  2559  07C0  0839               	movf	(printf@val+3)^(0+128),w
  2560  07C1  00F7               	movwf	___llmod@dividend+3
  2561  07C2  0838               	movf	(printf@val+2)^(0+128),w
  2562  07C3  00F6               	movwf	___llmod@dividend+2
  2563  07C4  0837               	movf	(printf@val+1)^(0+128),w
  2564  07C5  00F5               	movwf	___llmod@dividend+1
  2565  07C6  0836               	movf	printf@val^(0+128),w
  2566  07C7  00F4               	movwf	___llmod@dividend
  2567  07C8  160A  158A  25FB  120A  118A  	fcall	___llmod
  2568  07CD  0873               	movf	?___llmod+3,w
  2569  07CE  1683               	bsf	3,5	;RP0=1, select bank1
  2570  07CF  1303               	bcf	3,6	;RP1=0, select bank1
  2571  07D0  00B9               	movwf	(printf@val+3)^(0+128)
  2572  07D1  0872               	movf	?___llmod+2,w
  2573  07D2  00B8               	movwf	(printf@val+2)^(0+128)
  2574  07D3  0871               	movf	?___llmod+1,w
  2575  07D4  00B7               	movwf	(printf@val+1)^(0+128)
  2576  07D5  0870               	movf	?___llmod,w
  2577  07D6  2F33               	goto	L5
  2578  07D7                     l3710:	
  2579                           
  2580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          putch('0') );
  2581  07D7  3030               	movlw	48
  2582  07D8  120A  118A  2003  120A  118A  	fcall	_putch
  2583                           
  2584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  2585  07DD  30FF               	movlw	255
  2586  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  2587  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  2588  07E0  07B4               	addwf	printf@prec^(0+128),f
  2589  07E1  1803               	skipnc
  2590  07E2  0AB5               	incf	(printf@prec+1)^(0+128),f
  2591  07E3  30FF               	movlw	255
  2592  07E4  07B5               	addwf	(printf@prec+1)^(0+128),f
  2593  07E5                     l3714:	
  2594                           
  2595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  2596  07E5  0834               	movf	printf@prec^(0+128),w
  2597  07E6  0435               	iorwf	(printf@prec+1)^(0+128),w
  2598  07E7  1903               	btfsc	3,2
  2599  07E8  2A68               	goto	l3720
  2600  07E9  2FD7               	goto	l3710
  2601  07EA                     l3716:	
  2602                           
  2603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2604  07EA  3003               	movlw	3
  2605  07EB  0530               	andwf	printf@flag^(0+128),w
  2606  07EC  00A5               	movwf	??_printf^(0+128)
  2607  07ED  3000               	movlw	0
  2608  07EE  0531               	andwf	(printf@flag+1)^(0+128),w
  2609  07EF  00A6               	movwf	(??_printf+1)^(0+128)
  2610  07F0  0825               	movf	??_printf^(0+128),w
  2611  07F1  0426               	iorwf	(??_printf^(0+128)+1),w
  2612  07F2  1903               	btfsc	3,2
  2613  07F3  2A68               	goto	l3720
  2614                           
  2615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          putch('-') );
  2616  07F4  302D               	movlw	45
  2617  07F5                     L1:	
  2618  07F5  120A  118A  2003  120A  118A  	fcall	_putch
  2619  07FA  2A68               	goto	l3720
  2620  07FB                     l181:	
  2621  07FB  0008               	return
  2622  07FC                     __end_of_printf:	
  2623                           
  2624                           	psect	text2
  2625  0CB7                     __ptext2:	
  2626 ;; *************** function _scale *****************
  2627 ;; Defined at:
  2628 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  scl             1    wreg     char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  scl             1   48[BANK0 ] char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  4   30[BANK0 ] char 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         0       4       0       0       0
  2643 ;;      Locals:         0       5       0       0       0
  2644 ;;      Temps:          0      10       0       0       0
  2645 ;;      Totals:         0      19       0       0       0
  2646 ;;Total ram usage:       19 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    2
  2649 ;; This function calls:
  2650 ;;		___awdiv
  2651 ;;		___awmod
  2652 ;;		___flmul
  2653 ;; This function is called by:
  2654 ;;		_printf
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           
  2659                           ;psect for function _scale
  2660  0CB7                     _scale:	
  2661                           
  2662                           ;incstack = 0
  2663                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2664                           ;scale@scl stored from wreg
  2665  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  2666  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  2667  0CB9  00D0               	movwf	scale@scl
  2668                           
  2669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  2670  0CBA  1FD0               	btfss	scale@scl,7
  2671  0CBB  2E5F               	goto	l3130
  2672                           
  2673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  2674  0CBC  09D0               	comf	scale@scl,f
  2675  0CBD  0AD0               	incf	scale@scl,f
  2676                           
  2677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  2678  0CBE  0850               	movf	scale@scl,w
  2679  0CBF  3A80               	xorlw	128
  2680  0CC0  3E12               	addlw	-238
  2681  0CC1  1C03               	skipc
  2682  0CC2  2DA9               	goto	l3120
  2683                           
  2684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2685  0CC3  300A               	movlw	10
  2686  0CC4  00F7               	movwf	___awdiv@divisor
  2687  0CC5  3000               	movlw	0
  2688  0CC6  00F8               	movwf	___awdiv@divisor+1
  2689  0CC7  0850               	movf	scale@scl,w
  2690  0CC8  00F2               	movwf	___awmod@dividend
  2691  0CC9  01F3               	clrf	___awmod@dividend+1
  2692  0CCA  1BF2               	btfsc	___awmod@dividend,7
  2693  0CCB  03F3               	decf	___awmod@dividend+1,f
  2694  0CCC  3064               	movlw	100
  2695  0CCD  00F0               	movwf	___awmod@divisor
  2696  0CCE  3000               	movlw	0
  2697  0CCF  00F1               	movwf	___awmod@divisor+1
  2698  0CD0  160A  158A  25B0  120A  158A  	fcall	___awmod
  2699  0CD5  0871               	movf	?___awmod+1,w
  2700  0CD6  00FA               	movwf	___awdiv@dividend+1
  2701  0CD7  0870               	movf	?___awmod,w
  2702  0CD8  00F9               	movwf	___awdiv@dividend
  2703  0CD9  160A  158A  2647  120A  158A  	fcall	___awdiv
  2704  0CDE  0877               	movf	?___awdiv,w
  2705  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0CE1  00C2               	movwf	??_scale
  2708  0CE2  3001               	movlw	1
  2709  0CE3                     u5245:	
  2710  0CE3  1003               	clrc
  2711  0CE4  0DC2               	rlf	??_scale,f
  2712  0CE5  3EFF               	addlw	-1
  2713  0CE6  1D03               	skipz
  2714  0CE7  2CE3               	goto	u5245
  2715  0CE8  1003               	clrc
  2716  0CE9  0D42               	rlf	??_scale,w
  2717  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2718  0CEB  0084               	movwf	4
  2719  0CEC  120A  158A  200A  120A  158A  	fcall	stringdir
  2720  0CF1  00C3               	movwf	??_scale+1
  2721  0CF2  120A  158A  200A  120A  158A  	fcall	stringdir
  2722  0CF7  00C4               	movwf	??_scale+2
  2723  0CF8  120A  158A  200A  120A  158A  	fcall	stringdir
  2724  0CFD  00C5               	movwf	??_scale+3
  2725  0CFE  120A  158A  200A  120A  158A  	fcall	stringdir
  2726  0D03  00C6               	movwf	??_scale+4
  2727  0D04  0846               	movf	??_scale+4,w
  2728  0D05  00A7               	movwf	___flmul@b+3
  2729  0D06  0845               	movf	??_scale+3,w
  2730  0D07  00A6               	movwf	___flmul@b+2
  2731  0D08  0844               	movf	??_scale+2,w
  2732  0D09  00A5               	movwf	___flmul@b+1
  2733  0D0A  0843               	movf	??_scale+1,w
  2734  0D0B  00A4               	movwf	___flmul@b
  2735  0D0C  3064               	movlw	100
  2736  0D0D  00F7               	movwf	___awdiv@divisor
  2737  0D0E  3000               	movlw	0
  2738  0D0F  00F8               	movwf	___awdiv@divisor+1
  2739  0D10  0850               	movf	scale@scl,w
  2740  0D11  00F9               	movwf	___awdiv@dividend
  2741  0D12  01FA               	clrf	___awdiv@dividend+1
  2742  0D13  1BF9               	btfsc	___awdiv@dividend,7
  2743  0D14  03FA               	decf	___awdiv@dividend+1,f
  2744  0D15  160A  158A  2647  120A  158A  	fcall	___awdiv
  2745  0D1A  0877               	movf	?___awdiv,w
  2746  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  2748  0D1D  00C7               	movwf	??_scale+5
  2749  0D1E  3001               	movlw	1
  2750  0D1F                     u5255:	
  2751  0D1F  1003               	clrc
  2752  0D20  0DC7               	rlf	??_scale+5,f
  2753  0D21  3EFF               	addlw	-1
  2754  0D22  1D03               	skipz
  2755  0D23  2D1F               	goto	u5255
  2756  0D24  1003               	clrc
  2757  0D25  0D47               	rlf	??_scale+5,w
  2758  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2759  0D27  0084               	movwf	4
  2760  0D28  120A  158A  200A  120A  158A  	fcall	stringdir
  2761  0D2D  00C8               	movwf	??_scale+6
  2762  0D2E  120A  158A  200A  120A  158A  	fcall	stringdir
  2763  0D33  00C9               	movwf	??_scale+7
  2764  0D34  120A  158A  200A  120A  158A  	fcall	stringdir
  2765  0D39  00CA               	movwf	??_scale+8
  2766  0D3A  120A  158A  200A  120A  158A  	fcall	stringdir
  2767  0D3F  00CB               	movwf	??_scale+9
  2768  0D40  084B               	movf	??_scale+9,w
  2769  0D41  00AB               	movwf	___flmul@a+3
  2770  0D42  084A               	movf	??_scale+8,w
  2771  0D43  00AA               	movwf	___flmul@a+2
  2772  0D44  0849               	movf	??_scale+7,w
  2773  0D45  00A9               	movwf	___flmul@a+1
  2774  0D46  0848               	movf	??_scale+6,w
  2775  0D47  00A8               	movwf	___flmul@a
  2776  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  2777  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0D4F  0827               	movf	?___flmul+3,w
  2780  0D50  00CF               	movwf	_scale$766+3
  2781  0D51  0826               	movf	?___flmul+2,w
  2782  0D52  00CE               	movwf	_scale$766+2
  2783  0D53  0825               	movf	?___flmul+1,w
  2784  0D54  00CD               	movwf	_scale$766+1
  2785  0D55  0824               	movf	?___flmul,w
  2786  0D56  00CC               	movwf	_scale$766
  2787                           
  2788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2789  0D57  300A               	movlw	10
  2790  0D58  00F0               	movwf	___awmod@divisor
  2791  0D59  3000               	movlw	0
  2792  0D5A  00F1               	movwf	___awmod@divisor+1
  2793  0D5B  0850               	movf	scale@scl,w
  2794  0D5C  00F2               	movwf	___awmod@dividend
  2795  0D5D  01F3               	clrf	___awmod@dividend+1
  2796  0D5E  1BF2               	btfsc	___awmod@dividend,7
  2797  0D5F  03F3               	decf	___awmod@dividend+1,f
  2798  0D60  160A  158A  25B0  120A  158A  	fcall	___awmod
  2799  0D65  0870               	movf	?___awmod,w
  2800  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0D68  00C2               	movwf	??_scale
  2803  0D69  3001               	movlw	1
  2804  0D6A                     u5265:	
  2805  0D6A  1003               	clrc
  2806  0D6B  0DC2               	rlf	??_scale,f
  2807  0D6C  3EFF               	addlw	-1
  2808  0D6D  1D03               	skipz
  2809  0D6E  2D6A               	goto	u5265
  2810  0D6F  1003               	clrc
  2811  0D70  0D42               	rlf	??_scale,w
  2812  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2813  0D72  0084               	movwf	4
  2814  0D73  120A  158A  200A  120A  158A  	fcall	stringdir
  2815  0D78  00C3               	movwf	??_scale+1
  2816  0D79  120A  158A  200A  120A  158A  	fcall	stringdir
  2817  0D7E  00C4               	movwf	??_scale+2
  2818  0D7F  120A  158A  200A  120A  158A  	fcall	stringdir
  2819  0D84  00C5               	movwf	??_scale+3
  2820  0D85  120A  158A  200A  120A  158A  	fcall	stringdir
  2821  0D8A  00C6               	movwf	??_scale+4
  2822  0D8B  0846               	movf	??_scale+4,w
  2823  0D8C  00A7               	movwf	___flmul@b+3
  2824  0D8D  0845               	movf	??_scale+3,w
  2825  0D8E  00A6               	movwf	___flmul@b+2
  2826  0D8F  0844               	movf	??_scale+2,w
  2827  0D90  00A5               	movwf	___flmul@b+1
  2828  0D91  0843               	movf	??_scale+1,w
  2829  0D92  00A4               	movwf	___flmul@b
  2830  0D93  084F               	movf	_scale$766+3,w
  2831  0D94  00AB               	movwf	___flmul@a+3
  2832  0D95  084E               	movf	_scale$766+2,w
  2833  0D96  00AA               	movwf	___flmul@a+2
  2834  0D97  084D               	movf	_scale$766+1,w
  2835  0D98  00A9               	movwf	___flmul@a+1
  2836  0D99  084C               	movf	_scale$766,w
  2837  0D9A  00A8               	movwf	___flmul@a
  2838  0D9B  120A  158A  21A2   	fcall	___flmul
  2839  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0DA0  0827               	movf	?___flmul+3,w
  2842  0DA1  00C1               	movwf	?_scale+3
  2843  0DA2  0826               	movf	?___flmul+2,w
  2844  0DA3  00C0               	movwf	?_scale+2
  2845  0DA4  0825               	movf	?___flmul+1,w
  2846  0DA5  00BF               	movwf	?_scale+1
  2847  0DA6  0824               	movf	?___flmul,w
  2848  0DA7  00BE               	movwf	?_scale
  2849  0DA8  0008               	return
  2850  0DA9                     l3120:	
  2851  0DA9  0850               	movf	scale@scl,w
  2852  0DAA  3A80               	xorlw	128
  2853  0DAB  3E75               	addlw	-139
  2854  0DAC  1C03               	skipc
  2855  0DAD  2E34               	goto	l3126
  2856                           
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2858  0DAE  300A               	movlw	10
  2859  0DAF  00F0               	movwf	___awmod@divisor
  2860  0DB0  3000               	movlw	0
  2861  0DB1  00F1               	movwf	___awmod@divisor+1
  2862  0DB2  0850               	movf	scale@scl,w
  2863  0DB3  00F2               	movwf	___awmod@dividend
  2864  0DB4  01F3               	clrf	___awmod@dividend+1
  2865  0DB5  1BF2               	btfsc	___awmod@dividend,7
  2866  0DB6  03F3               	decf	___awmod@dividend+1,f
  2867  0DB7  160A  158A  25B0  120A  158A  	fcall	___awmod
  2868  0DBC  0870               	movf	?___awmod,w
  2869  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0DBF  00C2               	movwf	??_scale
  2872  0DC0  3001               	movlw	1
  2873  0DC1                     u5285:	
  2874  0DC1  1003               	clrc
  2875  0DC2  0DC2               	rlf	??_scale,f
  2876  0DC3  3EFF               	addlw	-1
  2877  0DC4  1D03               	skipz
  2878  0DC5  2DC1               	goto	u5285
  2879  0DC6  1003               	clrc
  2880  0DC7  0D42               	rlf	??_scale,w
  2881  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2882  0DC9  0084               	movwf	4
  2883  0DCA  120A  158A  200A  120A  158A  	fcall	stringdir
  2884  0DCF  00C3               	movwf	??_scale+1
  2885  0DD0  120A  158A  200A  120A  158A  	fcall	stringdir
  2886  0DD5  00C4               	movwf	??_scale+2
  2887  0DD6  120A  158A  200A  120A  158A  	fcall	stringdir
  2888  0DDB  00C5               	movwf	??_scale+3
  2889  0DDC  120A  158A  200A  120A  158A  	fcall	stringdir
  2890  0DE1  00C6               	movwf	??_scale+4
  2891  0DE2  0846               	movf	??_scale+4,w
  2892  0DE3  00A7               	movwf	___flmul@b+3
  2893  0DE4  0845               	movf	??_scale+3,w
  2894  0DE5  00A6               	movwf	___flmul@b+2
  2895  0DE6  0844               	movf	??_scale+2,w
  2896  0DE7  00A5               	movwf	___flmul@b+1
  2897  0DE8  0843               	movf	??_scale+1,w
  2898  0DE9  00A4               	movwf	___flmul@b
  2899  0DEA  300A               	movlw	10
  2900  0DEB  00F7               	movwf	___awdiv@divisor
  2901  0DEC  3000               	movlw	0
  2902  0DED  00F8               	movwf	___awdiv@divisor+1
  2903  0DEE  0850               	movf	scale@scl,w
  2904  0DEF  00F9               	movwf	___awdiv@dividend
  2905  0DF0  01FA               	clrf	___awdiv@dividend+1
  2906  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  2907  0DF2  03FA               	decf	___awdiv@dividend+1,f
  2908  0DF3  160A  158A  2647  120A  158A  	fcall	___awdiv
  2909  0DF8  0877               	movf	?___awdiv,w
  2910  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0DFB  00C7               	movwf	??_scale+5
  2913  0DFC  3001               	movlw	1
  2914  0DFD                     u5295:	
  2915  0DFD  1003               	clrc
  2916  0DFE  0DC7               	rlf	??_scale+5,f
  2917  0DFF  3EFF               	addlw	-1
  2918  0E00  1D03               	skipz
  2919  0E01  2DFD               	goto	u5295
  2920  0E02  1003               	clrc
  2921  0E03  0D47               	rlf	??_scale+5,w
  2922  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2923  0E05  0084               	movwf	4
  2924  0E06  120A  158A  200A  120A  158A  	fcall	stringdir
  2925  0E0B  00C8               	movwf	??_scale+6
  2926  0E0C  120A  158A  200A  120A  158A  	fcall	stringdir
  2927  0E11  00C9               	movwf	??_scale+7
  2928  0E12  120A  158A  200A  120A  158A  	fcall	stringdir
  2929  0E17  00CA               	movwf	??_scale+8
  2930  0E18  120A  158A  200A  120A  158A  	fcall	stringdir
  2931  0E1D  00CB               	movwf	??_scale+9
  2932  0E1E  084B               	movf	??_scale+9,w
  2933  0E1F  00AB               	movwf	___flmul@a+3
  2934  0E20  084A               	movf	??_scale+8,w
  2935  0E21  00AA               	movwf	___flmul@a+2
  2936  0E22  0849               	movf	??_scale+7,w
  2937  0E23  00A9               	movwf	___flmul@a+1
  2938  0E24  0848               	movf	??_scale+6,w
  2939  0E25  00A8               	movwf	___flmul@a
  2940  0E26  120A  158A  21A2   	fcall	___flmul
  2941  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0E2B  0827               	movf	?___flmul+3,w
  2944  0E2C  00C1               	movwf	?_scale+3
  2945  0E2D  0826               	movf	?___flmul+2,w
  2946  0E2E  00C0               	movwf	?_scale+2
  2947  0E2F  0825               	movf	?___flmul+1,w
  2948  0E30  00BF               	movwf	?_scale+1
  2949  0E31  0824               	movf	?___flmul,w
  2950  0E32  00BE               	movwf	?_scale
  2951  0E33  0008               	return
  2952  0E34                     l3126:	
  2953                           
  2954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  2955  0E34  0850               	movf	scale@scl,w
  2956  0E35  00C2               	movwf	??_scale
  2957  0E36  3001               	movlw	1
  2958  0E37                     u5305:	
  2959  0E37  1003               	clrc
  2960  0E38  0DC2               	rlf	??_scale,f
  2961  0E39  3EFF               	addlw	-1
  2962  0E3A  1D03               	skipz
  2963  0E3B  2E37               	goto	u5305
  2964  0E3C  1003               	clrc
  2965  0E3D  0D42               	rlf	??_scale,w
  2966  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2967  0E3F  0084               	movwf	4
  2968  0E40  120A  158A  200A  120A  158A  	fcall	stringdir
  2969  0E45  00C3               	movwf	??_scale+1
  2970  0E46  120A  158A  200A  120A  158A  	fcall	stringdir
  2971  0E4B  00C4               	movwf	??_scale+2
  2972  0E4C  120A  158A  200A  120A  158A  	fcall	stringdir
  2973  0E51  00C5               	movwf	??_scale+3
  2974  0E52  120A  158A  200A   	fcall	stringdir
  2975  0E55  00C6               	movwf	??_scale+4
  2976  0E56  0846               	movf	??_scale+4,w
  2977  0E57  00C1               	movwf	?_scale+3
  2978  0E58  0845               	movf	??_scale+3,w
  2979  0E59  00C0               	movwf	?_scale+2
  2980  0E5A  0844               	movf	??_scale+2,w
  2981  0E5B  00BF               	movwf	?_scale+1
  2982  0E5C  0843               	movf	??_scale+1,w
  2983  0E5D  00BE               	movwf	?_scale
  2984  0E5E  0008               	return
  2985  0E5F                     l3130:	
  2986                           
  2987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  2988  0E5F  0850               	movf	scale@scl,w
  2989  0E60  3A80               	xorlw	128
  2990  0E61  3E12               	addlw	-238
  2991  0E62  1C03               	skipc
  2992  0E63  2F4A               	goto	l3138
  2993                           
  2994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  2995  0E64  300A               	movlw	10
  2996  0E65  00F7               	movwf	___awdiv@divisor
  2997  0E66  3000               	movlw	0
  2998  0E67  00F8               	movwf	___awdiv@divisor+1
  2999  0E68  0850               	movf	scale@scl,w
  3000  0E69  00F2               	movwf	___awmod@dividend
  3001  0E6A  01F3               	clrf	___awmod@dividend+1
  3002  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3003  0E6C  03F3               	decf	___awmod@dividend+1,f
  3004  0E6D  3064               	movlw	100
  3005  0E6E  00F0               	movwf	___awmod@divisor
  3006  0E6F  3000               	movlw	0
  3007  0E70  00F1               	movwf	___awmod@divisor+1
  3008  0E71  160A  158A  25B0  120A  158A  	fcall	___awmod
  3009  0E76  0871               	movf	?___awmod+1,w
  3010  0E77  00FA               	movwf	___awdiv@dividend+1
  3011  0E78  0870               	movf	?___awmod,w
  3012  0E79  00F9               	movwf	___awdiv@dividend
  3013  0E7A  160A  158A  2647  120A  158A  	fcall	___awdiv
  3014  0E7F  0877               	movf	?___awdiv,w
  3015  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0E82  00C2               	movwf	??_scale
  3018  0E83  3001               	movlw	1
  3019  0E84                     u5325:	
  3020  0E84  1003               	clrc
  3021  0E85  0DC2               	rlf	??_scale,f
  3022  0E86  3EFF               	addlw	-1
  3023  0E87  1D03               	skipz
  3024  0E88  2E84               	goto	u5325
  3025  0E89  1003               	clrc
  3026  0E8A  0D42               	rlf	??_scale,w
  3027  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3028  0E8C  0084               	movwf	4
  3029  0E8D  120A  158A  200A  120A  158A  	fcall	stringdir
  3030  0E92  00C3               	movwf	??_scale+1
  3031  0E93  120A  158A  200A  120A  158A  	fcall	stringdir
  3032  0E98  00C4               	movwf	??_scale+2
  3033  0E99  120A  158A  200A  120A  158A  	fcall	stringdir
  3034  0E9E  00C5               	movwf	??_scale+3
  3035  0E9F  120A  158A  200A  120A  158A  	fcall	stringdir
  3036  0EA4  00C6               	movwf	??_scale+4
  3037  0EA5  0846               	movf	??_scale+4,w
  3038  0EA6  00A7               	movwf	___flmul@b+3
  3039  0EA7  0845               	movf	??_scale+3,w
  3040  0EA8  00A6               	movwf	___flmul@b+2
  3041  0EA9  0844               	movf	??_scale+2,w
  3042  0EAA  00A5               	movwf	___flmul@b+1
  3043  0EAB  0843               	movf	??_scale+1,w
  3044  0EAC  00A4               	movwf	___flmul@b
  3045  0EAD  3064               	movlw	100
  3046  0EAE  00F7               	movwf	___awdiv@divisor
  3047  0EAF  3000               	movlw	0
  3048  0EB0  00F8               	movwf	___awdiv@divisor+1
  3049  0EB1  0850               	movf	scale@scl,w
  3050  0EB2  00F9               	movwf	___awdiv@dividend
  3051  0EB3  01FA               	clrf	___awdiv@dividend+1
  3052  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3053  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3054  0EB6  160A  158A  2647  120A  158A  	fcall	___awdiv
  3055  0EBB  0877               	movf	?___awdiv,w
  3056  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0EBE  00C7               	movwf	??_scale+5
  3059  0EBF  3001               	movlw	1
  3060  0EC0                     u5335:	
  3061  0EC0  1003               	clrc
  3062  0EC1  0DC7               	rlf	??_scale+5,f
  3063  0EC2  3EFF               	addlw	-1
  3064  0EC3  1D03               	skipz
  3065  0EC4  2EC0               	goto	u5335
  3066  0EC5  1003               	clrc
  3067  0EC6  0D47               	rlf	??_scale+5,w
  3068  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3069  0EC8  0084               	movwf	4
  3070  0EC9  120A  158A  200A  120A  158A  	fcall	stringdir
  3071  0ECE  00C8               	movwf	??_scale+6
  3072  0ECF  120A  158A  200A  120A  158A  	fcall	stringdir
  3073  0ED4  00C9               	movwf	??_scale+7
  3074  0ED5  120A  158A  200A  120A  158A  	fcall	stringdir
  3075  0EDA  00CA               	movwf	??_scale+8
  3076  0EDB  120A  158A  200A  120A  158A  	fcall	stringdir
  3077  0EE0  00CB               	movwf	??_scale+9
  3078  0EE1  084B               	movf	??_scale+9,w
  3079  0EE2  00AB               	movwf	___flmul@a+3
  3080  0EE3  084A               	movf	??_scale+8,w
  3081  0EE4  00AA               	movwf	___flmul@a+2
  3082  0EE5  0849               	movf	??_scale+7,w
  3083  0EE6  00A9               	movwf	___flmul@a+1
  3084  0EE7  0848               	movf	??_scale+6,w
  3085  0EE8  00A8               	movwf	___flmul@a
  3086  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3087  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3088  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3089  0EF0  0827               	movf	?___flmul+3,w
  3090  0EF1  00CF               	movwf	_scale$766+3
  3091  0EF2  0826               	movf	?___flmul+2,w
  3092  0EF3  00CE               	movwf	_scale$766+2
  3093  0EF4  0825               	movf	?___flmul+1,w
  3094  0EF5  00CD               	movwf	_scale$766+1
  3095  0EF6  0824               	movf	?___flmul,w
  3096  0EF7  00CC               	movwf	_scale$766
  3097                           
  3098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3099  0EF8  300A               	movlw	10
  3100  0EF9  00F0               	movwf	___awmod@divisor
  3101  0EFA  3000               	movlw	0
  3102  0EFB  00F1               	movwf	___awmod@divisor+1
  3103  0EFC  0850               	movf	scale@scl,w
  3104  0EFD  00F2               	movwf	___awmod@dividend
  3105  0EFE  01F3               	clrf	___awmod@dividend+1
  3106  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3107  0F00  03F3               	decf	___awmod@dividend+1,f
  3108  0F01  160A  158A  25B0  120A  158A  	fcall	___awmod
  3109  0F06  0870               	movf	?___awmod,w
  3110  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3111  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3112  0F09  00C2               	movwf	??_scale
  3113  0F0A  3001               	movlw	1
  3114  0F0B                     u5345:	
  3115  0F0B  1003               	clrc
  3116  0F0C  0DC2               	rlf	??_scale,f
  3117  0F0D  3EFF               	addlw	-1
  3118  0F0E  1D03               	skipz
  3119  0F0F  2F0B               	goto	u5345
  3120  0F10  1003               	clrc
  3121  0F11  0D42               	rlf	??_scale,w
  3122  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3123  0F13  0084               	movwf	4
  3124  0F14  120A  158A  200A  120A  158A  	fcall	stringdir
  3125  0F19  00C3               	movwf	??_scale+1
  3126  0F1A  120A  158A  200A  120A  158A  	fcall	stringdir
  3127  0F1F  00C4               	movwf	??_scale+2
  3128  0F20  120A  158A  200A  120A  158A  	fcall	stringdir
  3129  0F25  00C5               	movwf	??_scale+3
  3130  0F26  120A  158A  200A  120A  158A  	fcall	stringdir
  3131  0F2B  00C6               	movwf	??_scale+4
  3132  0F2C  0846               	movf	??_scale+4,w
  3133  0F2D  00A7               	movwf	___flmul@b+3
  3134  0F2E  0845               	movf	??_scale+3,w
  3135  0F2F  00A6               	movwf	___flmul@b+2
  3136  0F30  0844               	movf	??_scale+2,w
  3137  0F31  00A5               	movwf	___flmul@b+1
  3138  0F32  0843               	movf	??_scale+1,w
  3139  0F33  00A4               	movwf	___flmul@b
  3140  0F34  084F               	movf	_scale$766+3,w
  3141  0F35  00AB               	movwf	___flmul@a+3
  3142  0F36  084E               	movf	_scale$766+2,w
  3143  0F37  00AA               	movwf	___flmul@a+2
  3144  0F38  084D               	movf	_scale$766+1,w
  3145  0F39  00A9               	movwf	___flmul@a+1
  3146  0F3A  084C               	movf	_scale$766,w
  3147  0F3B  00A8               	movwf	___flmul@a
  3148  0F3C  120A  158A  21A2   	fcall	___flmul
  3149  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0F41  0827               	movf	?___flmul+3,w
  3152  0F42  00C1               	movwf	?_scale+3
  3153  0F43  0826               	movf	?___flmul+2,w
  3154  0F44  00C0               	movwf	?_scale+2
  3155  0F45  0825               	movf	?___flmul+1,w
  3156  0F46  00BF               	movwf	?_scale+1
  3157  0F47  0824               	movf	?___flmul,w
  3158  0F48  00BE               	movwf	?_scale
  3159  0F49  0008               	return
  3160  0F4A                     l3138:	
  3161  0F4A  0850               	movf	scale@scl,w
  3162  0F4B  3A80               	xorlw	128
  3163  0F4C  3E75               	addlw	-139
  3164  0F4D  1C03               	skipc
  3165  0F4E  2FD5               	goto	l3144
  3166                           
  3167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3168  0F4F  300A               	movlw	10
  3169  0F50  00F0               	movwf	___awmod@divisor
  3170  0F51  3000               	movlw	0
  3171  0F52  00F1               	movwf	___awmod@divisor+1
  3172  0F53  0850               	movf	scale@scl,w
  3173  0F54  00F2               	movwf	___awmod@dividend
  3174  0F55  01F3               	clrf	___awmod@dividend+1
  3175  0F56  1BF2               	btfsc	___awmod@dividend,7
  3176  0F57  03F3               	decf	___awmod@dividend+1,f
  3177  0F58  160A  158A  25B0  120A  158A  	fcall	___awmod
  3178  0F5D  0870               	movf	?___awmod,w
  3179  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0F60  00C2               	movwf	??_scale
  3182  0F61  3001               	movlw	1
  3183  0F62                     u5365:	
  3184  0F62  1003               	clrc
  3185  0F63  0DC2               	rlf	??_scale,f
  3186  0F64  3EFF               	addlw	-1
  3187  0F65  1D03               	skipz
  3188  0F66  2F62               	goto	u5365
  3189  0F67  1003               	clrc
  3190  0F68  0D42               	rlf	??_scale,w
  3191  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3192  0F6A  0084               	movwf	4
  3193  0F6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3194  0F70  00C3               	movwf	??_scale+1
  3195  0F71  120A  158A  200A  120A  158A  	fcall	stringdir
  3196  0F76  00C4               	movwf	??_scale+2
  3197  0F77  120A  158A  200A  120A  158A  	fcall	stringdir
  3198  0F7C  00C5               	movwf	??_scale+3
  3199  0F7D  120A  158A  200A  120A  158A  	fcall	stringdir
  3200  0F82  00C6               	movwf	??_scale+4
  3201  0F83  0846               	movf	??_scale+4,w
  3202  0F84  00A7               	movwf	___flmul@b+3
  3203  0F85  0845               	movf	??_scale+3,w
  3204  0F86  00A6               	movwf	___flmul@b+2
  3205  0F87  0844               	movf	??_scale+2,w
  3206  0F88  00A5               	movwf	___flmul@b+1
  3207  0F89  0843               	movf	??_scale+1,w
  3208  0F8A  00A4               	movwf	___flmul@b
  3209  0F8B  300A               	movlw	10
  3210  0F8C  00F7               	movwf	___awdiv@divisor
  3211  0F8D  3000               	movlw	0
  3212  0F8E  00F8               	movwf	___awdiv@divisor+1
  3213  0F8F  0850               	movf	scale@scl,w
  3214  0F90  00F9               	movwf	___awdiv@dividend
  3215  0F91  01FA               	clrf	___awdiv@dividend+1
  3216  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3217  0F93  03FA               	decf	___awdiv@dividend+1,f
  3218  0F94  160A  158A  2647  120A  158A  	fcall	___awdiv
  3219  0F99  0877               	movf	?___awdiv,w
  3220  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3221  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3222  0F9C  00C7               	movwf	??_scale+5
  3223  0F9D  3001               	movlw	1
  3224  0F9E                     u5375:	
  3225  0F9E  1003               	clrc
  3226  0F9F  0DC7               	rlf	??_scale+5,f
  3227  0FA0  3EFF               	addlw	-1
  3228  0FA1  1D03               	skipz
  3229  0FA2  2F9E               	goto	u5375
  3230  0FA3  1003               	clrc
  3231  0FA4  0D47               	rlf	??_scale+5,w
  3232  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3233  0FA6  0084               	movwf	4
  3234  0FA7  120A  158A  200A  120A  158A  	fcall	stringdir
  3235  0FAC  00C8               	movwf	??_scale+6
  3236  0FAD  120A  158A  200A  120A  158A  	fcall	stringdir
  3237  0FB2  00C9               	movwf	??_scale+7
  3238  0FB3  120A  158A  200A  120A  158A  	fcall	stringdir
  3239  0FB8  00CA               	movwf	??_scale+8
  3240  0FB9  120A  158A  200A  120A  158A  	fcall	stringdir
  3241  0FBE  00CB               	movwf	??_scale+9
  3242  0FBF  084B               	movf	??_scale+9,w
  3243  0FC0  00AB               	movwf	___flmul@a+3
  3244  0FC1  084A               	movf	??_scale+8,w
  3245  0FC2  00AA               	movwf	___flmul@a+2
  3246  0FC3  0849               	movf	??_scale+7,w
  3247  0FC4  00A9               	movwf	___flmul@a+1
  3248  0FC5  0848               	movf	??_scale+6,w
  3249  0FC6  00A8               	movwf	___flmul@a
  3250  0FC7  120A  158A  21A2   	fcall	___flmul
  3251  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0FCC  0827               	movf	?___flmul+3,w
  3254  0FCD  00C1               	movwf	?_scale+3
  3255  0FCE  0826               	movf	?___flmul+2,w
  3256  0FCF  00C0               	movwf	?_scale+2
  3257  0FD0  0825               	movf	?___flmul+1,w
  3258  0FD1  00BF               	movwf	?_scale+1
  3259  0FD2  0824               	movf	?___flmul,w
  3260  0FD3  00BE               	movwf	?_scale
  3261  0FD4  0008               	return
  3262  0FD5                     l3144:	
  3263                           
  3264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3265  0FD5  0850               	movf	scale@scl,w
  3266  0FD6  00C2               	movwf	??_scale
  3267  0FD7  3001               	movlw	1
  3268  0FD8                     u5385:	
  3269  0FD8  1003               	clrc
  3270  0FD9  0DC2               	rlf	??_scale,f
  3271  0FDA  3EFF               	addlw	-1
  3272  0FDB  1D03               	skipz
  3273  0FDC  2FD8               	goto	u5385
  3274  0FDD  1003               	clrc
  3275  0FDE  0D42               	rlf	??_scale,w
  3276  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3277  0FE0  0084               	movwf	4
  3278  0FE1  120A  158A  200A  120A  158A  	fcall	stringdir
  3279  0FE6  00C3               	movwf	??_scale+1
  3280  0FE7  120A  158A  200A  120A  158A  	fcall	stringdir
  3281  0FEC  00C4               	movwf	??_scale+2
  3282  0FED  120A  158A  200A  120A  158A  	fcall	stringdir
  3283  0FF2  00C5               	movwf	??_scale+3
  3284  0FF3  120A  158A  200A   	fcall	stringdir
  3285  0FF6  00C6               	movwf	??_scale+4
  3286  0FF7  0846               	movf	??_scale+4,w
  3287  0FF8  00C1               	movwf	?_scale+3
  3288  0FF9  0845               	movf	??_scale+3,w
  3289  0FFA  00C0               	movwf	?_scale+2
  3290  0FFB  0844               	movf	??_scale+2,w
  3291  0FFC  00BF               	movwf	?_scale+1
  3292  0FFD  0843               	movf	??_scale+1,w
  3293  0FFE  00BE               	movwf	?_scale
  3294  0FFF  0008               	return
  3295  1000                     __end_of_scale:	
  3296                           
  3297                           	psect	text3
  3298  1DB0                     __ptext3:	
  3299 ;; *************** function ___awmod *****************
  3300 ;; Defined at:
  3301 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  divisor         2    0[COMMON] int 
  3304 ;;  dividend        2    2[COMMON] int 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  sign            1    6[COMMON] unsigned char 
  3307 ;;  counter         1    5[COMMON] unsigned char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  2    0[COMMON] int 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         4       0       0       0       0
  3318 ;;      Locals:         2       0       0       0       0
  3319 ;;      Temps:          1       0       0       0       0
  3320 ;;      Totals:         7       0       0       0       0
  3321 ;;Total ram usage:        7 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_scale
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function ___awmod
  3332  1DB0                     ___awmod:	
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3336  1DB0  01F6               	clrf	___awmod@sign
  3337  1DB1  1FF3               	btfss	___awmod@dividend+1,7
  3338  1DB2  2DBA               	goto	l2426
  3339  1DB3  09F2               	comf	___awmod@dividend,f
  3340  1DB4  09F3               	comf	___awmod@dividend+1,f
  3341  1DB5  0AF2               	incf	___awmod@dividend,f
  3342  1DB6  1903               	skipnz
  3343  1DB7  0AF3               	incf	___awmod@dividend+1,f
  3344  1DB8  01F6               	clrf	___awmod@sign
  3345  1DB9  0AF6               	incf	___awmod@sign,f
  3346  1DBA                     l2426:	
  3347  1DBA  1FF1               	btfss	___awmod@divisor+1,7
  3348  1DBB  2DC1               	goto	l2430
  3349  1DBC  09F0               	comf	___awmod@divisor,f
  3350  1DBD  09F1               	comf	___awmod@divisor+1,f
  3351  1DBE  0AF0               	incf	___awmod@divisor,f
  3352  1DBF  1903               	skipnz
  3353  1DC0  0AF1               	incf	___awmod@divisor+1,f
  3354  1DC1                     l2430:	
  3355  1DC1  0870               	movf	___awmod@divisor,w
  3356  1DC2  0471               	iorwf	___awmod@divisor+1,w
  3357  1DC3  1903               	btfsc	3,2
  3358  1DC4  2DEE               	goto	l2448
  3359  1DC5  01F5               	clrf	___awmod@counter
  3360  1DC6  0AF5               	incf	___awmod@counter,f
  3361  1DC7                     l2438:	
  3362  1DC7  1BF1               	btfsc	___awmod@divisor+1,7
  3363  1DC8  2DD5               	goto	l2440
  3364  1DC9  3001               	movlw	1
  3365  1DCA                     u3525:	
  3366  1DCA  1003               	clrc
  3367  1DCB  0DF0               	rlf	___awmod@divisor,f
  3368  1DCC  0DF1               	rlf	___awmod@divisor+1,f
  3369  1DCD  3EFF               	addlw	-1
  3370  1DCE  1D03               	skipz
  3371  1DCF  2DCA               	goto	u3525
  3372  1DD0  3001               	movlw	1
  3373  1DD1  00F4               	movwf	??___awmod
  3374  1DD2  0874               	movf	??___awmod,w
  3375  1DD3  07F5               	addwf	___awmod@counter,f
  3376  1DD4  2DC7               	goto	l2438
  3377  1DD5                     l2440:	
  3378  1DD5  0871               	movf	___awmod@divisor+1,w
  3379  1DD6  0273               	subwf	___awmod@dividend+1,w
  3380  1DD7  1D03               	skipz
  3381  1DD8  2DDB               	goto	u3545
  3382  1DD9  0870               	movf	___awmod@divisor,w
  3383  1DDA  0272               	subwf	___awmod@dividend,w
  3384  1DDB                     u3545:	
  3385  1DDB  1C03               	skipc
  3386  1DDC  2DE3               	goto	l2444
  3387  1DDD  0870               	movf	___awmod@divisor,w
  3388  1DDE  02F2               	subwf	___awmod@dividend,f
  3389  1DDF  0871               	movf	___awmod@divisor+1,w
  3390  1DE0  1C03               	skipc
  3391  1DE1  03F3               	decf	___awmod@dividend+1,f
  3392  1DE2  02F3               	subwf	___awmod@dividend+1,f
  3393  1DE3                     l2444:	
  3394  1DE3  3001               	movlw	1
  3395  1DE4                     u3555:	
  3396  1DE4  1003               	clrc
  3397  1DE5  0CF1               	rrf	___awmod@divisor+1,f
  3398  1DE6  0CF0               	rrf	___awmod@divisor,f
  3399  1DE7  3EFF               	addlw	-1
  3400  1DE8  1D03               	skipz
  3401  1DE9  2DE4               	goto	u3555
  3402  1DEA  3001               	movlw	1
  3403  1DEB  02F5               	subwf	___awmod@counter,f
  3404  1DEC  1D03               	btfss	3,2
  3405  1DED  2DD5               	goto	l2440
  3406  1DEE                     l2448:	
  3407  1DEE  0876               	movf	___awmod@sign,w
  3408  1DEF  1903               	btfsc	3,2
  3409  1DF0  2DF6               	goto	l2452
  3410  1DF1  09F2               	comf	___awmod@dividend,f
  3411  1DF2  09F3               	comf	___awmod@dividend+1,f
  3412  1DF3  0AF2               	incf	___awmod@dividend,f
  3413  1DF4  1903               	skipnz
  3414  1DF5  0AF3               	incf	___awmod@dividend+1,f
  3415  1DF6                     l2452:	
  3416  1DF6  0873               	movf	___awmod@dividend+1,w
  3417  1DF7  00F1               	movwf	?___awmod+1
  3418  1DF8  0872               	movf	___awmod@dividend,w
  3419  1DF9  00F0               	movwf	?___awmod
  3420  1DFA  0008               	return
  3421  1DFB                     __end_of___awmod:	
  3422                           
  3423                           	psect	text4
  3424  1E47                     __ptext4:	
  3425 ;; *************** function ___awdiv *****************
  3426 ;; Defined at:
  3427 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  divisor         2    7[COMMON] int 
  3430 ;;  dividend        2    9[COMMON] int 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  quotient        2    2[BANK0 ] int 
  3433 ;;  sign            1    1[BANK0 ] unsigned char 
  3434 ;;  counter         1    0[BANK0 ] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  2    7[COMMON] int 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         4       0       0       0       0
  3445 ;;      Locals:         0       4       0       0       0
  3446 ;;      Temps:          1       0       0       0       0
  3447 ;;      Totals:         5       4       0       0       0
  3448 ;;Total ram usage:        9 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_scale
  3454 ;;		_printf
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           
  3459                           ;psect for function ___awdiv
  3460  1E47                     ___awdiv:	
  3461                           
  3462                           ;incstack = 0
  3463                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3464  1E47  1283               	bcf	3,5	;RP0=0, select bank0
  3465  1E48  1303               	bcf	3,6	;RP1=0, select bank0
  3466  1E49  01A1               	clrf	___awdiv@sign
  3467  1E4A  1FF8               	btfss	___awdiv@divisor+1,7
  3468  1E4B  2E53               	goto	l2382
  3469  1E4C  09F7               	comf	___awdiv@divisor,f
  3470  1E4D  09F8               	comf	___awdiv@divisor+1,f
  3471  1E4E  0AF7               	incf	___awdiv@divisor,f
  3472  1E4F  1903               	skipnz
  3473  1E50  0AF8               	incf	___awdiv@divisor+1,f
  3474  1E51  01A1               	clrf	___awdiv@sign
  3475  1E52  0AA1               	incf	___awdiv@sign,f
  3476  1E53                     l2382:	
  3477  1E53  1FFA               	btfss	___awdiv@dividend+1,7
  3478  1E54  2E5E               	goto	l2388
  3479  1E55  09F9               	comf	___awdiv@dividend,f
  3480  1E56  09FA               	comf	___awdiv@dividend+1,f
  3481  1E57  0AF9               	incf	___awdiv@dividend,f
  3482  1E58  1903               	skipnz
  3483  1E59  0AFA               	incf	___awdiv@dividend+1,f
  3484  1E5A  3001               	movlw	1
  3485  1E5B  00FB               	movwf	??___awdiv
  3486  1E5C  087B               	movf	??___awdiv,w
  3487  1E5D  06A1               	xorwf	___awdiv@sign,f
  3488  1E5E                     l2388:	
  3489  1E5E  01A2               	clrf	___awdiv@quotient
  3490  1E5F  01A3               	clrf	___awdiv@quotient+1
  3491  1E60  0877               	movf	___awdiv@divisor,w
  3492  1E61  0478               	iorwf	___awdiv@divisor+1,w
  3493  1E62  1903               	btfsc	3,2
  3494  1E63  2E95               	goto	l2410
  3495  1E64  01A0               	clrf	___awdiv@counter
  3496  1E65  0AA0               	incf	___awdiv@counter,f
  3497  1E66                     l2398:	
  3498  1E66  1BF8               	btfsc	___awdiv@divisor+1,7
  3499  1E67  2E74               	goto	l2400
  3500  1E68  3001               	movlw	1
  3501  1E69                     u3425:	
  3502  1E69  1003               	clrc
  3503  1E6A  0DF7               	rlf	___awdiv@divisor,f
  3504  1E6B  0DF8               	rlf	___awdiv@divisor+1,f
  3505  1E6C  3EFF               	addlw	-1
  3506  1E6D  1D03               	skipz
  3507  1E6E  2E69               	goto	u3425
  3508  1E6F  3001               	movlw	1
  3509  1E70  00FB               	movwf	??___awdiv
  3510  1E71  087B               	movf	??___awdiv,w
  3511  1E72  07A0               	addwf	___awdiv@counter,f
  3512  1E73  2E66               	goto	l2398
  3513  1E74                     l2400:	
  3514  1E74  3001               	movlw	1
  3515  1E75                     u3445:	
  3516  1E75  1003               	clrc
  3517  1E76  0DA2               	rlf	___awdiv@quotient,f
  3518  1E77  0DA3               	rlf	___awdiv@quotient+1,f
  3519  1E78  3EFF               	addlw	-1
  3520  1E79  1D03               	skipz
  3521  1E7A  2E75               	goto	u3445
  3522  1E7B  0878               	movf	___awdiv@divisor+1,w
  3523  1E7C  027A               	subwf	___awdiv@dividend+1,w
  3524  1E7D  1D03               	skipz
  3525  1E7E  2E81               	goto	u3455
  3526  1E7F  0877               	movf	___awdiv@divisor,w
  3527  1E80  0279               	subwf	___awdiv@dividend,w
  3528  1E81                     u3455:	
  3529  1E81  1C03               	skipc
  3530  1E82  2E8A               	goto	l2406
  3531  1E83  0877               	movf	___awdiv@divisor,w
  3532  1E84  02F9               	subwf	___awdiv@dividend,f
  3533  1E85  0878               	movf	___awdiv@divisor+1,w
  3534  1E86  1C03               	skipc
  3535  1E87  03FA               	decf	___awdiv@dividend+1,f
  3536  1E88  02FA               	subwf	___awdiv@dividend+1,f
  3537  1E89  1422               	bsf	___awdiv@quotient,0
  3538  1E8A                     l2406:	
  3539  1E8A  3001               	movlw	1
  3540  1E8B                     u3465:	
  3541  1E8B  1003               	clrc
  3542  1E8C  0CF8               	rrf	___awdiv@divisor+1,f
  3543  1E8D  0CF7               	rrf	___awdiv@divisor,f
  3544  1E8E  3EFF               	addlw	-1
  3545  1E8F  1D03               	skipz
  3546  1E90  2E8B               	goto	u3465
  3547  1E91  3001               	movlw	1
  3548  1E92  02A0               	subwf	___awdiv@counter,f
  3549  1E93  1D03               	btfss	3,2
  3550  1E94  2E74               	goto	l2400
  3551  1E95                     l2410:	
  3552  1E95  0821               	movf	___awdiv@sign,w
  3553  1E96  1903               	btfsc	3,2
  3554  1E97  2E9D               	goto	l2414
  3555  1E98  09A2               	comf	___awdiv@quotient,f
  3556  1E99  09A3               	comf	___awdiv@quotient+1,f
  3557  1E9A  0AA2               	incf	___awdiv@quotient,f
  3558  1E9B  1903               	skipnz
  3559  1E9C  0AA3               	incf	___awdiv@quotient+1,f
  3560  1E9D                     l2414:	
  3561  1E9D  0823               	movf	___awdiv@quotient+1,w
  3562  1E9E  00F8               	movwf	?___awdiv+1
  3563  1E9F  0822               	movf	___awdiv@quotient,w
  3564  1EA0  00F7               	movwf	?___awdiv
  3565  1EA1  0008               	return
  3566  1EA2                     __end_of___awdiv:	
  3567                           
  3568                           	psect	text5
  3569  1357                     __ptext5:	
  3570 ;; *************** function _fround *****************
  3571 ;; Defined at:
  3572 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  prec            1    wreg     unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  prec            1   49[BANK0 ] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  4   30[BANK0 ] unsigned char 
  3579 ;; Registers used:
  3580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3586 ;;      Params:         0       4       0       0       0
  3587 ;;      Locals:         0       9       0       0       0
  3588 ;;      Temps:          0       7       0       0       0
  3589 ;;      Totals:         0      20       0       0       0
  3590 ;;Total ram usage:       20 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    2
  3593 ;; This function calls:
  3594 ;;		___flmul
  3595 ;;		___lwdiv
  3596 ;;		___lwmod
  3597 ;; This function is called by:
  3598 ;;		_printf
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           
  3603                           ;psect for function _fround
  3604  1357                     _fround:	
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3608                           ;fround@prec stored from wreg
  3609  1357  1283               	bcf	3,5	;RP0=0, select bank0
  3610  1358  1303               	bcf	3,6	;RP1=0, select bank0
  3611  1359  00D1               	movwf	fround@prec
  3612                           
  3613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  3614  135A  306E               	movlw	110
  3615  135B  0251               	subwf	fround@prec,w
  3616  135C  1C03               	skipc
  3617  135D  2C69               	goto	l3098
  3618                           
  3619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3620  135E  303F               	movlw	63
  3621  135F  00A7               	movwf	___flmul@b+3
  3622  1360  3000               	movlw	0
  3623  1361  00A6               	movwf	___flmul@b+2
  3624  1362  3000               	movlw	0
  3625  1363  00A5               	movwf	___flmul@b+1
  3626  1364  3000               	movlw	0
  3627  1365  00A4               	movwf	___flmul@b
  3628  1366  3064               	movlw	100
  3629  1367  00F6               	movwf	___lwdiv@divisor
  3630  1368  3000               	movlw	0
  3631  1369  00F7               	movwf	___lwdiv@divisor+1
  3632  136A  0851               	movf	fround@prec,w
  3633  136B  00C2               	movwf	??_fround
  3634  136C  01C3               	clrf	??_fround+1
  3635  136D  0842               	movf	??_fround,w
  3636  136E  00F8               	movwf	___lwdiv@dividend
  3637  136F  0843               	movf	??_fround+1,w
  3638  1370  00F9               	movwf	___lwdiv@dividend+1
  3639  1371  160A  158A  2535  160A  118A  	fcall	___lwdiv
  3640  1376  0876               	movf	?___lwdiv,w
  3641  1377  1283               	bcf	3,5	;RP0=0, select bank0
  3642  1378  1303               	bcf	3,6	;RP1=0, select bank0
  3643  1379  00C4               	movwf	??_fround+2
  3644  137A  3001               	movlw	1
  3645  137B                     u5155:	
  3646  137B  1003               	clrc
  3647  137C  0DC4               	rlf	??_fround+2,f
  3648  137D  3EFF               	addlw	-1
  3649  137E  1D03               	skipz
  3650  137F  2B7B               	goto	u5155
  3651  1380  1003               	clrc
  3652  1381  0D44               	rlf	??_fround+2,w
  3653  1382  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3654  1383  0084               	movwf	4
  3655  1384  120A  158A  200A  160A  118A  	fcall	stringdir
  3656  1389  00C5               	movwf	??_fround+3
  3657  138A  120A  158A  200A  160A  118A  	fcall	stringdir
  3658  138F  00C6               	movwf	??_fround+4
  3659  1390  120A  158A  200A  160A  118A  	fcall	stringdir
  3660  1395  00C7               	movwf	??_fround+5
  3661  1396  120A  158A  200A  160A  118A  	fcall	stringdir
  3662  139B  00C8               	movwf	??_fround+6
  3663  139C  0848               	movf	??_fround+6,w
  3664  139D  00AB               	movwf	___flmul@a+3
  3665  139E  0847               	movf	??_fround+5,w
  3666  139F  00AA               	movwf	___flmul@a+2
  3667  13A0  0846               	movf	??_fround+4,w
  3668  13A1  00A9               	movwf	___flmul@a+1
  3669  13A2  0845               	movf	??_fround+3,w
  3670  13A3  00A8               	movwf	___flmul@a
  3671  13A4  120A  158A  21A2  160A  118A  	fcall	___flmul
  3672  13A9  1283               	bcf	3,5	;RP0=0, select bank0
  3673  13AA  1303               	bcf	3,6	;RP1=0, select bank0
  3674  13AB  0827               	movf	?___flmul+3,w
  3675  13AC  00D0               	movwf	_fround$764+3
  3676  13AD  0826               	movf	?___flmul+2,w
  3677  13AE  00CF               	movwf	_fround$764+2
  3678  13AF  0825               	movf	?___flmul+1,w
  3679  13B0  00CE               	movwf	_fround$764+1
  3680  13B1  0824               	movf	?___flmul,w
  3681  13B2  00CD               	movwf	_fround$764
  3682                           
  3683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3684  13B3  300A               	movlw	10
  3685  13B4  00F6               	movwf	___lwdiv@divisor
  3686  13B5  3000               	movlw	0
  3687  13B6  00F7               	movwf	___lwdiv@divisor+1
  3688  13B7  0851               	movf	fround@prec,w
  3689  13B8  00C2               	movwf	??_fround
  3690  13B9  01C3               	clrf	??_fround+1
  3691  13BA  0842               	movf	??_fround,w
  3692  13BB  00F2               	movwf	___lwmod@dividend
  3693  13BC  0843               	movf	??_fround+1,w
  3694  13BD  00F3               	movwf	___lwmod@dividend+1
  3695  13BE  3064               	movlw	100
  3696  13BF  00F0               	movwf	___lwmod@divisor
  3697  13C0  3000               	movlw	0
  3698  13C1  00F1               	movwf	___lwmod@divisor+1
  3699  13C2  160A  158A  24C8  160A  118A  	fcall	___lwmod
  3700  13C7  0871               	movf	?___lwmod+1,w
  3701  13C8  00F9               	movwf	___lwdiv@dividend+1
  3702  13C9  0870               	movf	?___lwmod,w
  3703  13CA  00F8               	movwf	___lwdiv@dividend
  3704  13CB  160A  158A  2535  160A  118A  	fcall	___lwdiv
  3705  13D0  0876               	movf	?___lwdiv,w
  3706  13D1  1283               	bcf	3,5	;RP0=0, select bank0
  3707  13D2  1303               	bcf	3,6	;RP1=0, select bank0
  3708  13D3  00C4               	movwf	??_fround+2
  3709  13D4  3001               	movlw	1
  3710  13D5                     u5165:	
  3711  13D5  1003               	clrc
  3712  13D6  0DC4               	rlf	??_fround+2,f
  3713  13D7  3EFF               	addlw	-1
  3714  13D8  1D03               	skipz
  3715  13D9  2BD5               	goto	u5165
  3716  13DA  1003               	clrc
  3717  13DB  0D44               	rlf	??_fround+2,w
  3718  13DC  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3719  13DD  0084               	movwf	4
  3720  13DE  120A  158A  200A  160A  118A  	fcall	stringdir
  3721  13E3  00C5               	movwf	??_fround+3
  3722  13E4  120A  158A  200A  160A  118A  	fcall	stringdir
  3723  13E9  00C6               	movwf	??_fround+4
  3724  13EA  120A  158A  200A  160A  118A  	fcall	stringdir
  3725  13EF  00C7               	movwf	??_fround+5
  3726  13F0  120A  158A  200A  160A  118A  	fcall	stringdir
  3727  13F5  00C8               	movwf	??_fround+6
  3728  13F6  0848               	movf	??_fround+6,w
  3729  13F7  00A7               	movwf	___flmul@b+3
  3730  13F8  0847               	movf	??_fround+5,w
  3731  13F9  00A6               	movwf	___flmul@b+2
  3732  13FA  0846               	movf	??_fround+4,w
  3733  13FB  00A5               	movwf	___flmul@b+1
  3734  13FC  0845               	movf	??_fround+3,w
  3735  13FD  00A4               	movwf	___flmul@b
  3736  13FE  0850               	movf	_fround$764+3,w
  3737  13FF  00AB               	movwf	___flmul@a+3
  3738  1400  084F               	movf	_fround$764+2,w
  3739  1401  00AA               	movwf	___flmul@a+2
  3740  1402  084E               	movf	_fround$764+1,w
  3741  1403  00A9               	movwf	___flmul@a+1
  3742  1404  084D               	movf	_fround$764,w
  3743  1405  00A8               	movwf	___flmul@a
  3744  1406  120A  158A  21A2  160A  118A  	fcall	___flmul
  3745  140B  1283               	bcf	3,5	;RP0=0, select bank0
  3746  140C  1303               	bcf	3,6	;RP1=0, select bank0
  3747  140D  0827               	movf	?___flmul+3,w
  3748  140E  00CC               	movwf	_fround$765+3
  3749  140F  0826               	movf	?___flmul+2,w
  3750  1410  00CB               	movwf	_fround$765+2
  3751  1411  0825               	movf	?___flmul+1,w
  3752  1412  00CA               	movwf	_fround$765+1
  3753  1413  0824               	movf	?___flmul,w
  3754  1414  00C9               	movwf	_fround$765
  3755                           
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3757  1415  300A               	movlw	10
  3758  1416  00F0               	movwf	___lwmod@divisor
  3759  1417  3000               	movlw	0
  3760  1418  00F1               	movwf	___lwmod@divisor+1
  3761  1419  0851               	movf	fround@prec,w
  3762  141A  00C2               	movwf	??_fround
  3763  141B  01C3               	clrf	??_fround+1
  3764  141C  0842               	movf	??_fround,w
  3765  141D  00F2               	movwf	___lwmod@dividend
  3766  141E  0843               	movf	??_fround+1,w
  3767  141F  00F3               	movwf	___lwmod@dividend+1
  3768  1420  160A  158A  24C8  160A  118A  	fcall	___lwmod
  3769  1425  0870               	movf	?___lwmod,w
  3770  1426  1283               	bcf	3,5	;RP0=0, select bank0
  3771  1427  1303               	bcf	3,6	;RP1=0, select bank0
  3772  1428  00C4               	movwf	??_fround+2
  3773  1429  3001               	movlw	1
  3774  142A                     u5175:	
  3775  142A  1003               	clrc
  3776  142B  0DC4               	rlf	??_fround+2,f
  3777  142C  3EFF               	addlw	-1
  3778  142D  1D03               	skipz
  3779  142E  2C2A               	goto	u5175
  3780  142F  1003               	clrc
  3781  1430  0D44               	rlf	??_fround+2,w
  3782  1431  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3783  1432  0084               	movwf	4
  3784  1433  120A  158A  200A  160A  118A  	fcall	stringdir
  3785  1438  00C5               	movwf	??_fround+3
  3786  1439  120A  158A  200A  160A  118A  	fcall	stringdir
  3787  143E  00C6               	movwf	??_fround+4
  3788  143F  120A  158A  200A  160A  118A  	fcall	stringdir
  3789  1444  00C7               	movwf	??_fround+5
  3790  1445  120A  158A  200A  160A  118A  	fcall	stringdir
  3791  144A  00C8               	movwf	??_fround+6
  3792  144B  0848               	movf	??_fround+6,w
  3793  144C  00A7               	movwf	___flmul@b+3
  3794  144D  0847               	movf	??_fround+5,w
  3795  144E  00A6               	movwf	___flmul@b+2
  3796  144F  0846               	movf	??_fround+4,w
  3797  1450  00A5               	movwf	___flmul@b+1
  3798  1451  0845               	movf	??_fround+3,w
  3799  1452  00A4               	movwf	___flmul@b
  3800  1453  084C               	movf	_fround$765+3,w
  3801  1454  00AB               	movwf	___flmul@a+3
  3802  1455  084B               	movf	_fround$765+2,w
  3803  1456  00AA               	movwf	___flmul@a+2
  3804  1457  084A               	movf	_fround$765+1,w
  3805  1458  00A9               	movwf	___flmul@a+1
  3806  1459  0849               	movf	_fround$765,w
  3807  145A  00A8               	movwf	___flmul@a
  3808  145B  120A  158A  21A2   	fcall	___flmul
  3809  145E  1283               	bcf	3,5	;RP0=0, select bank0
  3810  145F  1303               	bcf	3,6	;RP1=0, select bank0
  3811  1460  0827               	movf	?___flmul+3,w
  3812  1461  00C1               	movwf	?_fround+3
  3813  1462  0826               	movf	?___flmul+2,w
  3814  1463  00C0               	movwf	?_fround+2
  3815  1464  0825               	movf	?___flmul+1,w
  3816  1465  00BF               	movwf	?_fround+1
  3817  1466  0824               	movf	?___flmul,w
  3818  1467  00BE               	movwf	?_fround
  3819  1468  0008               	return
  3820  1469                     l3098:	
  3821  1469  300B               	movlw	11
  3822  146A  0251               	subwf	fround@prec,w
  3823  146B  1C03               	skipc
  3824  146C  2D16               	goto	l3104
  3825                           
  3826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3827  146D  303F               	movlw	63
  3828  146E  00A7               	movwf	___flmul@b+3
  3829  146F  3000               	movlw	0
  3830  1470  00A6               	movwf	___flmul@b+2
  3831  1471  3000               	movlw	0
  3832  1472  00A5               	movwf	___flmul@b+1
  3833  1473  3000               	movlw	0
  3834  1474  00A4               	movwf	___flmul@b
  3835  1475  300A               	movlw	10
  3836  1476  00F6               	movwf	___lwdiv@divisor
  3837  1477  3000               	movlw	0
  3838  1478  00F7               	movwf	___lwdiv@divisor+1
  3839  1479  0851               	movf	fround@prec,w
  3840  147A  00C2               	movwf	??_fround
  3841  147B  01C3               	clrf	??_fround+1
  3842  147C  0842               	movf	??_fround,w
  3843  147D  00F8               	movwf	___lwdiv@dividend
  3844  147E  0843               	movf	??_fround+1,w
  3845  147F  00F9               	movwf	___lwdiv@dividend+1
  3846  1480  160A  158A  2535  160A  118A  	fcall	___lwdiv
  3847  1485  0876               	movf	?___lwdiv,w
  3848  1486  1283               	bcf	3,5	;RP0=0, select bank0
  3849  1487  1303               	bcf	3,6	;RP1=0, select bank0
  3850  1488  00C4               	movwf	??_fround+2
  3851  1489  3001               	movlw	1
  3852  148A                     u5195:	
  3853  148A  1003               	clrc
  3854  148B  0DC4               	rlf	??_fround+2,f
  3855  148C  3EFF               	addlw	-1
  3856  148D  1D03               	skipz
  3857  148E  2C8A               	goto	u5195
  3858  148F  1003               	clrc
  3859  1490  0D44               	rlf	??_fround+2,w
  3860  1491  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3861  1492  0084               	movwf	4
  3862  1493  120A  158A  200A  160A  118A  	fcall	stringdir
  3863  1498  00C5               	movwf	??_fround+3
  3864  1499  120A  158A  200A  160A  118A  	fcall	stringdir
  3865  149E  00C6               	movwf	??_fround+4
  3866  149F  120A  158A  200A  160A  118A  	fcall	stringdir
  3867  14A4  00C7               	movwf	??_fround+5
  3868  14A5  120A  158A  200A  160A  118A  	fcall	stringdir
  3869  14AA  00C8               	movwf	??_fround+6
  3870  14AB  0848               	movf	??_fround+6,w
  3871  14AC  00AB               	movwf	___flmul@a+3
  3872  14AD  0847               	movf	??_fround+5,w
  3873  14AE  00AA               	movwf	___flmul@a+2
  3874  14AF  0846               	movf	??_fround+4,w
  3875  14B0  00A9               	movwf	___flmul@a+1
  3876  14B1  0845               	movf	??_fround+3,w
  3877  14B2  00A8               	movwf	___flmul@a
  3878  14B3  120A  158A  21A2  160A  118A  	fcall	___flmul
  3879  14B8  1283               	bcf	3,5	;RP0=0, select bank0
  3880  14B9  1303               	bcf	3,6	;RP1=0, select bank0
  3881  14BA  0827               	movf	?___flmul+3,w
  3882  14BB  00D0               	movwf	_fround$764+3
  3883  14BC  0826               	movf	?___flmul+2,w
  3884  14BD  00CF               	movwf	_fround$764+2
  3885  14BE  0825               	movf	?___flmul+1,w
  3886  14BF  00CE               	movwf	_fround$764+1
  3887  14C0  0824               	movf	?___flmul,w
  3888  14C1  00CD               	movwf	_fround$764
  3889                           
  3890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3891  14C2  300A               	movlw	10
  3892  14C3  00F0               	movwf	___lwmod@divisor
  3893  14C4  3000               	movlw	0
  3894  14C5  00F1               	movwf	___lwmod@divisor+1
  3895  14C6  0851               	movf	fround@prec,w
  3896  14C7  00C2               	movwf	??_fround
  3897  14C8  01C3               	clrf	??_fround+1
  3898  14C9  0842               	movf	??_fround,w
  3899  14CA  00F2               	movwf	___lwmod@dividend
  3900  14CB  0843               	movf	??_fround+1,w
  3901  14CC  00F3               	movwf	___lwmod@dividend+1
  3902  14CD  160A  158A  24C8  160A  118A  	fcall	___lwmod
  3903  14D2  0870               	movf	?___lwmod,w
  3904  14D3  1283               	bcf	3,5	;RP0=0, select bank0
  3905  14D4  1303               	bcf	3,6	;RP1=0, select bank0
  3906  14D5  00C4               	movwf	??_fround+2
  3907  14D6  3001               	movlw	1
  3908  14D7                     u5205:	
  3909  14D7  1003               	clrc
  3910  14D8  0DC4               	rlf	??_fround+2,f
  3911  14D9  3EFF               	addlw	-1
  3912  14DA  1D03               	skipz
  3913  14DB  2CD7               	goto	u5205
  3914  14DC  1003               	clrc
  3915  14DD  0D44               	rlf	??_fround+2,w
  3916  14DE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3917  14DF  0084               	movwf	4
  3918  14E0  120A  158A  200A  160A  118A  	fcall	stringdir
  3919  14E5  00C5               	movwf	??_fround+3
  3920  14E6  120A  158A  200A  160A  118A  	fcall	stringdir
  3921  14EB  00C6               	movwf	??_fround+4
  3922  14EC  120A  158A  200A  160A  118A  	fcall	stringdir
  3923  14F1  00C7               	movwf	??_fround+5
  3924  14F2  120A  158A  200A  160A  118A  	fcall	stringdir
  3925  14F7  00C8               	movwf	??_fround+6
  3926  14F8  0848               	movf	??_fround+6,w
  3927  14F9  00A7               	movwf	___flmul@b+3
  3928  14FA  0847               	movf	??_fround+5,w
  3929  14FB  00A6               	movwf	___flmul@b+2
  3930  14FC  0846               	movf	??_fround+4,w
  3931  14FD  00A5               	movwf	___flmul@b+1
  3932  14FE  0845               	movf	??_fround+3,w
  3933  14FF  00A4               	movwf	___flmul@b
  3934  1500  0850               	movf	_fround$764+3,w
  3935  1501  00AB               	movwf	___flmul@a+3
  3936  1502  084F               	movf	_fround$764+2,w
  3937  1503  00AA               	movwf	___flmul@a+2
  3938  1504  084E               	movf	_fround$764+1,w
  3939  1505  00A9               	movwf	___flmul@a+1
  3940  1506  084D               	movf	_fround$764,w
  3941  1507  00A8               	movwf	___flmul@a
  3942  1508  120A  158A  21A2   	fcall	___flmul
  3943  150B  1283               	bcf	3,5	;RP0=0, select bank0
  3944  150C  1303               	bcf	3,6	;RP1=0, select bank0
  3945  150D  0827               	movf	?___flmul+3,w
  3946  150E  00C1               	movwf	?_fround+3
  3947  150F  0826               	movf	?___flmul+2,w
  3948  1510  00C0               	movwf	?_fround+2
  3949  1511  0825               	movf	?___flmul+1,w
  3950  1512  00BF               	movwf	?_fround+1
  3951  1513  0824               	movf	?___flmul,w
  3952  1514  00BE               	movwf	?_fround
  3953  1515  0008               	return
  3954  1516                     l3104:	
  3955                           
  3956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  3957  1516  303F               	movlw	63
  3958  1517  00A7               	movwf	___flmul@b+3
  3959  1518  3000               	movlw	0
  3960  1519  00A6               	movwf	___flmul@b+2
  3961  151A  3000               	movlw	0
  3962  151B  00A5               	movwf	___flmul@b+1
  3963  151C  3000               	movlw	0
  3964  151D  00A4               	movwf	___flmul@b
  3965  151E  0851               	movf	fround@prec,w
  3966  151F  00C2               	movwf	??_fround
  3967  1520  3001               	movlw	1
  3968  1521                     u5215:	
  3969  1521  1003               	clrc
  3970  1522  0DC2               	rlf	??_fround,f
  3971  1523  3EFF               	addlw	-1
  3972  1524  1D03               	skipz
  3973  1525  2D21               	goto	u5215
  3974  1526  1003               	clrc
  3975  1527  0D42               	rlf	??_fround,w
  3976  1528  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3977  1529  0084               	movwf	4
  3978  152A  120A  158A  200A  160A  118A  	fcall	stringdir
  3979  152F  00C3               	movwf	??_fround+1
  3980  1530  120A  158A  200A  160A  118A  	fcall	stringdir
  3981  1535  00C4               	movwf	??_fround+2
  3982  1536  120A  158A  200A  160A  118A  	fcall	stringdir
  3983  153B  00C5               	movwf	??_fround+3
  3984  153C  120A  158A  200A  160A  118A  	fcall	stringdir
  3985  1541  00C6               	movwf	??_fround+4
  3986  1542  0846               	movf	??_fround+4,w
  3987  1543  00AB               	movwf	___flmul@a+3
  3988  1544  0845               	movf	??_fround+3,w
  3989  1545  00AA               	movwf	___flmul@a+2
  3990  1546  0844               	movf	??_fround+2,w
  3991  1547  00A9               	movwf	___flmul@a+1
  3992  1548  0843               	movf	??_fround+1,w
  3993  1549  00A8               	movwf	___flmul@a
  3994  154A  120A  158A  21A2   	fcall	___flmul
  3995  154D  1283               	bcf	3,5	;RP0=0, select bank0
  3996  154E  1303               	bcf	3,6	;RP1=0, select bank0
  3997  154F  0827               	movf	?___flmul+3,w
  3998  1550  00C1               	movwf	?_fround+3
  3999  1551  0826               	movf	?___flmul+2,w
  4000  1552  00C0               	movwf	?_fround+2
  4001  1553  0825               	movf	?___flmul+1,w
  4002  1554  00BF               	movwf	?_fround+1
  4003  1555  0824               	movf	?___flmul,w
  4004  1556  00BE               	movwf	?_fround
  4005  1557  0008               	return
  4006  1558                     __end_of_fround:	
  4007                           
  4008                           	psect	text6
  4009  1CC8                     __ptext6:	
  4010 ;; *************** function ___lwmod *****************
  4011 ;; Defined at:
  4012 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  divisor         2    0[COMMON] unsigned int 
  4015 ;;  dividend        2    2[COMMON] unsigned int 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  counter         1    5[COMMON] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  2    0[COMMON] unsigned int 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2, status,0
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4027 ;;      Params:         4       0       0       0       0
  4028 ;;      Locals:         1       0       0       0       0
  4029 ;;      Temps:          1       0       0       0       0
  4030 ;;      Totals:         6       0       0       0       0
  4031 ;;Total ram usage:        6 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_fround
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function ___lwmod
  4042  1CC8                     ___lwmod:	
  4043                           
  4044                           ;incstack = 0
  4045                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4046  1CC8  0870               	movf	___lwmod@divisor,w
  4047  1CC9  0471               	iorwf	___lwmod@divisor+1,w
  4048  1CCA  1903               	btfsc	3,2
  4049  1CCB  2CF5               	goto	l2540
  4050  1CCC  01F5               	clrf	___lwmod@counter
  4051  1CCD  0AF5               	incf	___lwmod@counter,f
  4052  1CCE                     l2530:	
  4053  1CCE  1BF1               	btfsc	___lwmod@divisor+1,7
  4054  1CCF  2CDC               	goto	l2532
  4055  1CD0  3001               	movlw	1
  4056  1CD1                     u3775:	
  4057  1CD1  1003               	clrc
  4058  1CD2  0DF0               	rlf	___lwmod@divisor,f
  4059  1CD3  0DF1               	rlf	___lwmod@divisor+1,f
  4060  1CD4  3EFF               	addlw	-1
  4061  1CD5  1D03               	skipz
  4062  1CD6  2CD1               	goto	u3775
  4063  1CD7  3001               	movlw	1
  4064  1CD8  00F4               	movwf	??___lwmod
  4065  1CD9  0874               	movf	??___lwmod,w
  4066  1CDA  07F5               	addwf	___lwmod@counter,f
  4067  1CDB  2CCE               	goto	l2530
  4068  1CDC                     l2532:	
  4069  1CDC  0871               	movf	___lwmod@divisor+1,w
  4070  1CDD  0273               	subwf	___lwmod@dividend+1,w
  4071  1CDE  1D03               	skipz
  4072  1CDF  2CE2               	goto	u3795
  4073  1CE0  0870               	movf	___lwmod@divisor,w
  4074  1CE1  0272               	subwf	___lwmod@dividend,w
  4075  1CE2                     u3795:	
  4076  1CE2  1C03               	skipc
  4077  1CE3  2CEA               	goto	l2536
  4078  1CE4  0870               	movf	___lwmod@divisor,w
  4079  1CE5  02F2               	subwf	___lwmod@dividend,f
  4080  1CE6  0871               	movf	___lwmod@divisor+1,w
  4081  1CE7  1C03               	skipc
  4082  1CE8  03F3               	decf	___lwmod@dividend+1,f
  4083  1CE9  02F3               	subwf	___lwmod@dividend+1,f
  4084  1CEA                     l2536:	
  4085  1CEA  3001               	movlw	1
  4086  1CEB                     u3805:	
  4087  1CEB  1003               	clrc
  4088  1CEC  0CF1               	rrf	___lwmod@divisor+1,f
  4089  1CED  0CF0               	rrf	___lwmod@divisor,f
  4090  1CEE  3EFF               	addlw	-1
  4091  1CEF  1D03               	skipz
  4092  1CF0  2CEB               	goto	u3805
  4093  1CF1  3001               	movlw	1
  4094  1CF2  02F5               	subwf	___lwmod@counter,f
  4095  1CF3  1D03               	btfss	3,2
  4096  1CF4  2CDC               	goto	l2532
  4097  1CF5                     l2540:	
  4098  1CF5  0873               	movf	___lwmod@dividend+1,w
  4099  1CF6  00F1               	movwf	?___lwmod+1
  4100  1CF7  0872               	movf	___lwmod@dividend,w
  4101  1CF8  00F0               	movwf	?___lwmod
  4102  1CF9  0008               	return
  4103  1CFA                     __end_of___lwmod:	
  4104                           
  4105                           	psect	text7
  4106  1D35                     __ptext7:	
  4107 ;; *************** function ___lwdiv *****************
  4108 ;; Defined at:
  4109 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  divisor         2    6[COMMON] unsigned int 
  4112 ;;  dividend        2    8[COMMON] unsigned int 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  quotient        2   11[COMMON] unsigned int 
  4115 ;;  counter         1   13[COMMON] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  2    6[COMMON] unsigned int 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4125 ;;      Params:         4       0       0       0       0
  4126 ;;      Locals:         3       0       0       0       0
  4127 ;;      Temps:          1       0       0       0       0
  4128 ;;      Totals:         8       0       0       0       0
  4129 ;;Total ram usage:        8 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_fround
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           
  4139                           ;psect for function ___lwdiv
  4140  1D35                     ___lwdiv:	
  4141                           
  4142                           ;incstack = 0
  4143                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4144  1D35  01FB               	clrf	___lwdiv@quotient
  4145  1D36  01FC               	clrf	___lwdiv@quotient+1
  4146  1D37  0876               	movf	___lwdiv@divisor,w
  4147  1D38  0477               	iorwf	___lwdiv@divisor+1,w
  4148  1D39  1903               	btfsc	3,2
  4149  1D3A  2D6C               	goto	l2518
  4150  1D3B  01FD               	clrf	___lwdiv@counter
  4151  1D3C  0AFD               	incf	___lwdiv@counter,f
  4152  1D3D                     l2506:	
  4153  1D3D  1BF7               	btfsc	___lwdiv@divisor+1,7
  4154  1D3E  2D4B               	goto	l2508
  4155  1D3F  3001               	movlw	1
  4156  1D40                     u3705:	
  4157  1D40  1003               	clrc
  4158  1D41  0DF6               	rlf	___lwdiv@divisor,f
  4159  1D42  0DF7               	rlf	___lwdiv@divisor+1,f
  4160  1D43  3EFF               	addlw	-1
  4161  1D44  1D03               	skipz
  4162  1D45  2D40               	goto	u3705
  4163  1D46  3001               	movlw	1
  4164  1D47  00FA               	movwf	??___lwdiv
  4165  1D48  087A               	movf	??___lwdiv,w
  4166  1D49  07FD               	addwf	___lwdiv@counter,f
  4167  1D4A  2D3D               	goto	l2506
  4168  1D4B                     l2508:	
  4169  1D4B  3001               	movlw	1
  4170  1D4C                     u3725:	
  4171  1D4C  1003               	clrc
  4172  1D4D  0DFB               	rlf	___lwdiv@quotient,f
  4173  1D4E  0DFC               	rlf	___lwdiv@quotient+1,f
  4174  1D4F  3EFF               	addlw	-1
  4175  1D50  1D03               	skipz
  4176  1D51  2D4C               	goto	u3725
  4177  1D52  0877               	movf	___lwdiv@divisor+1,w
  4178  1D53  0279               	subwf	___lwdiv@dividend+1,w
  4179  1D54  1D03               	skipz
  4180  1D55  2D58               	goto	u3735
  4181  1D56  0876               	movf	___lwdiv@divisor,w
  4182  1D57  0278               	subwf	___lwdiv@dividend,w
  4183  1D58                     u3735:	
  4184  1D58  1C03               	skipc
  4185  1D59  2D61               	goto	l2514
  4186  1D5A  0876               	movf	___lwdiv@divisor,w
  4187  1D5B  02F8               	subwf	___lwdiv@dividend,f
  4188  1D5C  0877               	movf	___lwdiv@divisor+1,w
  4189  1D5D  1C03               	skipc
  4190  1D5E  03F9               	decf	___lwdiv@dividend+1,f
  4191  1D5F  02F9               	subwf	___lwdiv@dividend+1,f
  4192  1D60  147B               	bsf	___lwdiv@quotient,0
  4193  1D61                     l2514:	
  4194  1D61  3001               	movlw	1
  4195  1D62                     u3745:	
  4196  1D62  1003               	clrc
  4197  1D63  0CF7               	rrf	___lwdiv@divisor+1,f
  4198  1D64  0CF6               	rrf	___lwdiv@divisor,f
  4199  1D65  3EFF               	addlw	-1
  4200  1D66  1D03               	skipz
  4201  1D67  2D62               	goto	u3745
  4202  1D68  3001               	movlw	1
  4203  1D69  02FD               	subwf	___lwdiv@counter,f
  4204  1D6A  1D03               	btfss	3,2
  4205  1D6B  2D4B               	goto	l2508
  4206  1D6C                     l2518:	
  4207  1D6C  087C               	movf	___lwdiv@quotient+1,w
  4208  1D6D  00F7               	movwf	?___lwdiv+1
  4209  1D6E  087B               	movf	___lwdiv@quotient,w
  4210  1D6F  00F6               	movwf	?___lwdiv
  4211  1D70  0008               	return
  4212  1D71                     __end_of___lwdiv:	
  4213                           
  4214                           	psect	text8
  4215  1105                     __ptext8:	
  4216 ;; *************** function __tdiv_to_l_ *****************
  4217 ;; Defined at:
  4218 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  f1              4    0[COMMON] float 
  4221 ;;  f2              4    4[COMMON] float 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  quot            4    0[BANK0 ] unsigned long 
  4224 ;;  exp1            1    5[BANK0 ] unsigned char 
  4225 ;;  cntr            1    4[BANK0 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  4    0[COMMON] unsigned long 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4235 ;;      Params:         8       0       0       0       0
  4236 ;;      Locals:         0       6       0       0       0
  4237 ;;      Temps:          4       0       0       0       0
  4238 ;;      Totals:        12       6       0       0       0
  4239 ;;Total ram usage:       18 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_printf
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           
  4249                           ;psect for function __tdiv_to_l_
  4250  1105                     __tdiv_to_l_:	
  4251                           
  4252                           ;incstack = 0
  4253                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4254  1105  0870               	movf	__tdiv_to_l_@f1,w
  4255  1106  00F8               	movwf	??__tdiv_to_l_
  4256  1107  0871               	movf	__tdiv_to_l_@f1+1,w
  4257  1108  00F9               	movwf	??__tdiv_to_l_+1
  4258  1109  0872               	movf	__tdiv_to_l_@f1+2,w
  4259  110A  00FA               	movwf	??__tdiv_to_l_+2
  4260  110B  1003               	clrc
  4261  110C  0D79               	rlf	??__tdiv_to_l_+1,w
  4262  110D  0D7A               	rlf	??__tdiv_to_l_+2,w
  4263  110E  00FB               	movwf	??__tdiv_to_l_+3
  4264  110F  087B               	movf	??__tdiv_to_l_+3,w
  4265  1110  1283               	bcf	3,5	;RP0=0, select bank0
  4266  1111  1303               	bcf	3,6	;RP1=0, select bank0
  4267  1112  00A5               	movwf	__tdiv_to_l_@exp1
  4268  1113  0825               	movf	__tdiv_to_l_@exp1,w
  4269  1114  1D03               	btfss	3,2
  4270  1115  291F               	goto	l3154
  4271  1116                     l3150:	
  4272  1116  3000               	movlw	0
  4273  1117  00F3               	movwf	?__tdiv_to_l_+3
  4274  1118  3000               	movlw	0
  4275  1119  00F2               	movwf	?__tdiv_to_l_+2
  4276  111A  3000               	movlw	0
  4277  111B  00F1               	movwf	?__tdiv_to_l_+1
  4278  111C  3000               	movlw	0
  4279  111D  00F0               	movwf	?__tdiv_to_l_
  4280  111E  0008               	return
  4281  111F                     l3154:	
  4282  111F  0874               	movf	__tdiv_to_l_@f2,w
  4283  1120  00F8               	movwf	??__tdiv_to_l_
  4284  1121  0875               	movf	__tdiv_to_l_@f2+1,w
  4285  1122  00F9               	movwf	??__tdiv_to_l_+1
  4286  1123  0876               	movf	__tdiv_to_l_@f2+2,w
  4287  1124  00FA               	movwf	??__tdiv_to_l_+2
  4288  1125  1003               	clrc
  4289  1126  0D79               	rlf	??__tdiv_to_l_+1,w
  4290  1127  0D7A               	rlf	??__tdiv_to_l_+2,w
  4291  1128  00FB               	movwf	??__tdiv_to_l_+3
  4292  1129  087B               	movf	??__tdiv_to_l_+3,w
  4293  112A  00A4               	movwf	__tdiv_to_l_@cntr
  4294  112B  0824               	movf	__tdiv_to_l_@cntr,w
  4295  112C  1903               	btfsc	3,2
  4296  112D  2916               	goto	l3150
  4297  112E  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4298  112F  30FF               	movlw	255
  4299  1130  05F0               	andwf	__tdiv_to_l_@f1,f
  4300  1131  30FF               	movlw	255
  4301  1132  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4302  1133  3000               	movlw	0
  4303  1134  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4304  1135  17F5               	bsf	__tdiv_to_l_@f2+1,7
  4305  1136  30FF               	movlw	255
  4306  1137  05F4               	andwf	__tdiv_to_l_@f2,f
  4307  1138  30FF               	movlw	255
  4308  1139  05F5               	andwf	__tdiv_to_l_@f2+1,f
  4309  113A  3000               	movlw	0
  4310  113B  05F6               	andwf	__tdiv_to_l_@f2+2,f
  4311  113C  3000               	movlw	0
  4312  113D  00A3               	movwf	__tdiv_to_l_@quot+3
  4313  113E  3000               	movlw	0
  4314  113F  00A2               	movwf	__tdiv_to_l_@quot+2
  4315  1140  3000               	movlw	0
  4316  1141  00A1               	movwf	__tdiv_to_l_@quot+1
  4317  1142  3000               	movlw	0
  4318  1143  00A0               	movwf	__tdiv_to_l_@quot
  4319  1144  307F               	movlw	127
  4320  1145  02A5               	subwf	__tdiv_to_l_@exp1,f
  4321  1146  3098               	movlw	152
  4322  1147  0724               	addwf	__tdiv_to_l_@cntr,w
  4323  1148  00F8               	movwf	??__tdiv_to_l_
  4324  1149  0878               	movf	??__tdiv_to_l_,w
  4325  114A  02A5               	subwf	__tdiv_to_l_@exp1,f
  4326  114B  3018               	movlw	24
  4327  114C  00F8               	movwf	??__tdiv_to_l_
  4328  114D  0878               	movf	??__tdiv_to_l_,w
  4329  114E  00A4               	movwf	__tdiv_to_l_@cntr
  4330  114F                     l3168:	
  4331  114F  3001               	movlw	1
  4332  1150  00F8               	movwf	??__tdiv_to_l_
  4333  1151                     u5415:	
  4334  1151  1003               	clrc
  4335  1152  0DA0               	rlf	__tdiv_to_l_@quot,f
  4336  1153  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4337  1154  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4338  1155  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4339  1156  0BF8               	decfsz	??__tdiv_to_l_,f
  4340  1157  2951               	goto	u5415
  4341  1158  0876               	movf	__tdiv_to_l_@f2+2,w
  4342  1159  0272               	subwf	__tdiv_to_l_@f1+2,w
  4343  115A  1D03               	skipz
  4344  115B  2962               	goto	u5425
  4345  115C  0875               	movf	__tdiv_to_l_@f2+1,w
  4346  115D  0271               	subwf	__tdiv_to_l_@f1+1,w
  4347  115E  1D03               	skipz
  4348  115F  2962               	goto	u5425
  4349  1160  0874               	movf	__tdiv_to_l_@f2,w
  4350  1161  0270               	subwf	__tdiv_to_l_@f1,w
  4351  1162                     u5425:	
  4352  1162  1C03               	skipc
  4353  1163  296F               	goto	l3176
  4354  1164  0874               	movf	__tdiv_to_l_@f2,w
  4355  1165  02F0               	subwf	__tdiv_to_l_@f1,f
  4356  1166  0875               	movf	__tdiv_to_l_@f2+1,w
  4357  1167  1C03               	skipc
  4358  1168  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  4359  1169  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4360  116A  0876               	movf	__tdiv_to_l_@f2+2,w
  4361  116B  1C03               	skipc
  4362  116C  0A76               	incf	__tdiv_to_l_@f2+2,w
  4363  116D  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4364  116E  1420               	bsf	__tdiv_to_l_@quot,0
  4365  116F                     l3176:	
  4366  116F  3001               	movlw	1
  4367  1170                     u5435:	
  4368  1170  1003               	clrc
  4369  1171  0DF0               	rlf	__tdiv_to_l_@f1,f
  4370  1172  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4371  1173  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4372  1174  3EFF               	addlw	-1
  4373  1175  1D03               	skipz
  4374  1176  2970               	goto	u5435
  4375  1177  3001               	movlw	1
  4376  1178  02A4               	subwf	__tdiv_to_l_@cntr,f
  4377  1179  1D03               	btfss	3,2
  4378  117A  294F               	goto	l3168
  4379  117B  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4380  117C  2992               	goto	l3188
  4381  117D  0825               	movf	__tdiv_to_l_@exp1,w
  4382  117E  3A80               	xorlw	128
  4383  117F  3E97               	addlw	151
  4384  1180  1C03               	btfss	3,0
  4385  1181  2916               	goto	l3150
  4386  1182                     l3186:	
  4387  1182  3001               	movlw	1
  4388  1183                     u5475:	
  4389  1183  1003               	clrc
  4390  1184  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4391  1185  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4392  1186  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4393  1187  0CA0               	rrf	__tdiv_to_l_@quot,f
  4394  1188  3EFF               	addlw	-1
  4395  1189  1D03               	skipz
  4396  118A  2983               	goto	u5475
  4397  118B  3001               	movlw	1
  4398  118C  00F8               	movwf	??__tdiv_to_l_
  4399  118D  0878               	movf	??__tdiv_to_l_,w
  4400  118E  07A5               	addwf	__tdiv_to_l_@exp1,f
  4401  118F  1903               	btfsc	3,2
  4402  1190  29A5               	goto	l3196
  4403  1191  2982               	goto	l3186
  4404  1192                     l3188:	
  4405  1192  3018               	movlw	24
  4406  1193  0225               	subwf	__tdiv_to_l_@exp1,w
  4407  1194  1803               	btfsc	3,0
  4408  1195  2916               	goto	l3150
  4409  1196                     l413:	
  4410  1196  0825               	movf	__tdiv_to_l_@exp1,w
  4411  1197  1903               	btfsc	3,2
  4412  1198  29A5               	goto	l3196
  4413  1199  3001               	movlw	1
  4414  119A  00F8               	movwf	??__tdiv_to_l_
  4415  119B                     u5505:	
  4416  119B  1003               	clrc
  4417  119C  0DA0               	rlf	__tdiv_to_l_@quot,f
  4418  119D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4419  119E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4420  119F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4421  11A0  0BF8               	decfsz	??__tdiv_to_l_,f
  4422  11A1  299B               	goto	u5505
  4423  11A2  3001               	movlw	1
  4424  11A3  02A5               	subwf	__tdiv_to_l_@exp1,f
  4425  11A4  2996               	goto	l413
  4426  11A5                     l3196:	
  4427  11A5  0823               	movf	__tdiv_to_l_@quot+3,w
  4428  11A6  00F3               	movwf	?__tdiv_to_l_+3
  4429  11A7  0822               	movf	__tdiv_to_l_@quot+2,w
  4430  11A8  00F2               	movwf	?__tdiv_to_l_+2
  4431  11A9  0821               	movf	__tdiv_to_l_@quot+1,w
  4432  11AA  00F1               	movwf	?__tdiv_to_l_+1
  4433  11AB  0820               	movf	__tdiv_to_l_@quot,w
  4434  11AC  00F0               	movwf	?__tdiv_to_l_
  4435  11AD  0008               	return
  4436  11AE                     __end_of__tdiv_to_l_:	
  4437                           
  4438                           	psect	text9
  4439  08F8                     __ptext9:	
  4440 ;; *************** function __div_to_l_ *****************
  4441 ;; Defined at:
  4442 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  f1              4    0[COMMON] unsigned long 
  4445 ;;  f2              4    4[COMMON] unsigned long 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  quot            4    0[BANK0 ] unsigned long 
  4448 ;;  exp1            1    5[BANK0 ] unsigned char 
  4449 ;;  cntr            1    4[BANK0 ] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  4    0[COMMON] unsigned long 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4459 ;;      Params:         8       0       0       0       0
  4460 ;;      Locals:         0       6       0       0       0
  4461 ;;      Temps:          1       0       0       0       0
  4462 ;;      Totals:         9       6       0       0       0
  4463 ;;Total ram usage:       15 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_printf
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           
  4473                           ;psect for function __div_to_l_
  4474  08F8                     __div_to_l_:	
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4478  08F8  1003               	clrc
  4479  08F9  0D72               	rlf	__div_to_l_@f1+2,w
  4480  08FA  0D73               	rlf	__div_to_l_@f1+3,w
  4481  08FB  00F8               	movwf	??__div_to_l_
  4482  08FC  0878               	movf	??__div_to_l_,w
  4483  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  4484  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  4485  08FF  00A5               	movwf	__div_to_l_@exp1
  4486  0900  0825               	movf	__div_to_l_@exp1,w
  4487  0901  1D03               	btfss	3,2
  4488  0902  290C               	goto	l3206
  4489  0903                     l3202:	
  4490  0903  3000               	movlw	0
  4491  0904  00F3               	movwf	?__div_to_l_+3
  4492  0905  3000               	movlw	0
  4493  0906  00F2               	movwf	?__div_to_l_+2
  4494  0907  3000               	movlw	0
  4495  0908  00F1               	movwf	?__div_to_l_+1
  4496  0909  3000               	movlw	0
  4497  090A  00F0               	movwf	?__div_to_l_
  4498  090B  0008               	return
  4499  090C                     l3206:	
  4500  090C  1003               	clrc
  4501  090D  0D76               	rlf	__div_to_l_@f2+2,w
  4502  090E  0D77               	rlf	__div_to_l_@f2+3,w
  4503  090F  00F8               	movwf	??__div_to_l_
  4504  0910  0878               	movf	??__div_to_l_,w
  4505  0911  00A4               	movwf	__div_to_l_@cntr
  4506  0912  0824               	movf	__div_to_l_@cntr,w
  4507  0913  1903               	btfsc	3,2
  4508  0914  2903               	goto	l3202
  4509  0915  17F2               	bsf	__div_to_l_@f1+2,7
  4510  0916  30FF               	movlw	255
  4511  0917  05F0               	andwf	__div_to_l_@f1,f
  4512  0918  30FF               	movlw	255
  4513  0919  05F1               	andwf	__div_to_l_@f1+1,f
  4514  091A  30FF               	movlw	255
  4515  091B  05F2               	andwf	__div_to_l_@f1+2,f
  4516  091C  3000               	movlw	0
  4517  091D  05F3               	andwf	__div_to_l_@f1+3,f
  4518  091E  17F6               	bsf	__div_to_l_@f2+2,7
  4519  091F  30FF               	movlw	255
  4520  0920  05F4               	andwf	__div_to_l_@f2,f
  4521  0921  30FF               	movlw	255
  4522  0922  05F5               	andwf	__div_to_l_@f2+1,f
  4523  0923  30FF               	movlw	255
  4524  0924  05F6               	andwf	__div_to_l_@f2+2,f
  4525  0925  3000               	movlw	0
  4526  0926  05F7               	andwf	__div_to_l_@f2+3,f
  4527  0927  3000               	movlw	0
  4528  0928  00A3               	movwf	__div_to_l_@quot+3
  4529  0929  3000               	movlw	0
  4530  092A  00A2               	movwf	__div_to_l_@quot+2
  4531  092B  3000               	movlw	0
  4532  092C  00A1               	movwf	__div_to_l_@quot+1
  4533  092D  3000               	movlw	0
  4534  092E  00A0               	movwf	__div_to_l_@quot
  4535  092F  307F               	movlw	127
  4536  0930  02A5               	subwf	__div_to_l_@exp1,f
  4537  0931  30A0               	movlw	160
  4538  0932  0724               	addwf	__div_to_l_@cntr,w
  4539  0933  00F8               	movwf	??__div_to_l_
  4540  0934  0878               	movf	??__div_to_l_,w
  4541  0935  02A5               	subwf	__div_to_l_@exp1,f
  4542  0936  3020               	movlw	32
  4543  0937  00F8               	movwf	??__div_to_l_
  4544  0938  0878               	movf	??__div_to_l_,w
  4545  0939  00A4               	movwf	__div_to_l_@cntr
  4546  093A                     l3220:	
  4547  093A  3001               	movlw	1
  4548  093B  00F8               	movwf	??__div_to_l_
  4549  093C                     u5545:	
  4550  093C  1003               	clrc
  4551  093D  0DA0               	rlf	__div_to_l_@quot,f
  4552  093E  0DA1               	rlf	__div_to_l_@quot+1,f
  4553  093F  0DA2               	rlf	__div_to_l_@quot+2,f
  4554  0940  0DA3               	rlf	__div_to_l_@quot+3,f
  4555  0941  0BF8               	decfsz	??__div_to_l_,f
  4556  0942  293C               	goto	u5545
  4557  0943  0877               	movf	__div_to_l_@f2+3,w
  4558  0944  0273               	subwf	__div_to_l_@f1+3,w
  4559  0945  1D03               	skipz
  4560  0946  2951               	goto	u5555
  4561  0947  0876               	movf	__div_to_l_@f2+2,w
  4562  0948  0272               	subwf	__div_to_l_@f1+2,w
  4563  0949  1D03               	skipz
  4564  094A  2951               	goto	u5555
  4565  094B  0875               	movf	__div_to_l_@f2+1,w
  4566  094C  0271               	subwf	__div_to_l_@f1+1,w
  4567  094D  1D03               	skipz
  4568  094E  2951               	goto	u5555
  4569  094F  0874               	movf	__div_to_l_@f2,w
  4570  0950  0270               	subwf	__div_to_l_@f1,w
  4571  0951                     u5555:	
  4572  0951  1C03               	skipc
  4573  0952  2962               	goto	l3228
  4574  0953  0874               	movf	__div_to_l_@f2,w
  4575  0954  02F0               	subwf	__div_to_l_@f1,f
  4576  0955  0875               	movf	__div_to_l_@f2+1,w
  4577  0956  1C03               	skipc
  4578  0957  0F75               	incfsz	__div_to_l_@f2+1,w
  4579  0958  02F1               	subwf	__div_to_l_@f1+1,f
  4580  0959  0876               	movf	__div_to_l_@f2+2,w
  4581  095A  1C03               	skipc
  4582  095B  0F76               	incfsz	__div_to_l_@f2+2,w
  4583  095C  02F2               	subwf	__div_to_l_@f1+2,f
  4584  095D  0877               	movf	__div_to_l_@f2+3,w
  4585  095E  1C03               	skipc
  4586  095F  0F77               	incfsz	__div_to_l_@f2+3,w
  4587  0960  02F3               	subwf	__div_to_l_@f1+3,f
  4588  0961  1420               	bsf	__div_to_l_@quot,0
  4589  0962                     l3228:	
  4590  0962  3001               	movlw	1
  4591  0963  00F8               	movwf	??__div_to_l_
  4592  0964                     u5565:	
  4593  0964  1003               	clrc
  4594  0965  0DF0               	rlf	__div_to_l_@f1,f
  4595  0966  0DF1               	rlf	__div_to_l_@f1+1,f
  4596  0967  0DF2               	rlf	__div_to_l_@f1+2,f
  4597  0968  0DF3               	rlf	__div_to_l_@f1+3,f
  4598  0969  0BF8               	decfsz	??__div_to_l_,f
  4599  096A  2964               	goto	u5565
  4600  096B  3001               	movlw	1
  4601  096C  02A4               	subwf	__div_to_l_@cntr,f
  4602  096D  1D03               	btfss	3,2
  4603  096E  293A               	goto	l3220
  4604  096F  1FA5               	btfss	__div_to_l_@exp1,7
  4605  0970  2986               	goto	l3240
  4606  0971  0825               	movf	__div_to_l_@exp1,w
  4607  0972  3A80               	xorlw	128
  4608  0973  3E9F               	addlw	159
  4609  0974  1C03               	btfss	3,0
  4610  0975  2903               	goto	l3202
  4611  0976                     l3238:	
  4612  0976  3001               	movlw	1
  4613  0977                     u5605:	
  4614  0977  1003               	clrc
  4615  0978  0CA3               	rrf	__div_to_l_@quot+3,f
  4616  0979  0CA2               	rrf	__div_to_l_@quot+2,f
  4617  097A  0CA1               	rrf	__div_to_l_@quot+1,f
  4618  097B  0CA0               	rrf	__div_to_l_@quot,f
  4619  097C  3EFF               	addlw	-1
  4620  097D  1D03               	skipz
  4621  097E  2977               	goto	u5605
  4622  097F  3001               	movlw	1
  4623  0980  00F8               	movwf	??__div_to_l_
  4624  0981  0878               	movf	??__div_to_l_,w
  4625  0982  07A5               	addwf	__div_to_l_@exp1,f
  4626  0983  1903               	btfsc	3,2
  4627  0984  2999               	goto	l3248
  4628  0985  2976               	goto	l3238
  4629  0986                     l3240:	
  4630  0986  3020               	movlw	32
  4631  0987  0225               	subwf	__div_to_l_@exp1,w
  4632  0988  1803               	btfsc	3,0
  4633  0989  2903               	goto	l3202
  4634  098A                     l366:	
  4635  098A  0825               	movf	__div_to_l_@exp1,w
  4636  098B  1903               	btfsc	3,2
  4637  098C  2999               	goto	l3248
  4638  098D  3001               	movlw	1
  4639  098E  00F8               	movwf	??__div_to_l_
  4640  098F                     u5635:	
  4641  098F  1003               	clrc
  4642  0990  0DA0               	rlf	__div_to_l_@quot,f
  4643  0991  0DA1               	rlf	__div_to_l_@quot+1,f
  4644  0992  0DA2               	rlf	__div_to_l_@quot+2,f
  4645  0993  0DA3               	rlf	__div_to_l_@quot+3,f
  4646  0994  0BF8               	decfsz	??__div_to_l_,f
  4647  0995  298F               	goto	u5635
  4648  0996  3001               	movlw	1
  4649  0997  02A5               	subwf	__div_to_l_@exp1,f
  4650  0998  298A               	goto	l366
  4651  0999                     l3248:	
  4652  0999  0823               	movf	__div_to_l_@quot+3,w
  4653  099A  00F3               	movwf	?__div_to_l_+3
  4654  099B  0822               	movf	__div_to_l_@quot+2,w
  4655  099C  00F2               	movwf	?__div_to_l_+2
  4656  099D  0821               	movf	__div_to_l_@quot+1,w
  4657  099E  00F1               	movwf	?__div_to_l_+1
  4658  099F  0820               	movf	__div_to_l_@quot,w
  4659  09A0  00F0               	movwf	?__div_to_l_
  4660  09A1  0008               	return
  4661  09A2                     __end_of__div_to_l_:	
  4662                           
  4663                           	psect	text10
  4664  1C85                     __ptext10:	
  4665 ;; *************** function ___wmul *****************
  4666 ;; Defined at:
  4667 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  multiplier      2    0[COMMON] unsigned int 
  4670 ;;  multiplicand    2    2[COMMON] unsigned int 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  product         2    4[COMMON] unsigned int 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  2    0[COMMON] unsigned int 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4682 ;;      Params:         4       0       0       0       0
  4683 ;;      Locals:         2       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0
  4685 ;;      Totals:         6       0       0       0       0
  4686 ;;Total ram usage:        6 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_printf
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           
  4696                           ;psect for function ___wmul
  4697  1C85                     ___wmul:	
  4698                           
  4699                           ;incstack = 0
  4700                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4701  1C85  01F4               	clrf	___wmul@product
  4702  1C86  01F5               	clrf	___wmul@product+1
  4703  1C87                     l3254:	
  4704  1C87  1C70               	btfss	___wmul@multiplier,0
  4705  1C88  2C8F               	goto	l185
  4706  1C89  0872               	movf	___wmul@multiplicand,w
  4707  1C8A  07F4               	addwf	___wmul@product,f
  4708  1C8B  1803               	skipnc
  4709  1C8C  0AF5               	incf	___wmul@product+1,f
  4710  1C8D  0873               	movf	___wmul@multiplicand+1,w
  4711  1C8E  07F5               	addwf	___wmul@product+1,f
  4712  1C8F                     l185:	
  4713  1C8F  3001               	movlw	1
  4714  1C90                     u5665:	
  4715  1C90  1003               	clrc
  4716  1C91  0DF2               	rlf	___wmul@multiplicand,f
  4717  1C92  0DF3               	rlf	___wmul@multiplicand+1,f
  4718  1C93  3EFF               	addlw	-1
  4719  1C94  1D03               	skipz
  4720  1C95  2C90               	goto	u5665
  4721  1C96  3001               	movlw	1
  4722  1C97                     u5675:	
  4723  1C97  1003               	clrc
  4724  1C98  0CF1               	rrf	___wmul@multiplier+1,f
  4725  1C99  0CF0               	rrf	___wmul@multiplier,f
  4726  1C9A  3EFF               	addlw	-1
  4727  1C9B  1D03               	skipz
  4728  1C9C  2C97               	goto	u5675
  4729  1C9D  0870               	movf	___wmul@multiplier,w
  4730  1C9E  0471               	iorwf	___wmul@multiplier+1,w
  4731  1C9F  1D03               	btfss	3,2
  4732  1CA0  2C87               	goto	l3254
  4733  1CA1  0875               	movf	___wmul@product+1,w
  4734  1CA2  00F1               	movwf	?___wmul+1
  4735  1CA3  0874               	movf	___wmul@product,w
  4736  1CA4  00F0               	movwf	?___wmul
  4737  1CA5  0008               	return
  4738  1CA6                     __end_of___wmul:	
  4739                           
  4740                           	psect	text11
  4741  1DFB                     __ptext11:	
  4742 ;; *************** function ___llmod *****************
  4743 ;; Defined at:
  4744 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  divisor         4    0[COMMON] unsigned long 
  4747 ;;  dividend        4    4[COMMON] unsigned long 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  counter         1    9[COMMON] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  4    0[COMMON] unsigned long 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4759 ;;      Params:         8       0       0       0       0
  4760 ;;      Locals:         1       0       0       0       0
  4761 ;;      Temps:          1       0       0       0       0
  4762 ;;      Totals:        10       0       0       0       0
  4763 ;;Total ram usage:       10 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_printf
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function ___llmod
  4774  1DFB                     ___llmod:	
  4775                           
  4776                           ;incstack = 0
  4777                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4778  1DFB  0873               	movf	___llmod@divisor+3,w
  4779  1DFC  0472               	iorwf	___llmod@divisor+2,w
  4780  1DFD  0471               	iorwf	___llmod@divisor+1,w
  4781  1DFE  0470               	iorwf	___llmod@divisor,w
  4782  1DFF  1903               	skipnz
  4783  1E00  2E3E               	goto	l3342
  4784  1E01  01F9               	clrf	___llmod@counter
  4785  1E02  0AF9               	incf	___llmod@counter,f
  4786  1E03                     l3332:	
  4787  1E03  1BF3               	btfsc	___llmod@divisor+3,7
  4788  1E04  2E13               	goto	l3334
  4789  1E05  3001               	movlw	1
  4790  1E06  00F8               	movwf	??___llmod
  4791  1E07                     u5875:	
  4792  1E07  1003               	clrc
  4793  1E08  0DF0               	rlf	___llmod@divisor,f
  4794  1E09  0DF1               	rlf	___llmod@divisor+1,f
  4795  1E0A  0DF2               	rlf	___llmod@divisor+2,f
  4796  1E0B  0DF3               	rlf	___llmod@divisor+3,f
  4797  1E0C  0BF8               	decfsz	??___llmod,f
  4798  1E0D  2E07               	goto	u5875
  4799  1E0E  3001               	movlw	1
  4800  1E0F  00F8               	movwf	??___llmod
  4801  1E10  0878               	movf	??___llmod,w
  4802  1E11  07F9               	addwf	___llmod@counter,f
  4803  1E12  2E03               	goto	l3332
  4804  1E13                     l3334:	
  4805  1E13  0873               	movf	___llmod@divisor+3,w
  4806  1E14  0277               	subwf	___llmod@dividend+3,w
  4807  1E15  1D03               	skipz
  4808  1E16  2E21               	goto	u5895
  4809  1E17  0872               	movf	___llmod@divisor+2,w
  4810  1E18  0276               	subwf	___llmod@dividend+2,w
  4811  1E19  1D03               	skipz
  4812  1E1A  2E21               	goto	u5895
  4813  1E1B  0871               	movf	___llmod@divisor+1,w
  4814  1E1C  0275               	subwf	___llmod@dividend+1,w
  4815  1E1D  1D03               	skipz
  4816  1E1E  2E21               	goto	u5895
  4817  1E1F  0870               	movf	___llmod@divisor,w
  4818  1E20  0274               	subwf	___llmod@dividend,w
  4819  1E21                     u5895:	
  4820  1E21  1C03               	skipc
  4821  1E22  2E31               	goto	l3338
  4822  1E23  0870               	movf	___llmod@divisor,w
  4823  1E24  02F4               	subwf	___llmod@dividend,f
  4824  1E25  0871               	movf	___llmod@divisor+1,w
  4825  1E26  1C03               	skipc
  4826  1E27  0F71               	incfsz	___llmod@divisor+1,w
  4827  1E28  02F5               	subwf	___llmod@dividend+1,f
  4828  1E29  0872               	movf	___llmod@divisor+2,w
  4829  1E2A  1C03               	skipc
  4830  1E2B  0F72               	incfsz	___llmod@divisor+2,w
  4831  1E2C  02F6               	subwf	___llmod@dividend+2,f
  4832  1E2D  0873               	movf	___llmod@divisor+3,w
  4833  1E2E  1C03               	skipc
  4834  1E2F  0F73               	incfsz	___llmod@divisor+3,w
  4835  1E30  02F7               	subwf	___llmod@dividend+3,f
  4836  1E31                     l3338:	
  4837  1E31  3001               	movlw	1
  4838  1E32                     u5905:	
  4839  1E32  1003               	clrc
  4840  1E33  0CF3               	rrf	___llmod@divisor+3,f
  4841  1E34  0CF2               	rrf	___llmod@divisor+2,f
  4842  1E35  0CF1               	rrf	___llmod@divisor+1,f
  4843  1E36  0CF0               	rrf	___llmod@divisor,f
  4844  1E37  3EFF               	addlw	-1
  4845  1E38  1D03               	skipz
  4846  1E39  2E32               	goto	u5905
  4847  1E3A  3001               	movlw	1
  4848  1E3B  02F9               	subwf	___llmod@counter,f
  4849  1E3C  1D03               	btfss	3,2
  4850  1E3D  2E13               	goto	l3334
  4851  1E3E                     l3342:	
  4852  1E3E  0877               	movf	___llmod@dividend+3,w
  4853  1E3F  00F3               	movwf	?___llmod+3
  4854  1E40  0876               	movf	___llmod@dividend+2,w
  4855  1E41  00F2               	movwf	?___llmod+2
  4856  1E42  0875               	movf	___llmod@dividend+1,w
  4857  1E43  00F1               	movwf	?___llmod+1
  4858  1E44  0874               	movf	___llmod@dividend,w
  4859  1E45  00F0               	movwf	?___llmod
  4860  1E46  0008               	return
  4861  1E47                     __end_of___llmod:	
  4862                           
  4863                           	psect	text12
  4864  1EA2                     __ptext12:	
  4865 ;; *************** function ___lldiv *****************
  4866 ;; Defined at:
  4867 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  divisor         4    0[COMMON] unsigned long 
  4870 ;;  dividend        4    4[COMMON] unsigned long 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  quotient        4    9[COMMON] unsigned long 
  4873 ;;  counter         1   13[COMMON] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  4    0[COMMON] unsigned long 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4883 ;;      Params:         8       0       0       0       0
  4884 ;;      Locals:         5       0       0       0       0
  4885 ;;      Temps:          1       0       0       0       0
  4886 ;;      Totals:        14       0       0       0       0
  4887 ;;Total ram usage:       14 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_printf
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function ___lldiv
  4898  1EA2                     ___lldiv:	
  4899                           
  4900                           ;incstack = 0
  4901                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4902  1EA2  3000               	movlw	0
  4903  1EA3  00FC               	movwf	___lldiv@quotient+3
  4904  1EA4  3000               	movlw	0
  4905  1EA5  00FB               	movwf	___lldiv@quotient+2
  4906  1EA6  3000               	movlw	0
  4907  1EA7  00FA               	movwf	___lldiv@quotient+1
  4908  1EA8  3000               	movlw	0
  4909  1EA9  00F9               	movwf	___lldiv@quotient
  4910  1EAA  0873               	movf	___lldiv@divisor+3,w
  4911  1EAB  0472               	iorwf	___lldiv@divisor+2,w
  4912  1EAC  0471               	iorwf	___lldiv@divisor+1,w
  4913  1EAD  0470               	iorwf	___lldiv@divisor,w
  4914  1EAE  1903               	skipnz
  4915  1EAF  2EF7               	goto	l3286
  4916  1EB0  01FD               	clrf	___lldiv@counter
  4917  1EB1  0AFD               	incf	___lldiv@counter,f
  4918  1EB2                     l3272:	
  4919  1EB2  1BF3               	btfsc	___lldiv@divisor+3,7
  4920  1EB3  2EC2               	goto	l3274
  4921  1EB4  3001               	movlw	1
  4922  1EB5  00F8               	movwf	??___lldiv
  4923  1EB6                     u5705:	
  4924  1EB6  1003               	clrc
  4925  1EB7  0DF0               	rlf	___lldiv@divisor,f
  4926  1EB8  0DF1               	rlf	___lldiv@divisor+1,f
  4927  1EB9  0DF2               	rlf	___lldiv@divisor+2,f
  4928  1EBA  0DF3               	rlf	___lldiv@divisor+3,f
  4929  1EBB  0BF8               	decfsz	??___lldiv,f
  4930  1EBC  2EB6               	goto	u5705
  4931  1EBD  3001               	movlw	1
  4932  1EBE  00F8               	movwf	??___lldiv
  4933  1EBF  0878               	movf	??___lldiv,w
  4934  1EC0  07FD               	addwf	___lldiv@counter,f
  4935  1EC1  2EB2               	goto	l3272
  4936  1EC2                     l3274:	
  4937  1EC2  3001               	movlw	1
  4938  1EC3  00F8               	movwf	??___lldiv
  4939  1EC4                     u5725:	
  4940  1EC4  1003               	clrc
  4941  1EC5  0DF9               	rlf	___lldiv@quotient,f
  4942  1EC6  0DFA               	rlf	___lldiv@quotient+1,f
  4943  1EC7  0DFB               	rlf	___lldiv@quotient+2,f
  4944  1EC8  0DFC               	rlf	___lldiv@quotient+3,f
  4945  1EC9  0BF8               	decfsz	??___lldiv,f
  4946  1ECA  2EC4               	goto	u5725
  4947  1ECB  0873               	movf	___lldiv@divisor+3,w
  4948  1ECC  0277               	subwf	___lldiv@dividend+3,w
  4949  1ECD  1D03               	skipz
  4950  1ECE  2ED9               	goto	u5735
  4951  1ECF  0872               	movf	___lldiv@divisor+2,w
  4952  1ED0  0276               	subwf	___lldiv@dividend+2,w
  4953  1ED1  1D03               	skipz
  4954  1ED2  2ED9               	goto	u5735
  4955  1ED3  0871               	movf	___lldiv@divisor+1,w
  4956  1ED4  0275               	subwf	___lldiv@dividend+1,w
  4957  1ED5  1D03               	skipz
  4958  1ED6  2ED9               	goto	u5735
  4959  1ED7  0870               	movf	___lldiv@divisor,w
  4960  1ED8  0274               	subwf	___lldiv@dividend,w
  4961  1ED9                     u5735:	
  4962  1ED9  1C03               	skipc
  4963  1EDA  2EEA               	goto	l3282
  4964  1EDB  0870               	movf	___lldiv@divisor,w
  4965  1EDC  02F4               	subwf	___lldiv@dividend,f
  4966  1EDD  0871               	movf	___lldiv@divisor+1,w
  4967  1EDE  1C03               	skipc
  4968  1EDF  0F71               	incfsz	___lldiv@divisor+1,w
  4969  1EE0  02F5               	subwf	___lldiv@dividend+1,f
  4970  1EE1  0872               	movf	___lldiv@divisor+2,w
  4971  1EE2  1C03               	skipc
  4972  1EE3  0F72               	incfsz	___lldiv@divisor+2,w
  4973  1EE4  02F6               	subwf	___lldiv@dividend+2,f
  4974  1EE5  0873               	movf	___lldiv@divisor+3,w
  4975  1EE6  1C03               	skipc
  4976  1EE7  0F73               	incfsz	___lldiv@divisor+3,w
  4977  1EE8  02F7               	subwf	___lldiv@dividend+3,f
  4978  1EE9  1479               	bsf	___lldiv@quotient,0
  4979  1EEA                     l3282:	
  4980  1EEA  3001               	movlw	1
  4981  1EEB                     u5745:	
  4982  1EEB  1003               	clrc
  4983  1EEC  0CF3               	rrf	___lldiv@divisor+3,f
  4984  1EED  0CF2               	rrf	___lldiv@divisor+2,f
  4985  1EEE  0CF1               	rrf	___lldiv@divisor+1,f
  4986  1EEF  0CF0               	rrf	___lldiv@divisor,f
  4987  1EF0  3EFF               	addlw	-1
  4988  1EF1  1D03               	skipz
  4989  1EF2  2EEB               	goto	u5745
  4990  1EF3  3001               	movlw	1
  4991  1EF4  02FD               	subwf	___lldiv@counter,f
  4992  1EF5  1D03               	btfss	3,2
  4993  1EF6  2EC2               	goto	l3274
  4994  1EF7                     l3286:	
  4995  1EF7  087C               	movf	___lldiv@quotient+3,w
  4996  1EF8  00F3               	movwf	?___lldiv+3
  4997  1EF9  087B               	movf	___lldiv@quotient+2,w
  4998  1EFA  00F2               	movwf	?___lldiv+2
  4999  1EFB  087A               	movf	___lldiv@quotient+1,w
  5000  1EFC  00F1               	movwf	?___lldiv+1
  5001  1EFD  0879               	movf	___lldiv@quotient,w
  5002  1EFE  00F0               	movwf	?___lldiv
  5003  1EFF  0008               	return
  5004  1F00                     __end_of___lldiv:	
  5005                           
  5006                           	psect	text13
  5007  1F00                     __ptext13:	
  5008 ;; *************** function ___fltol *****************
  5009 ;; Defined at:
  5010 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  f1              4   49[BANK0 ] unsigned long 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  exp1            1   59[BANK0 ] unsigned char 
  5015 ;;  sign1           1   58[BANK0 ] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  4   49[BANK0 ] long 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5025 ;;      Params:         0       4       0       0       0
  5026 ;;      Locals:         0       2       0       0       0
  5027 ;;      Temps:          0       5       0       0       0
  5028 ;;      Totals:         0      11       0       0       0
  5029 ;;Total ram usage:       11 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_printf
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           
  5039                           ;psect for function ___fltol
  5040  1F00                     ___fltol:	
  5041                           
  5042                           ;incstack = 0
  5043                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5044  1F00  1003               	clrc
  5045  1F01  1283               	bcf	3,5	;RP0=0, select bank0
  5046  1F02  1303               	bcf	3,6	;RP1=0, select bank0
  5047  1F03  0D53               	rlf	___fltol@f1+2,w
  5048  1F04  0D54               	rlf	___fltol@f1+3,w
  5049  1F05  00D5               	movwf	??___fltol
  5050  1F06  0855               	movf	??___fltol,w
  5051  1F07  00DB               	movwf	___fltol@exp1
  5052  1F08  085B               	movf	___fltol@exp1,w
  5053  1F09  1D03               	btfss	3,2
  5054  1F0A  2F14               	goto	l3296
  5055  1F0B                     l3292:	
  5056  1F0B  3000               	movlw	0
  5057  1F0C  00D4               	movwf	?___fltol+3
  5058  1F0D  3000               	movlw	0
  5059  1F0E  00D3               	movwf	?___fltol+2
  5060  1F0F  3000               	movlw	0
  5061  1F10  00D2               	movwf	?___fltol+1
  5062  1F11  3000               	movlw	0
  5063  1F12  00D1               	movwf	?___fltol
  5064  1F13  0008               	return
  5065  1F14                     l3296:	
  5066  1F14  0851               	movf	___fltol@f1,w
  5067  1F15  00D5               	movwf	??___fltol
  5068  1F16  0852               	movf	___fltol@f1+1,w
  5069  1F17  00D6               	movwf	??___fltol+1
  5070  1F18  0853               	movf	___fltol@f1+2,w
  5071  1F19  00D7               	movwf	??___fltol+2
  5072  1F1A  0854               	movf	___fltol@f1+3,w
  5073  1F1B  00D8               	movwf	??___fltol+3
  5074  1F1C  301F               	movlw	31
  5075  1F1D                     u5775:	
  5076  1F1D  1003               	clrc
  5077  1F1E  0CD8               	rrf	??___fltol+3,f
  5078  1F1F  0CD7               	rrf	??___fltol+2,f
  5079  1F20  0CD6               	rrf	??___fltol+1,f
  5080  1F21  0CD5               	rrf	??___fltol,f
  5081  1F22  3EFF               	addlw	-1
  5082  1F23  1D03               	skipz
  5083  1F24  2F1D               	goto	u5775
  5084  1F25  0855               	movf	??___fltol,w
  5085  1F26  00D9               	movwf	??___fltol+4
  5086  1F27  0859               	movf	??___fltol+4,w
  5087  1F28  00DA               	movwf	___fltol@sign1
  5088  1F29  17D3               	bsf	___fltol@f1+2,7
  5089  1F2A  30FF               	movlw	255
  5090  1F2B  05D1               	andwf	___fltol@f1,f
  5091  1F2C  30FF               	movlw	255
  5092  1F2D  05D2               	andwf	___fltol@f1+1,f
  5093  1F2E  30FF               	movlw	255
  5094  1F2F  05D3               	andwf	___fltol@f1+2,f
  5095  1F30  3000               	movlw	0
  5096  1F31  05D4               	andwf	___fltol@f1+3,f
  5097  1F32  3096               	movlw	150
  5098  1F33  02DB               	subwf	___fltol@exp1,f
  5099  1F34  1FDB               	btfss	___fltol@exp1,7
  5100  1F35  2F4B               	goto	l3314
  5101  1F36  085B               	movf	___fltol@exp1,w
  5102  1F37  3A80               	xorlw	128
  5103  1F38  3E97               	addlw	151
  5104  1F39  1C03               	btfss	3,0
  5105  1F3A  2F0B               	goto	l3292
  5106  1F3B                     l3312:	
  5107  1F3B  3001               	movlw	1
  5108  1F3C                     u5805:	
  5109  1F3C  1003               	clrc
  5110  1F3D  0CD4               	rrf	___fltol@f1+3,f
  5111  1F3E  0CD3               	rrf	___fltol@f1+2,f
  5112  1F3F  0CD2               	rrf	___fltol@f1+1,f
  5113  1F40  0CD1               	rrf	___fltol@f1,f
  5114  1F41  3EFF               	addlw	-1
  5115  1F42  1D03               	skipz
  5116  1F43  2F3C               	goto	u5805
  5117  1F44  3001               	movlw	1
  5118  1F45  00D5               	movwf	??___fltol
  5119  1F46  0855               	movf	??___fltol,w
  5120  1F47  07DB               	addwf	___fltol@exp1,f
  5121  1F48  1903               	btfsc	3,2
  5122  1F49  2F5E               	goto	l3322
  5123  1F4A  2F3B               	goto	l3312
  5124  1F4B                     l3314:	
  5125  1F4B  3020               	movlw	32
  5126  1F4C  025B               	subwf	___fltol@exp1,w
  5127  1F4D  1803               	btfsc	3,0
  5128  1F4E  2F0B               	goto	l3292
  5129  1F4F                     l395:	
  5130  1F4F  085B               	movf	___fltol@exp1,w
  5131  1F50  1903               	btfsc	3,2
  5132  1F51  2F5E               	goto	l3322
  5133  1F52  3001               	movlw	1
  5134  1F53  00D5               	movwf	??___fltol
  5135  1F54                     u5835:	
  5136  1F54  1003               	clrc
  5137  1F55  0DD1               	rlf	___fltol@f1,f
  5138  1F56  0DD2               	rlf	___fltol@f1+1,f
  5139  1F57  0DD3               	rlf	___fltol@f1+2,f
  5140  1F58  0DD4               	rlf	___fltol@f1+3,f
  5141  1F59  0BD5               	decfsz	??___fltol,f
  5142  1F5A  2F54               	goto	u5835
  5143  1F5B  3001               	movlw	1
  5144  1F5C  02DB               	subwf	___fltol@exp1,f
  5145  1F5D  2F4F               	goto	l395
  5146  1F5E                     l3322:	
  5147  1F5E  085A               	movf	___fltol@sign1,w
  5148  1F5F  1903               	btfsc	3,2
  5149  1F60  0008               	return
  5150  1F61  09D1               	comf	___fltol@f1,f
  5151  1F62  09D2               	comf	___fltol@f1+1,f
  5152  1F63  09D3               	comf	___fltol@f1+2,f
  5153  1F64  09D4               	comf	___fltol@f1+3,f
  5154  1F65  0AD1               	incf	___fltol@f1,f
  5155  1F66  1903               	skipnz
  5156  1F67  0AD2               	incf	___fltol@f1+1,f
  5157  1F68  1903               	skipnz
  5158  1F69  0AD3               	incf	___fltol@f1+2,f
  5159  1F6A  1903               	skipnz
  5160  1F6B  0AD4               	incf	___fltol@f1+3,f
  5161  1F6C  0008               	return
  5162  1F6D                     __end_of___fltol:	
  5163                           
  5164                           	psect	text14
  5165  1CA6                     __ptext14:	
  5166 ;; *************** function ___flsub *****************
  5167 ;; Defined at:
  5168 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  a               4   70[BANK0 ] long 
  5171 ;;  b               4   74[BANK0 ] long 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  4   70[BANK0 ] long 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5183 ;;      Params:         0       8       0       0       0
  5184 ;;      Locals:         0       0       0       0       0
  5185 ;;      Temps:          0       0       0       0       0
  5186 ;;      Totals:         0       8       0       0       0
  5187 ;;Total ram usage:        8 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    1
  5190 ;; This function calls:
  5191 ;;		___fladd
  5192 ;; This function is called by:
  5193 ;;		_printf
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           
  5198                           ;psect for function ___flsub
  5199  1CA6                     ___flsub:	
  5200                           
  5201                           ;incstack = 0
  5202                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5203  1CA6  3080               	movlw	128
  5204  1CA7  1283               	bcf	3,5	;RP0=0, select bank0
  5205  1CA8  1303               	bcf	3,6	;RP1=0, select bank0
  5206  1CA9  06E9               	xorwf	___flsub@a+3,f
  5207  1CAA  086D               	movf	___flsub@b+3,w
  5208  1CAB  00D5               	movwf	___fladd@b+3
  5209  1CAC  086C               	movf	___flsub@b+2,w
  5210  1CAD  00D4               	movwf	___fladd@b+2
  5211  1CAE  086B               	movf	___flsub@b+1,w
  5212  1CAF  00D3               	movwf	___fladd@b+1
  5213  1CB0  086A               	movf	___flsub@b,w
  5214  1CB1  00D2               	movwf	___fladd@b
  5215  1CB2  0869               	movf	___flsub@a+3,w
  5216  1CB3  00D9               	movwf	___fladd@a+3
  5217  1CB4  0868               	movf	___flsub@a+2,w
  5218  1CB5  00D8               	movwf	___fladd@a+2
  5219  1CB6  0867               	movf	___flsub@a+1,w
  5220  1CB7  00D7               	movwf	___fladd@a+1
  5221  1CB8  0866               	movf	___flsub@a,w
  5222  1CB9  00D6               	movwf	___fladd@a
  5223  1CBA  120A  118A  2032   	fcall	___fladd
  5224  1CBD  1283               	bcf	3,5	;RP0=0, select bank0
  5225  1CBE  1303               	bcf	3,6	;RP1=0, select bank0
  5226  1CBF  0855               	movf	?___fladd+3,w
  5227  1CC0  00E9               	movwf	?___flsub+3
  5228  1CC1  0854               	movf	?___fladd+2,w
  5229  1CC2  00E8               	movwf	?___flsub+2
  5230  1CC3  0853               	movf	?___fladd+1,w
  5231  1CC4  00E7               	movwf	?___flsub+1
  5232  1CC5  0852               	movf	?___fladd,w
  5233  1CC6  00E6               	movwf	?___flsub
  5234  1CC7  0008               	return
  5235  1CC8                     __end_of___flsub:	
  5236                           
  5237                           	psect	text15
  5238  0032                     __ptext15:	
  5239 ;; *************** function ___fladd *****************
  5240 ;; Defined at:
  5241 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  b               4   50[BANK0 ] long 
  5244 ;;  a               4   54[BANK0 ] long 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  grs             1   69[BANK0 ] unsigned char 
  5247 ;;  bexp            1   68[BANK0 ] unsigned char 
  5248 ;;  aexp            1   67[BANK0 ] unsigned char 
  5249 ;;  signs           1   66[BANK0 ] unsigned char 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  4   50[BANK0 ] unsigned char 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0, btemp+1
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5259 ;;      Params:         0       8       0       0       0
  5260 ;;      Locals:         0       4       0       0       0
  5261 ;;      Temps:          0       8       0       0       0
  5262 ;;      Totals:         0      20       0       0       0
  5263 ;;Total ram usage:       20 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_printf
  5269 ;;		___flsub
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           
  5274                           ;psect for function ___fladd
  5275  0032                     ___fladd:	
  5276                           
  5277                           ;incstack = 0
  5278                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5279  0032  1283               	bcf	3,5	;RP0=0, select bank0
  5280  0033  1303               	bcf	3,6	;RP1=0, select bank0
  5281  0034  0855               	movf	___fladd@b+3,w
  5282  0035  3980               	andlw	128
  5283  0036  00DA               	movwf	??___fladd
  5284  0037  085A               	movf	??___fladd,w
  5285  0038  00E2               	movwf	___fladd@signs
  5286  0039  0855               	movf	___fladd@b+3,w
  5287  003A  00DA               	movwf	??___fladd
  5288  003B  075A               	addwf	??___fladd,w
  5289  003C  00DB               	movwf	??___fladd+1
  5290  003D  085B               	movf	??___fladd+1,w
  5291  003E  00E4               	movwf	___fladd@bexp
  5292  003F  1BD4               	btfsc	___fladd@b+2,7
  5293  0040  1464               	bsf	___fladd@bexp,0
  5294  0041  0864               	movf	___fladd@bexp,w
  5295  0042  1903               	btfsc	3,2
  5296  0043  2852               	goto	l2562
  5297  0044  0A64               	incf	___fladd@bexp,w
  5298  0045  1D03               	btfss	3,2
  5299  0046  284F               	goto	l2558
  5300  0047  3000               	movlw	0
  5301  0048  00D5               	movwf	___fladd@b+3
  5302  0049  3000               	movlw	0
  5303  004A  00D4               	movwf	___fladd@b+2
  5304  004B  3000               	movlw	0
  5305  004C  00D3               	movwf	___fladd@b+1
  5306  004D  3000               	movlw	0
  5307  004E  00D2               	movwf	___fladd@b
  5308  004F                     l2558:	
  5309  004F  17D4               	bsf	___fladd@b+2,7
  5310  0050  01D5               	clrf	___fladd@b+3
  5311  0051  285A               	goto	l2564
  5312  0052                     l2562:	
  5313  0052  3000               	movlw	0
  5314  0053  00D5               	movwf	___fladd@b+3
  5315  0054  3000               	movlw	0
  5316  0055  00D4               	movwf	___fladd@b+2
  5317  0056  3000               	movlw	0
  5318  0057  00D3               	movwf	___fladd@b+1
  5319  0058  3000               	movlw	0
  5320  0059  00D2               	movwf	___fladd@b
  5321  005A                     l2564:	
  5322  005A  0859               	movf	___fladd@a+3,w
  5323  005B  3980               	andlw	128
  5324  005C  00DA               	movwf	??___fladd
  5325  005D  085A               	movf	??___fladd,w
  5326  005E  00E3               	movwf	___fladd@aexp
  5327  005F  0863               	movf	___fladd@aexp,w
  5328  0060  0662               	xorwf	___fladd@signs,w
  5329  0061  1D03               	btfss	3,2
  5330  0062  1762               	bsf	___fladd@signs,6
  5331  0063  0859               	movf	___fladd@a+3,w
  5332  0064  00DA               	movwf	??___fladd
  5333  0065  075A               	addwf	??___fladd,w
  5334  0066  00DB               	movwf	??___fladd+1
  5335  0067  085B               	movf	??___fladd+1,w
  5336  0068  00E3               	movwf	___fladd@aexp
  5337  0069  1BD8               	btfsc	___fladd@a+2,7
  5338  006A  1463               	bsf	___fladd@aexp,0
  5339  006B  0863               	movf	___fladd@aexp,w
  5340  006C  1903               	btfsc	3,2
  5341  006D  287C               	goto	l2586
  5342  006E  0A63               	incf	___fladd@aexp,w
  5343  006F  1D03               	btfss	3,2
  5344  0070  2879               	goto	l2582
  5345  0071  3000               	movlw	0
  5346  0072  00D9               	movwf	___fladd@a+3
  5347  0073  3000               	movlw	0
  5348  0074  00D8               	movwf	___fladd@a+2
  5349  0075  3000               	movlw	0
  5350  0076  00D7               	movwf	___fladd@a+1
  5351  0077  3000               	movlw	0
  5352  0078  00D6               	movwf	___fladd@a
  5353  0079                     l2582:	
  5354  0079  17D8               	bsf	___fladd@a+2,7
  5355  007A  01D9               	clrf	___fladd@a+3
  5356  007B  2884               	goto	l512
  5357  007C                     l2586:	
  5358  007C  3000               	movlw	0
  5359  007D  00D9               	movwf	___fladd@a+3
  5360  007E  3000               	movlw	0
  5361  007F  00D8               	movwf	___fladd@a+2
  5362  0080  3000               	movlw	0
  5363  0081  00D7               	movwf	___fladd@a+1
  5364  0082  3000               	movlw	0
  5365  0083  00D6               	movwf	___fladd@a
  5366  0084                     l512:	
  5367  0084  0864               	movf	___fladd@bexp,w
  5368  0085  0263               	subwf	___fladd@aexp,w
  5369  0086  1803               	skipnc
  5370  0087  28CA               	goto	l2622
  5371  0088  1F62               	btfss	___fladd@signs,6
  5372  0089  288E               	goto	l2592
  5373  008A  3080               	movlw	128
  5374  008B  00DA               	movwf	??___fladd
  5375  008C  085A               	movf	??___fladd,w
  5376  008D  06E2               	xorwf	___fladd@signs,f
  5377  008E                     l2592:	
  5378  008E  0864               	movf	___fladd@bexp,w
  5379  008F  00DA               	movwf	??___fladd
  5380  0090  085A               	movf	??___fladd,w
  5381  0091  00E5               	movwf	___fladd@grs
  5382  0092  0863               	movf	___fladd@aexp,w
  5383  0093  00DA               	movwf	??___fladd
  5384  0094  085A               	movf	??___fladd,w
  5385  0095  00E4               	movwf	___fladd@bexp
  5386  0096  0865               	movf	___fladd@grs,w
  5387  0097  00DA               	movwf	??___fladd
  5388  0098  085A               	movf	??___fladd,w
  5389  0099  00E3               	movwf	___fladd@aexp
  5390  009A  0852               	movf	___fladd@b,w
  5391  009B  00DA               	movwf	??___fladd
  5392  009C  085A               	movf	??___fladd,w
  5393  009D  00E5               	movwf	___fladd@grs
  5394  009E  0856               	movf	___fladd@a,w
  5395  009F  00DA               	movwf	??___fladd
  5396  00A0  085A               	movf	??___fladd,w
  5397  00A1  00D2               	movwf	___fladd@b
  5398  00A2  0865               	movf	___fladd@grs,w
  5399  00A3  00DA               	movwf	??___fladd
  5400  00A4  085A               	movf	??___fladd,w
  5401  00A5  00D6               	movwf	___fladd@a
  5402  00A6  0853               	movf	___fladd@b+1,w
  5403  00A7  00DA               	movwf	??___fladd
  5404  00A8  085A               	movf	??___fladd,w
  5405  00A9  00E5               	movwf	___fladd@grs
  5406  00AA  0857               	movf	___fladd@a+1,w
  5407  00AB  00DA               	movwf	??___fladd
  5408  00AC  085A               	movf	??___fladd,w
  5409  00AD  00D3               	movwf	___fladd@b+1
  5410  00AE  0865               	movf	___fladd@grs,w
  5411  00AF  00DA               	movwf	??___fladd
  5412  00B0  085A               	movf	??___fladd,w
  5413  00B1  00D7               	movwf	___fladd@a+1
  5414  00B2  0854               	movf	___fladd@b+2,w
  5415  00B3  00DA               	movwf	??___fladd
  5416  00B4  085A               	movf	??___fladd,w
  5417  00B5  00E5               	movwf	___fladd@grs
  5418  00B6  0858               	movf	___fladd@a+2,w
  5419  00B7  00DA               	movwf	??___fladd
  5420  00B8  085A               	movf	??___fladd,w
  5421  00B9  00D4               	movwf	___fladd@b+2
  5422  00BA  0865               	movf	___fladd@grs,w
  5423  00BB  00DA               	movwf	??___fladd
  5424  00BC  085A               	movf	??___fladd,w
  5425  00BD  00D8               	movwf	___fladd@a+2
  5426  00BE  0855               	movf	___fladd@b+3,w
  5427  00BF  00DA               	movwf	??___fladd
  5428  00C0  085A               	movf	??___fladd,w
  5429  00C1  00E5               	movwf	___fladd@grs
  5430  00C2  0859               	movf	___fladd@a+3,w
  5431  00C3  00DA               	movwf	??___fladd
  5432  00C4  085A               	movf	??___fladd,w
  5433  00C5  00D5               	movwf	___fladd@b+3
  5434  00C6  0865               	movf	___fladd@grs,w
  5435  00C7  00DA               	movwf	??___fladd
  5436  00C8  085A               	movf	??___fladd,w
  5437  00C9  00D9               	movwf	___fladd@a+3
  5438  00CA                     l2622:	
  5439  00CA  01E5               	clrf	___fladd@grs
  5440  00CB  0863               	movf	___fladd@aexp,w
  5441  00CC  00DA               	movwf	??___fladd
  5442  00CD  01DB               	clrf	??___fladd+1
  5443  00CE  085B               	movf	??___fladd+1,w
  5444  00CF  00DD               	movwf	??___fladd+3
  5445  00D0  0864               	movf	___fladd@bexp,w
  5446  00D1  025A               	subwf	??___fladd,w
  5447  00D2  00DC               	movwf	??___fladd+2
  5448  00D3  1C03               	skipc
  5449  00D4  03DD               	decf	??___fladd+3,f
  5450  00D5  085D               	movf	??___fladd+3,w
  5451  00D6  3A80               	xorlw	128
  5452  00D7  00FF               	movwf	127
  5453  00D8  3080               	movlw	128
  5454  00D9  027F               	subwf	127,w
  5455  00DA  1D03               	skipz
  5456  00DB  28DE               	goto	u3915
  5457  00DC  301A               	movlw	26
  5458  00DD  025C               	subwf	??___fladd+2,w
  5459  00DE                     u3915:	
  5460  00DE  1C03               	skipc
  5461  00DF  2917               	goto	l2640
  5462  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  5463  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  5464  00E2  0855               	movf	___fladd@b+3,w
  5465  00E3  0454               	iorwf	___fladd@b+2,w
  5466  00E4  0453               	iorwf	___fladd@b+1,w
  5467  00E5  0452               	iorwf	___fladd@b,w
  5468  00E6  1903               	btfsc	3,2
  5469  00E7  28EA               	goto	u3920
  5470  00E8  3001               	movlw	1
  5471  00E9  28EB               	goto	u3930
  5472  00EA                     u3920:	
  5473  00EA  3000               	movlw	0
  5474  00EB                     u3930:	
  5475  00EB  00DA               	movwf	??___fladd
  5476  00EC  085A               	movf	??___fladd,w
  5477  00ED  00E5               	movwf	___fladd@grs
  5478  00EE  3000               	movlw	0
  5479  00EF  00D5               	movwf	___fladd@b+3
  5480  00F0  3000               	movlw	0
  5481  00F1  00D4               	movwf	___fladd@b+2
  5482  00F2  3000               	movlw	0
  5483  00F3  00D3               	movwf	___fladd@b+1
  5484  00F4  3000               	movlw	0
  5485  00F5  00D2               	movwf	___fladd@b
  5486  00F6  0863               	movf	___fladd@aexp,w
  5487  00F7  00DA               	movwf	??___fladd
  5488  00F8  085A               	movf	??___fladd,w
  5489  00F9  00E4               	movwf	___fladd@bexp
  5490  00FA  291D               	goto	l516
  5491  00FB                     l518:	
  5492  00FB  1C65               	btfss	___fladd@grs,0
  5493  00FC  2906               	goto	l2630
  5494  00FD  0865               	movf	___fladd@grs,w
  5495  00FE  00DA               	movwf	??___fladd
  5496  00FF  1003               	clrc
  5497  0100  0C5A               	rrf	??___fladd,w
  5498  0101  3801               	iorlw	1
  5499  0102  00DB               	movwf	??___fladd+1
  5500  0103  085B               	movf	??___fladd+1,w
  5501  0104  00E5               	movwf	___fladd@grs
  5502  0105  2908               	goto	l2632
  5503  0106                     l2630:	
  5504  0106  1003               	clrc
  5505  0107  0CE5               	rrf	___fladd@grs,f
  5506  0108                     l2632:	
  5507  0108  1852               	btfsc	___fladd@b,0
  5508  0109  17E5               	bsf	___fladd@grs,7
  5509  010A  3001               	movlw	1
  5510  010B  00DA               	movwf	??___fladd
  5511  010C                     u3965:	
  5512  010C  0D55               	rlf	___fladd@b+3,w
  5513  010D  0CD5               	rrf	___fladd@b+3,f
  5514  010E  0CD4               	rrf	___fladd@b+2,f
  5515  010F  0CD3               	rrf	___fladd@b+1,f
  5516  0110  0CD2               	rrf	___fladd@b,f
  5517  0111  0BDA               	decfsz	??___fladd& (0+127),f
  5518  0112  290C               	goto	u3965
  5519  0113  3001               	movlw	1
  5520  0114  00DA               	movwf	??___fladd
  5521  0115  085A               	movf	??___fladd,w
  5522  0116  07E4               	addwf	___fladd@bexp,f
  5523  0117                     l2640:	
  5524  0117  1283               	bcf	3,5	;RP0=0, select bank0
  5525  0118  1303               	bcf	3,6	;RP1=0, select bank0
  5526  0119  0863               	movf	___fladd@aexp,w
  5527  011A  0264               	subwf	___fladd@bexp,w
  5528  011B  1C03               	skipc
  5529  011C  28FB               	goto	l518
  5530  011D                     l516:	
  5531  011D  1B62               	btfsc	___fladd@signs,6
  5532  011E  295E               	goto	l2666
  5533  011F  0864               	movf	___fladd@bexp,w
  5534  0120  1D03               	btfss	3,2
  5535  0121  292B               	goto	l2648
  5536  0122  3000               	movlw	0
  5537  0123  00D5               	movwf	?___fladd+3
  5538  0124  3000               	movlw	0
  5539  0125  00D4               	movwf	?___fladd+2
  5540  0126  3000               	movlw	0
  5541  0127  00D3               	movwf	?___fladd+1
  5542  0128  3000               	movlw	0
  5543  0129  00D2               	movwf	?___fladd
  5544  012A  0008               	return
  5545  012B                     l2648:	
  5546  012B  0856               	movf	___fladd@a,w
  5547  012C  07D2               	addwf	___fladd@b,f
  5548  012D  0857               	movf	___fladd@a+1,w
  5549  012E  1103               	clrz
  5550  012F  1803               	skipnc
  5551  0130  3E01               	addlw	1
  5552  0131  1D03               	btfss	3,2
  5553  0132  07D3               	addwf	___fladd@b+1,f
  5554  0133  0858               	movf	___fladd@a+2,w
  5555  0134  1103               	clrz
  5556  0135  1803               	skipnc
  5557  0136  3E01               	addlw	1
  5558  0137  1D03               	btfss	3,2
  5559  0138  07D4               	addwf	___fladd@b+2,f
  5560  0139  0859               	movf	___fladd@a+3,w
  5561  013A  1103               	clrz
  5562  013B  1803               	skipnc
  5563  013C  3E01               	addlw	1
  5564  013D  1D03               	btfss	3,2
  5565  013E  07D5               	addwf	___fladd@b+3,f
  5566  013F  1C55               	btfss	___fladd@b+3,0
  5567  0140  2A00               	goto	l2700
  5568  0141  1C65               	btfss	___fladd@grs,0
  5569  0142  294C               	goto	l2656
  5570  0143  0865               	movf	___fladd@grs,w
  5571  0144  00DA               	movwf	??___fladd
  5572  0145  1003               	clrc
  5573  0146  0C5A               	rrf	??___fladd,w
  5574  0147  3801               	iorlw	1
  5575  0148  00DB               	movwf	??___fladd+1
  5576  0149  085B               	movf	??___fladd+1,w
  5577  014A  00E5               	movwf	___fladd@grs
  5578  014B  294E               	goto	l2658
  5579  014C                     l2656:	
  5580  014C  1003               	clrc
  5581  014D  0CE5               	rrf	___fladd@grs,f
  5582  014E                     l2658:	
  5583  014E  1852               	btfsc	___fladd@b,0
  5584  014F  17E5               	bsf	___fladd@grs,7
  5585  0150  3001               	movlw	1
  5586  0151  00DA               	movwf	??___fladd
  5587  0152                     u4045:	
  5588  0152  0D55               	rlf	___fladd@b+3,w
  5589  0153  0CD5               	rrf	___fladd@b+3,f
  5590  0154  0CD4               	rrf	___fladd@b+2,f
  5591  0155  0CD3               	rrf	___fladd@b+1,f
  5592  0156  0CD2               	rrf	___fladd@b,f
  5593  0157  0BDA               	decfsz	??___fladd& (0+127),f
  5594  0158  2952               	goto	u4045
  5595  0159  3001               	movlw	1
  5596  015A  00DA               	movwf	??___fladd
  5597  015B  085A               	movf	??___fladd,w
  5598  015C  07E4               	addwf	___fladd@bexp,f
  5599  015D  2A00               	goto	l2700
  5600  015E                     l2666:	
  5601  015E  0855               	movf	___fladd@b+3,w
  5602  015F  3A80               	xorlw	128
  5603  0160  00FF               	movwf	127
  5604  0161  0859               	movf	___fladd@a+3,w
  5605  0162  3A80               	xorlw	128
  5606  0163  027F               	subwf	127,w
  5607  0164  1D03               	skipz
  5608  0165  2970               	goto	u4053
  5609  0166  0858               	movf	___fladd@a+2,w
  5610  0167  0254               	subwf	___fladd@b+2,w
  5611  0168  1D03               	skipz
  5612  0169  2970               	goto	u4053
  5613  016A  0857               	movf	___fladd@a+1,w
  5614  016B  0253               	subwf	___fladd@b+1,w
  5615  016C  1D03               	skipz
  5616  016D  2970               	goto	u4053
  5617  016E  0856               	movf	___fladd@a,w
  5618  016F  0252               	subwf	___fladd@b,w
  5619  0170                     u4053:	
  5620  0170  1803               	skipnc
  5621  0171  29C8               	goto	l2676
  5622  0172  30FF               	movlw	255
  5623  0173  00DA               	movwf	??___fladd
  5624  0174  30FF               	movlw	255
  5625  0175  00DB               	movwf	??___fladd+1
  5626  0176  30FF               	movlw	255
  5627  0177  00DC               	movwf	??___fladd+2
  5628  0178  30FF               	movlw	255
  5629  0179  00DD               	movwf	??___fladd+3
  5630  017A  0856               	movf	___fladd@a,w
  5631  017B  00DE               	movwf	??___fladd+4
  5632  017C  0857               	movf	___fladd@a+1,w
  5633  017D  00DF               	movwf	??___fladd+5
  5634  017E  0858               	movf	___fladd@a+2,w
  5635  017F  00E0               	movwf	??___fladd+6
  5636  0180  0859               	movf	___fladd@a+3,w
  5637  0181  00E1               	movwf	??___fladd+7
  5638  0182  0852               	movf	___fladd@b,w
  5639  0183  02DE               	subwf	??___fladd+4,f
  5640  0184  0853               	movf	___fladd@b+1,w
  5641  0185  1C03               	skipc
  5642  0186  0F53               	incfsz	___fladd@b+1,w
  5643  0187  2989               	goto	u4061
  5644  0188  298A               	goto	u4062
  5645  0189                     u4061:	
  5646  0189  02DF               	subwf	??___fladd+5,f
  5647  018A                     u4062:	
  5648  018A  0854               	movf	___fladd@b+2,w
  5649  018B  1C03               	skipc
  5650  018C  0F54               	incfsz	___fladd@b+2,w
  5651  018D  298F               	goto	u4063
  5652  018E  2990               	goto	u4064
  5653  018F                     u4063:	
  5654  018F  02E0               	subwf	??___fladd+6,f
  5655  0190                     u4064:	
  5656  0190  0855               	movf	___fladd@b+3,w
  5657  0191  1C03               	skipc
  5658  0192  0F55               	incfsz	___fladd@b+3,w
  5659  0193  2995               	goto	u4065
  5660  0194  2996               	goto	u4066
  5661  0195                     u4065:	
  5662  0195  02E1               	subwf	??___fladd+7,f
  5663  0196                     u4066:	
  5664  0196  085E               	movf	??___fladd+4,w
  5665  0197  07DA               	addwf	??___fladd,f
  5666  0198  085F               	movf	??___fladd+5,w
  5667  0199  1803               	skipnc
  5668  019A  0F5F               	incfsz	??___fladd+5,w
  5669  019B  299D               	goto	u4070
  5670  019C  299E               	goto	u4071
  5671  019D                     u4070:	
  5672  019D  07DB               	addwf	??___fladd+1,f
  5673  019E                     u4071:	
  5674  019E  0860               	movf	??___fladd+6,w
  5675  019F  1803               	skipnc
  5676  01A0  0F60               	incfsz	??___fladd+6,w
  5677  01A1  29A3               	goto	u4072
  5678  01A2  29A4               	goto	u4073
  5679  01A3                     u4072:	
  5680  01A3  07DC               	addwf	??___fladd+2,f
  5681  01A4                     u4073:	
  5682  01A4  0861               	movf	??___fladd+7,w
  5683  01A5  1803               	skipnc
  5684  01A6  0A61               	incf	??___fladd+7,w
  5685  01A7  07DD               	addwf	??___fladd+3,f
  5686  01A8  085D               	movf	??___fladd+3,w
  5687  01A9  00D5               	movwf	___fladd@b+3
  5688  01AA  085C               	movf	??___fladd+2,w
  5689  01AB  00D4               	movwf	___fladd@b+2
  5690  01AC  085B               	movf	??___fladd+1,w
  5691  01AD  00D3               	movwf	___fladd@b+1
  5692  01AE  085A               	movf	??___fladd,w
  5693  01AF  00D2               	movwf	___fladd@b
  5694  01B0  3080               	movlw	128
  5695  01B1  00DA               	movwf	??___fladd
  5696  01B2  085A               	movf	??___fladd,w
  5697  01B3  06E2               	xorwf	___fladd@signs,f
  5698  01B4  09E5               	comf	___fladd@grs,f
  5699  01B5  0AE5               	incf	___fladd@grs,f
  5700  01B6  0865               	movf	___fladd@grs,w
  5701  01B7  1D03               	btfss	3,2
  5702  01B8  29D6               	goto	l533
  5703  01B9  3001               	movlw	1
  5704  01BA  07D2               	addwf	___fladd@b,f
  5705  01BB  3000               	movlw	0
  5706  01BC  1803               	skipnc
  5707  01BD  3001               	movlw	1
  5708  01BE  07D3               	addwf	___fladd@b+1,f
  5709  01BF  3000               	movlw	0
  5710  01C0  1803               	skipnc
  5711  01C1  3001               	movlw	1
  5712  01C2  07D4               	addwf	___fladd@b+2,f
  5713  01C3  3000               	movlw	0
  5714  01C4  1803               	skipnc
  5715  01C5  3001               	movlw	1
  5716  01C6  07D5               	addwf	___fladd@b+3,f
  5717  01C7  29D6               	goto	l533
  5718  01C8                     l2676:	
  5719  01C8  0856               	movf	___fladd@a,w
  5720  01C9  02D2               	subwf	___fladd@b,f
  5721  01CA  0857               	movf	___fladd@a+1,w
  5722  01CB  1C03               	skipc
  5723  01CC  0F57               	incfsz	___fladd@a+1,w
  5724  01CD  02D3               	subwf	___fladd@b+1,f
  5725  01CE  0858               	movf	___fladd@a+2,w
  5726  01CF  1C03               	skipc
  5727  01D0  0F58               	incfsz	___fladd@a+2,w
  5728  01D1  02D4               	subwf	___fladd@b+2,f
  5729  01D2  0859               	movf	___fladd@a+3,w
  5730  01D3  1C03               	skipc
  5731  01D4  0F59               	incfsz	___fladd@a+3,w
  5732  01D5  02D5               	subwf	___fladd@b+3,f
  5733  01D6                     l533:	
  5734  01D6  0855               	movf	___fladd@b+3,w
  5735  01D7  0454               	iorwf	___fladd@b+2,w
  5736  01D8  0453               	iorwf	___fladd@b+1,w
  5737  01D9  0452               	iorwf	___fladd@b,w
  5738  01DA  1D03               	skipz
  5739  01DB  29FE               	goto	l2698
  5740  01DC  0865               	movf	___fladd@grs,w
  5741  01DD  1D03               	btfss	3,2
  5742  01DE  29FE               	goto	l2698
  5743  01DF  3000               	movlw	0
  5744  01E0  00D5               	movwf	?___fladd+3
  5745  01E1  3000               	movlw	0
  5746  01E2  00D4               	movwf	?___fladd+2
  5747  01E3  3000               	movlw	0
  5748  01E4  00D3               	movwf	?___fladd+1
  5749  01E5  3000               	movlw	0
  5750  01E6  00D2               	movwf	?___fladd
  5751  01E7  0008               	return
  5752  01E8                     l2684:	
  5753  01E8  3001               	movlw	1
  5754  01E9  00DA               	movwf	??___fladd
  5755  01EA                     u4115:	
  5756  01EA  1003               	clrc
  5757  01EB  0DD2               	rlf	___fladd@b,f
  5758  01EC  0DD3               	rlf	___fladd@b+1,f
  5759  01ED  0DD4               	rlf	___fladd@b+2,f
  5760  01EE  0DD5               	rlf	___fladd@b+3,f
  5761  01EF  0BDA               	decfsz	??___fladd,f
  5762  01F0  29EA               	goto	u4115
  5763  01F1  1BE5               	btfsc	___fladd@grs,7
  5764  01F2  1452               	bsf	___fladd@b,0
  5765  01F3  1C65               	btfss	___fladd@grs,0
  5766  01F4  29F7               	goto	l2692
  5767  01F5  1403               	setc
  5768  01F6  29F8               	goto	L7
  5769  01F7                     l2692:	
  5770  01F7  1003               	clrc
  5771  01F8                     L7:	
  5772  01F8  0DE5               	rlf	___fladd@grs,f
  5773  01F9  0864               	movf	___fladd@bexp,w
  5774  01FA  1903               	btfsc	3,2
  5775  01FB  29FE               	goto	l2698
  5776  01FC  3001               	movlw	1
  5777  01FD  02E4               	subwf	___fladd@bexp,f
  5778  01FE                     l2698:	
  5779  01FE  1FD4               	btfss	___fladd@b+2,7
  5780  01FF  29E8               	goto	l2684
  5781  0200                     l2700:	
  5782  0200  01E3               	clrf	___fladd@aexp
  5783  0201  1FE5               	btfss	___fladd@grs,7
  5784  0202  2A0B               	goto	l2710
  5785  0203  0865               	movf	___fladd@grs,w
  5786  0204  397F               	andlw	127
  5787  0205  1903               	btfsc	3,2
  5788  0206  1852               	btfsc	___fladd@b,0
  5789  0207  2A09               	goto	l2706
  5790  0208  2A0B               	goto	l2710
  5791  0209                     l2706:	
  5792  0209  01E3               	clrf	___fladd@aexp
  5793  020A  0AE3               	incf	___fladd@aexp,f
  5794  020B                     l2710:	
  5795  020B  0863               	movf	___fladd@aexp,w
  5796  020C  1903               	btfsc	3,2
  5797  020D  2A3E               	goto	l546
  5798  020E  3001               	movlw	1
  5799  020F  07D2               	addwf	___fladd@b,f
  5800  0210  3000               	movlw	0
  5801  0211  1803               	skipnc
  5802  0212  3001               	movlw	1
  5803  0213  07D3               	addwf	___fladd@b+1,f
  5804  0214  3000               	movlw	0
  5805  0215  1803               	skipnc
  5806  0216  3001               	movlw	1
  5807  0217  07D4               	addwf	___fladd@b+2,f
  5808  0218  3000               	movlw	0
  5809  0219  1803               	skipnc
  5810  021A  3001               	movlw	1
  5811  021B  07D5               	addwf	___fladd@b+3,f
  5812  021C  1C55               	btfss	___fladd@b+3,0
  5813  021D  2A3E               	goto	l546
  5814  021E  0852               	movf	___fladd@b,w
  5815  021F  00DA               	movwf	??___fladd
  5816  0220  0853               	movf	___fladd@b+1,w
  5817  0221  00DB               	movwf	??___fladd+1
  5818  0222  0854               	movf	___fladd@b+2,w
  5819  0223  00DC               	movwf	??___fladd+2
  5820  0224  0855               	movf	___fladd@b+3,w
  5821  0225  00DD               	movwf	??___fladd+3
  5822  0226  3001               	movlw	1
  5823  0227  00DE               	movwf	??___fladd+4
  5824  0228                     u4215:	
  5825  0228  0D5D               	rlf	??___fladd+3,w
  5826  0229  0CDD               	rrf	??___fladd+3,f
  5827  022A  0CDC               	rrf	??___fladd+2,f
  5828  022B  0CDB               	rrf	??___fladd+1,f
  5829  022C  0CDA               	rrf	??___fladd,f
  5830  022D  0BDE               	decfsz	??___fladd+4,f
  5831  022E  2A28               	goto	u4215
  5832  022F  085D               	movf	??___fladd+3,w
  5833  0230  00D5               	movwf	___fladd@b+3
  5834  0231  085C               	movf	??___fladd+2,w
  5835  0232  00D4               	movwf	___fladd@b+2
  5836  0233  085B               	movf	??___fladd+1,w
  5837  0234  00D3               	movwf	___fladd@b+1
  5838  0235  085A               	movf	??___fladd,w
  5839  0236  00D2               	movwf	___fladd@b
  5840  0237  0A64               	incf	___fladd@bexp,w
  5841  0238  1903               	btfsc	3,2
  5842  0239  2A3E               	goto	l546
  5843  023A  3001               	movlw	1
  5844  023B  00DA               	movwf	??___fladd
  5845  023C  085A               	movf	??___fladd,w
  5846  023D  07E4               	addwf	___fladd@bexp,f
  5847  023E                     l546:	
  5848  023E  0A64               	incf	___fladd@bexp,w
  5849  023F  1D03               	btfss	3,2
  5850  0240  0864               	movf	___fladd@bexp,w
  5851  0241  1D03               	btfss	3,2
  5852  0242  2A4E               	goto	l2728
  5853  0243  3000               	movlw	0
  5854  0244  00D5               	movwf	___fladd@b+3
  5855  0245  3000               	movlw	0
  5856  0246  00D4               	movwf	___fladd@b+2
  5857  0247  3000               	movlw	0
  5858  0248  00D3               	movwf	___fladd@b+1
  5859  0249  3000               	movlw	0
  5860  024A  00D2               	movwf	___fladd@b
  5861  024B  0864               	movf	___fladd@bexp,w
  5862  024C  1903               	btfsc	3,2
  5863  024D  01E2               	clrf	___fladd@signs
  5864  024E                     l2728:	
  5865  024E  1C64               	btfss	___fladd@bexp,0
  5866  024F  2A52               	goto	l2732
  5867  0250  17D4               	bsf	___fladd@b+2,7
  5868  0251  2A56               	goto	l554
  5869  0252                     l2732:	
  5870  0252  307F               	movlw	127
  5871  0253  00DA               	movwf	??___fladd
  5872  0254  085A               	movf	??___fladd,w
  5873  0255  05D4               	andwf	___fladd@b+2,f
  5874  0256                     l554:	
  5875  0256  0864               	movf	___fladd@bexp,w
  5876  0257  00DA               	movwf	??___fladd
  5877  0258  1003               	clrc
  5878  0259  0C5A               	rrf	??___fladd,w
  5879  025A  00DB               	movwf	??___fladd+1
  5880  025B  085B               	movf	??___fladd+1,w
  5881  025C  00D5               	movwf	___fladd@b+3
  5882  025D  1FE2               	btfss	___fladd@signs,7
  5883  025E  0008               	return
  5884  025F  17D5               	bsf	___fladd@b+3,7
  5885  0260  0008               	return
  5886  0261                     __end_of___fladd:	
  5887                           
  5888                           	psect	text16
  5889  1001                     __ptext16:	
  5890 ;; *************** function _cgets *****************
  5891 ;; Defined at:
  5892 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\cgets.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  s               1    wreg     PTR unsigned char 
  5895 ;;		 -> main@buf(10), 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;  s               1    4[COMMON] PTR unsigned char 
  5898 ;;		 -> main@buf(10), 
  5899 ;;  c               2    2[COMMON] int 
  5900 ;;  s1              1    5[COMMON] PTR unsigned char 
  5901 ;;		 -> main@buf(10), 
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  1    wreg      PTR unsigned char 
  5904 ;; Registers used:
  5905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5911 ;;      Params:         0       0       0       0       0
  5912 ;;      Locals:         4       0       0       0       0
  5913 ;;      Temps:          2       0       0       0       0
  5914 ;;      Totals:         6       0       0       0       0
  5915 ;;Total ram usage:        6 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; Hardware stack levels required when called:    1
  5918 ;; This function calls:
  5919 ;;		_getche
  5920 ;;		_putch
  5921 ;; This function is called by:
  5922 ;;		_main
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           
  5927                           ;psect for function _cgets
  5928  1001                     _cgets:	
  5929                           
  5930                           ;incstack = 0
  5931                           ; Regs used in _cgets: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5932                           ;cgets@s stored from wreg
  5933  1001  00F4               	movwf	cgets@s
  5934  1002  0874               	movf	cgets@s,w
  5935  1003  00F0               	movwf	??_cgets
  5936  1004  0870               	movf	??_cgets,w
  5937  1005  00F5               	movwf	cgets@s1
  5938  1006  2843               	goto	l3548
  5939  1007                     l3524:	
  5940  1007  0874               	movf	cgets@s,w
  5941  1008  0675               	xorwf	cgets@s1,w
  5942  1009  1903               	btfsc	3,2
  5943  100A  2843               	goto	l3548
  5944  100B  3020               	movlw	32
  5945  100C  120A  118A  2003  160A  118A  	fcall	_putch
  5946  1011  3008               	movlw	8
  5947  1012  120A  118A  2003  160A  118A  	fcall	_putch
  5948  1017  3001               	movlw	1
  5949  1018  02F5               	subwf	cgets@s1,f
  5950  1019  2843               	goto	l3548
  5951  101A                     l3532:	
  5952  101A  3008               	movlw	8
  5953  101B  120A  118A  2003  160A  118A  	fcall	_putch
  5954  1020  3020               	movlw	32
  5955  1021  120A  118A  2003  160A  118A  	fcall	_putch
  5956  1026  3008               	movlw	8
  5957  1027  120A  118A  2003  160A  118A  	fcall	_putch
  5958  102C  3001               	movlw	1
  5959  102D  02F5               	subwf	cgets@s1,f
  5960  102E                     l3536:	
  5961  102E  0875               	movf	cgets@s1,w
  5962  102F  0274               	subwf	cgets@s,w
  5963  1030  1803               	btfsc	3,0
  5964  1031  2843               	goto	l3548
  5965  1032  281A               	goto	l3532
  5966  1033                     l3538:	
  5967  1033  0875               	movf	cgets@s1,w
  5968  1034  0084               	movwf	4
  5969  1035  1383               	bcf	3,7	;select IRP bank0
  5970  1036  0180               	clrf	0
  5971  1037  0008               	return
  5972  1038                     l3542:	
  5973  1038  0872               	movf	cgets@c,w
  5974  1039  00F0               	movwf	??_cgets
  5975  103A  0875               	movf	cgets@s1,w
  5976  103B  0084               	movwf	4
  5977  103C  0870               	movf	??_cgets,w
  5978  103D  1383               	bcf	3,7	;select IRP bank0
  5979  103E  0080               	movwf	0
  5980  103F  3001               	movlw	1
  5981  1040  00F0               	movwf	??_cgets
  5982  1041  0870               	movf	??_cgets,w
  5983  1042  07F5               	addwf	cgets@s1,f
  5984  1043                     l3548:	
  5985  1043  120A  118A  2004  160A  118A  	fcall	_getche
  5986  1048  00F0               	movwf	??_cgets
  5987  1049  01F1               	clrf	??_cgets+1
  5988  104A  0870               	movf	??_cgets,w
  5989  104B  00F2               	movwf	cgets@c
  5990  104C  0871               	movf	??_cgets+1,w
  5991  104D  00F3               	movwf	cgets@c+1
  5992                           
  5993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5994                           ; Switch size 1, requested type "simple"
  5995                           ; Number of cases is 1, Range of values is 0 to 0
  5996                           ; switch strategies available:
  5997                           ; Name         Instructions Cycles
  5998                           ; simple_byte            4     3 (average)
  5999                           ; direct_byte           11     8 (fixed)
  6000                           ; jumptable            260     6 (fixed)
  6001                           ;	Chosen strategy is simple_byte
  6002  104E  0873               	movf	cgets@c+1,w
  6003  104F  3A00               	xorlw	0	; case 0
  6004  1050  1903               	skipnz
  6005  1051  2853               	goto	l3786
  6006  1052  2838               	goto	l3542
  6007  1053                     l3786:	
  6008                           
  6009                           ; Switch size 1, requested type "simple"
  6010                           ; Number of cases is 4, Range of values is 8 to 21
  6011                           ; switch strategies available:
  6012                           ; Name         Instructions Cycles
  6013                           ; simple_byte           13     7 (average)
  6014                           ; direct_byte           53    11 (fixed)
  6015                           ; jumptable            263     9 (fixed)
  6016                           ;	Chosen strategy is simple_byte
  6017  1053  0872               	movf	cgets@c,w
  6018  1054  3A08               	xorlw	8	; case 8
  6019  1055  1903               	skipnz
  6020  1056  2807               	goto	l3524
  6021  1057  3A02               	xorlw	2	; case 10
  6022  1058  1903               	skipnz
  6023  1059  2833               	goto	l3538
  6024  105A  3A07               	xorlw	7	; case 13
  6025  105B  1903               	skipnz
  6026  105C  2833               	goto	l3538
  6027  105D  3A18               	xorlw	24	; case 21
  6028  105E  1903               	skipnz
  6029  105F  282E               	goto	l3536
  6030  1060  2838               	goto	l3542
  6031  1061  0008               	return
  6032  1062                     __end_of_cgets:	
  6033                           
  6034                           	psect	text17
  6035  0003                     __ptext17:	
  6036 ;; *************** function _putch *****************
  6037 ;; Defined at:
  6038 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\putch.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  c               1    wreg     unsigned char 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  c               1    0[COMMON] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6052 ;;      Params:         0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0
  6055 ;;      Totals:         0       0       0       0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		_printf
  6062 ;;		_cgets
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           
  6067                           ;psect for function _putch
  6068  0003                     _putch:	
  6069                           
  6070                           ;incstack = 0
  6071                           ; Regs used in _putch: [wreg]
  6072  0003  0008               	return
  6073  0004                     __end_of_putch:	
  6074                           
  6075                           	psect	text18
  6076  0004                     __ptext18:	
  6077 ;; *************** function _getche *****************
  6078 ;; Defined at:
  6079 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\getche.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;		None
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      unsigned char 
  6086 ;; Registers used:
  6087 ;;		wreg
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6093 ;;      Params:         0       0       0       0       0
  6094 ;;      Locals:         0       0       0       0       0
  6095 ;;      Temps:          0       0       0       0       0
  6096 ;;      Totals:         0       0       0       0       0
  6097 ;;Total ram usage:        0 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_cgets
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function _getche
  6108  0004                     _getche:	
  6109                           
  6110                           ;incstack = 0
  6111                           ; Regs used in _getche: [wreg]
  6112  0004  3000               	movlw	0
  6113  0005  0008               	return
  6114  0006                     __end_of_getche:	
  6115                           
  6116                           	psect	text19
  6117  1C72                     __ptext19:	
  6118 ;; *************** function _atof *****************
  6119 ;; Defined at:
  6120 ;;		line 200 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\atof.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  s               1    wreg     PTR const unsigned char 
  6123 ;;		 -> main@buf(10), 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  s               1   51[BANK0 ] PTR const unsigned char 
  6126 ;;		 -> main@buf(10), 
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  4   46[BANK0 ] PTR const unsigned char 
  6129 ;; Registers used:
  6130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6136 ;;      Params:         0       5       0       0       0
  6137 ;;      Locals:         0       1       0       0       0
  6138 ;;      Temps:          0       0       0       0       0
  6139 ;;      Totals:         0       6       0       0       0
  6140 ;;Total ram usage:        6 bytes
  6141 ;; Hardware stack levels used:    1
  6142 ;; Hardware stack levels required when called:    3
  6143 ;; This function calls:
  6144 ;;		_strtod
  6145 ;; This function is called by:
  6146 ;;		_main
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           
  6151                           ;psect for function _atof
  6152  1C72                     _atof:	
  6153                           
  6154                           ;incstack = 0
  6155                           ; Regs used in _atof: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6156                           ;atof@s stored from wreg
  6157  1C72  1283               	bcf	3,5	;RP0=0, select bank0
  6158  1C73  1303               	bcf	3,6	;RP1=0, select bank0
  6159  1C74  00D3               	movwf	atof@s
  6160  1C75  01BE               	clrf	strtod@res
  6161  1C76  0853               	movf	atof@s,w
  6162  1C77  160A  118A  2558   	fcall	_strtod
  6163  1C7A  1283               	bcf	3,5	;RP0=0, select bank0
  6164  1C7B  1303               	bcf	3,6	;RP1=0, select bank0
  6165  1C7C  0841               	movf	?_strtod+3,w
  6166  1C7D  00D1               	movwf	?_atof+3
  6167  1C7E  0840               	movf	?_strtod+2,w
  6168  1C7F  00D0               	movwf	?_atof+2
  6169  1C80  083F               	movf	?_strtod+1,w
  6170  1C81  00CF               	movwf	?_atof+1
  6171  1C82  083E               	movf	?_strtod,w
  6172  1C83  00CE               	movwf	?_atof
  6173  1C84  0008               	return
  6174  1C85                     __end_of_atof:	
  6175                           
  6176                           	psect	text20
  6177  1558                     __ptext20:	
  6178 ;; *************** function _strtod *****************
  6179 ;; Defined at:
  6180 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\atof.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  s               1    wreg     PTR const unsigned char 
  6183 ;;		 -> main@buf(10), 
  6184 ;;  res             1   30[BANK0 ] PTR PTR const unsigned c
  6185 ;;		 -> NULL(0), 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  s               1   45[BANK0 ] PTR const unsigned char 
  6188 ;;		 -> main@buf(10), 
  6189 ;;  _u              4   41[BANK0 ] struct .
  6190 ;;  expon           1   40[BANK0 ] char 
  6191 ;;  flags           1   39[BANK0 ] unsigned char 
  6192 ;;  eexp            1   38[BANK0 ] char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  4   30[BANK0 ] char 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6202 ;;      Params:         0       4       0       0       0
  6203 ;;      Locals:         0       8       0       0       0
  6204 ;;      Temps:          0       4       0       0       0
  6205 ;;      Totals:         0      16       0       0       0
  6206 ;;Total ram usage:       16 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    2
  6209 ;; This function calls:
  6210 ;;		___bmul
  6211 ;;		___fldiv
  6212 ;;		___fleq
  6213 ;;		___flge
  6214 ;;		___flmul
  6215 ;;		___flneg
  6216 ;;		___lmul
  6217 ;;		___xxtofl
  6218 ;;		_isdigit
  6219 ;;		_isspace
  6220 ;; This function is called by:
  6221 ;;		_atof
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           
  6226                           ;psect for function _strtod
  6227  1558                     _strtod:	
  6228                           
  6229                           ;incstack = 0
  6230                           ; Regs used in _strtod: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6231                           ;strtod@s stored from wreg
  6232  1558  1283               	bcf	3,5	;RP0=0, select bank0
  6233  1559  1303               	bcf	3,6	;RP1=0, select bank0
  6234  155A  00CD               	movwf	strtod@s
  6235  155B  083E               	movf	strtod@res,w
  6236  155C  1903               	btfsc	3,2
  6237  155D  2D65               	goto	l3358
  6238  155E  084D               	movf	strtod@s,w
  6239  155F  00C2               	movwf	??_strtod
  6240  1560  083E               	movf	strtod@res,w
  6241  1561  0084               	movwf	4
  6242  1562  0842               	movf	??_strtod,w
  6243  1563  1383               	bcf	3,7	;select IRP bank0
  6244  1564  0080               	movwf	0
  6245  1565                     l3358:	
  6246  1565  084D               	movf	strtod@s,w
  6247  1566  0084               	movwf	4
  6248  1567  1383               	bcf	3,7	;select IRP bank0
  6249  1568  0800               	movf	0,w
  6250  1569  00C6               	movwf	strtod@eexp
  6251  156A  160A  158A  2460  160A  118A  	fcall	_isspace
  6252  156F  1C03               	btfss	3,0
  6253  1570  2D78               	goto	l3360
  6254  1571  3001               	movlw	1
  6255  1572  1283               	bcf	3,5	;RP0=0, select bank0
  6256  1573  1303               	bcf	3,6	;RP1=0, select bank0
  6257  1574  00C2               	movwf	??_strtod
  6258  1575  0842               	movf	??_strtod,w
  6259  1576  07CD               	addwf	strtod@s,f
  6260  1577  2D65               	goto	l3358
  6261  1578                     l3360:	
  6262  1578  1283               	bcf	3,5	;RP0=0, select bank0
  6263  1579  1303               	bcf	3,6	;RP1=0, select bank0
  6264  157A  01C7               	clrf	strtod@flags
  6265  157B  302D               	movlw	45
  6266  157C  0646               	xorwf	strtod@eexp,w
  6267  157D  1D03               	btfss	3,2
  6268  157E  2D82               	goto	l3368
  6269  157F  01C7               	clrf	strtod@flags
  6270  1580  0AC7               	incf	strtod@flags,f
  6271  1581  2D86               	goto	l3366
  6272  1582                     l3368:	
  6273  1582  302B               	movlw	43
  6274  1583  0646               	xorwf	strtod@eexp,w
  6275  1584  1D03               	btfss	3,2
  6276  1585  2D8A               	goto	l3372
  6277  1586                     l3366:	
  6278  1586  3001               	movlw	1
  6279  1587  00C2               	movwf	??_strtod
  6280  1588  0842               	movf	??_strtod,w
  6281  1589  07CD               	addwf	strtod@s,f
  6282  158A                     l3372:	
  6283  158A  01C6               	clrf	strtod@eexp
  6284  158B  3000               	movlw	0
  6285  158C  00CC               	movwf	strtod@_u+3
  6286  158D  3000               	movlw	0
  6287  158E  00CB               	movwf	strtod@_u+2
  6288  158F  3000               	movlw	0
  6289  1590  00CA               	movwf	strtod@_u+1
  6290  1591  3000               	movlw	0
  6291  1592  00C9               	movwf	strtod@_u
  6292  1593  01C8               	clrf	strtod@expon
  6293  1594  2DA1               	goto	l3378
  6294  1595                     l3380:	
  6295  1595  084D               	movf	strtod@s,w
  6296  1596  0084               	movwf	4
  6297  1597  302E               	movlw	46
  6298  1598  1383               	bcf	3,7	;select IRP bank0
  6299  1599  0600               	xorwf	0,w
  6300  159A  1D03               	btfss	3,2
  6301  159B  2DA3               	goto	l3386
  6302  159C  1647               	bsf	strtod@flags,4
  6303  159D                     l3384:	
  6304  159D  3001               	movlw	1
  6305  159E  00C2               	movwf	??_strtod
  6306  159F  0842               	movf	??_strtod,w
  6307  15A0  07CD               	addwf	strtod@s,f
  6308  15A1                     l3378:	
  6309  15A1  1E47               	btfss	strtod@flags,4
  6310  15A2  2D95               	goto	l3380
  6311  15A3                     l3386:	
  6312  15A3  084D               	movf	strtod@s,w
  6313  15A4  0084               	movwf	4
  6314  15A5  1383               	bcf	3,7	;select IRP bank0
  6315  15A6  0800               	movf	0,w
  6316  15A7  160A  158A  2441  160A  118A  	fcall	_isdigit
  6317  15AC  1C03               	btfss	3,0
  6318  15AD  2E03               	goto	l3402
  6319  15AE  1283               	bcf	3,5	;RP0=0, select bank0
  6320  15AF  1303               	bcf	3,6	;RP1=0, select bank0
  6321  15B0  14C7               	bsf	strtod@flags,1
  6322  15B1  3009               	movlw	9
  6323  15B2  0646               	xorwf	strtod@eexp,w
  6324  15B3  1903               	btfsc	3,2
  6325  15B4  2DFC               	goto	l680
  6326  15B5  1E47               	btfss	strtod@flags,4
  6327  15B6  2DBB               	goto	l681
  6328  15B7  30FF               	movlw	255
  6329  15B8  00C2               	movwf	??_strtod
  6330  15B9  0842               	movf	??_strtod,w
  6331  15BA  07C8               	addwf	strtod@expon,f
  6332  15BB                     l681:	
  6333  15BB  3001               	movlw	1
  6334  15BC  00C2               	movwf	??_strtod
  6335  15BD  0842               	movf	??_strtod,w
  6336  15BE  07C6               	addwf	strtod@eexp,f
  6337  15BF  3000               	movlw	0
  6338  15C0  00F3               	movwf	___lmul@multiplier+3
  6339  15C1  3000               	movlw	0
  6340  15C2  00F2               	movwf	___lmul@multiplier+2
  6341  15C3  3000               	movlw	0
  6342  15C4  00F1               	movwf	___lmul@multiplier+1
  6343  15C5  300A               	movlw	10
  6344  15C6  00F0               	movwf	___lmul@multiplier
  6345  15C7  084C               	movf	strtod@_u+3,w
  6346  15C8  00F7               	movwf	___lmul@multiplicand+3
  6347  15C9  084B               	movf	strtod@_u+2,w
  6348  15CA  00F6               	movwf	___lmul@multiplicand+2
  6349  15CB  084A               	movf	strtod@_u+1,w
  6350  15CC  00F5               	movwf	___lmul@multiplicand+1
  6351  15CD  0849               	movf	strtod@_u,w
  6352  15CE  00F4               	movwf	___lmul@multiplicand
  6353  15CF  160A  158A  2571  160A  118A  	fcall	___lmul
  6354  15D4  0873               	movf	?___lmul+3,w
  6355  15D5  1283               	bcf	3,5	;RP0=0, select bank0
  6356  15D6  1303               	bcf	3,6	;RP1=0, select bank0
  6357  15D7  00CC               	movwf	strtod@_u+3
  6358  15D8  0872               	movf	?___lmul+2,w
  6359  15D9  00CB               	movwf	strtod@_u+2
  6360  15DA  0871               	movf	?___lmul+1,w
  6361  15DB  00CA               	movwf	strtod@_u+1
  6362  15DC  0870               	movf	?___lmul,w
  6363  15DD  00C9               	movwf	strtod@_u
  6364  15DE  084D               	movf	strtod@s,w
  6365  15DF  0084               	movwf	4
  6366  15E0  1383               	bcf	3,7	;select IRP bank0
  6367  15E1  0800               	movf	0,w
  6368  15E2  3ED0               	addlw	208
  6369  15E3  00C2               	movwf	??_strtod
  6370  15E4  01C3               	clrf	??_strtod+1
  6371  15E5  01C4               	clrf	??_strtod+2
  6372  15E6  01C5               	clrf	??_strtod+3
  6373  15E7  0842               	movf	??_strtod,w
  6374  15E8  07C9               	addwf	strtod@_u,f
  6375  15E9  0843               	movf	??_strtod+1,w
  6376  15EA  1103               	clrz
  6377  15EB  1803               	skipnc
  6378  15EC  3E01               	addlw	1
  6379  15ED  1D03               	btfss	3,2
  6380  15EE  07CA               	addwf	strtod@_u+1,f
  6381  15EF  0844               	movf	??_strtod+2,w
  6382  15F0  1103               	clrz
  6383  15F1  1803               	skipnc
  6384  15F2  3E01               	addlw	1
  6385  15F3  1D03               	btfss	3,2
  6386  15F4  07CB               	addwf	strtod@_u+2,f
  6387  15F5  0845               	movf	??_strtod+3,w
  6388  15F6  1103               	clrz
  6389  15F7  1803               	skipnc
  6390  15F8  3E01               	addlw	1
  6391  15F9  1D03               	btfss	3,2
  6392  15FA  07CC               	addwf	strtod@_u+3,f
  6393  15FB  2D9D               	goto	l3384
  6394  15FC                     l680:	
  6395  15FC  1A47               	btfsc	strtod@flags,4
  6396  15FD  2D9D               	goto	l3384
  6397  15FE  3001               	movlw	1
  6398  15FF  00C2               	movwf	??_strtod
  6399  1600  0842               	movf	??_strtod,w
  6400  1601  07C8               	addwf	strtod@expon,f
  6401  1602  2D9D               	goto	l3384
  6402  1603                     l3402:	
  6403  1603  1283               	bcf	3,5	;RP0=0, select bank0
  6404  1604  1303               	bcf	3,6	;RP1=0, select bank0
  6405  1605  01C6               	clrf	strtod@eexp
  6406  1606  084D               	movf	strtod@s,w
  6407  1607  0084               	movwf	4
  6408  1608  3065               	movlw	101
  6409  1609  1383               	bcf	3,7	;select IRP bank0
  6410  160A  0600               	xorwf	0,w
  6411  160B  1903               	btfsc	3,2
  6412  160C  2E13               	goto	l3408
  6413  160D  084D               	movf	strtod@s,w
  6414  160E  0084               	movwf	4
  6415  160F  3045               	movlw	69
  6416  1610  0600               	xorwf	0,w
  6417  1611  1D03               	btfss	3,2
  6418  1612  2E92               	goto	l3442
  6419  1613                     l3408:	
  6420  1613  3001               	movlw	1
  6421  1614  00C2               	movwf	??_strtod
  6422  1615  0842               	movf	??_strtod,w
  6423  1616  07CD               	addwf	strtod@s,f
  6424  1617  084D               	movf	strtod@s,w
  6425  1618  0084               	movwf	4
  6426  1619  302D               	movlw	45
  6427  161A  0600               	xorwf	0,w
  6428  161B  1D03               	btfss	3,2
  6429  161C  2E1F               	goto	l3414
  6430  161D  15C7               	bsf	strtod@flags,3
  6431  161E  2E2B               	goto	l3412
  6432  161F                     l3414:	
  6433  161F  084D               	movf	strtod@s,w
  6434  1620  0084               	movwf	4
  6435  1621  302B               	movlw	43
  6436  1622  0600               	xorwf	0,w
  6437  1623  1903               	btfsc	3,2
  6438  1624  2E2B               	goto	l3412
  6439  1625                     l3420:	
  6440  1625  084D               	movf	strtod@s,w
  6441  1626  0084               	movwf	4
  6442  1627  3030               	movlw	48
  6443  1628  0600               	xorwf	0,w
  6444  1629  1D03               	btfss	3,2
  6445  162A  2E30               	goto	l3422
  6446  162B                     l3412:	
  6447  162B  3001               	movlw	1
  6448  162C  00C2               	movwf	??_strtod
  6449  162D  0842               	movf	??_strtod,w
  6450  162E  07CD               	addwf	strtod@s,f
  6451  162F  2E25               	goto	l3420
  6452  1630                     l3422:	
  6453  1630  084D               	movf	strtod@s,w
  6454  1631  0084               	movwf	4
  6455  1632  0800               	movf	0,w
  6456  1633  160A  158A  2441  160A  118A  	fcall	_isdigit
  6457  1638  1C03               	btfss	3,0
  6458  1639  2E8C               	goto	l3438
  6459  163A  1283               	bcf	3,5	;RP0=0, select bank0
  6460  163B  1303               	bcf	3,6	;RP1=0, select bank0
  6461  163C  084D               	movf	strtod@s,w
  6462  163D  0084               	movwf	4
  6463  163E  1383               	bcf	3,7	;select IRP bank0
  6464  163F  0800               	movf	0,w
  6465  1640  3ED0               	addlw	208
  6466  1641  00C2               	movwf	??_strtod
  6467  1642  0842               	movf	??_strtod,w
  6468  1643  00C6               	movwf	strtod@eexp
  6469  1644  3001               	movlw	1
  6470  1645  00C2               	movwf	??_strtod
  6471  1646  0842               	movf	??_strtod,w
  6472  1647  07CD               	addwf	strtod@s,f
  6473  1648  084D               	movf	strtod@s,w
  6474  1649  0084               	movwf	4
  6475  164A  0800               	movf	0,w
  6476  164B  160A  158A  2441  160A  118A  	fcall	_isdigit
  6477  1650  1C03               	btfss	3,0
  6478  1651  2E8C               	goto	l3438
  6479  1652  1283               	bcf	3,5	;RP0=0, select bank0
  6480  1653  1303               	bcf	3,6	;RP1=0, select bank0
  6481  1654  084D               	movf	strtod@s,w
  6482  1655  0084               	movwf	4
  6483  1656  300A               	movlw	10
  6484  1657  00C2               	movwf	??_strtod
  6485  1658  0842               	movf	??_strtod,w
  6486  1659  00F0               	movwf	___bmul@multiplicand
  6487  165A  0846               	movf	strtod@eexp,w
  6488  165B  160A  158A  244F  160A  118A  	fcall	___bmul
  6489  1660  1383               	bcf	3,7	;select IRP bank0
  6490  1661  0700               	addwf	0,w
  6491  1662  3ED0               	addlw	-48
  6492  1663  1283               	bcf	3,5	;RP0=0, select bank0
  6493  1664  1303               	bcf	3,6	;RP1=0, select bank0
  6494  1665  00C3               	movwf	??_strtod+1
  6495  1666  0843               	movf	??_strtod+1,w
  6496  1667  00C6               	movwf	strtod@eexp
  6497  1668  3001               	movlw	1
  6498  1669  00C2               	movwf	??_strtod
  6499  166A  0842               	movf	??_strtod,w
  6500  166B  07CD               	addwf	strtod@s,f
  6501  166C  084D               	movf	strtod@s,w
  6502  166D  0084               	movwf	4
  6503  166E  0800               	movf	0,w
  6504  166F  160A  158A  2441  160A  118A  	fcall	_isdigit
  6505  1674  1C03               	btfss	3,0
  6506  1675  2E8C               	goto	l3438
  6507  1676  1283               	bcf	3,5	;RP0=0, select bank0
  6508  1677  1303               	bcf	3,6	;RP1=0, select bank0
  6509  1678  084D               	movf	strtod@s,w
  6510  1679  0084               	movwf	4
  6511  167A  300A               	movlw	10
  6512  167B  00C2               	movwf	??_strtod
  6513  167C  0842               	movf	??_strtod,w
  6514  167D  00F0               	movwf	___bmul@multiplicand
  6515  167E  0846               	movf	strtod@eexp,w
  6516  167F  160A  158A  244F  160A  118A  	fcall	___bmul
  6517  1684  1383               	bcf	3,7	;select IRP bank0
  6518  1685  0700               	addwf	0,w
  6519  1686  3ED0               	addlw	-48
  6520  1687  1283               	bcf	3,5	;RP0=0, select bank0
  6521  1688  1303               	bcf	3,6	;RP1=0, select bank0
  6522  1689  00C3               	movwf	??_strtod+1
  6523  168A  0843               	movf	??_strtod+1,w
  6524  168B  00C6               	movwf	strtod@eexp
  6525  168C                     l3438:	
  6526  168C  1283               	bcf	3,5	;RP0=0, select bank0
  6527  168D  1303               	bcf	3,6	;RP1=0, select bank0
  6528  168E  1DC7               	btfss	strtod@flags,3
  6529  168F  2E92               	goto	l3442
  6530  1690  09C6               	comf	strtod@eexp,f
  6531  1691  0AC6               	incf	strtod@eexp,f
  6532  1692                     l3442:	
  6533  1692  0846               	movf	strtod@eexp,w
  6534  1693  00C2               	movwf	??_strtod
  6535  1694  0842               	movf	??_strtod,w
  6536  1695  07C8               	addwf	strtod@expon,f
  6537  1696  083E               	movf	strtod@res,w
  6538  1697  1D03               	btfss	3,2
  6539  1698  1CC7               	btfss	strtod@flags,1
  6540  1699  2EA1               	goto	l3450
  6541  169A  084D               	movf	strtod@s,w
  6542  169B  00C2               	movwf	??_strtod
  6543  169C  083E               	movf	strtod@res,w
  6544  169D  0084               	movwf	4
  6545  169E  0842               	movf	??_strtod,w
  6546  169F  1383               	bcf	3,7	;select IRP bank0
  6547  16A0  0080               	movwf	0
  6548  16A1                     l3450:	
  6549  16A1  084C               	movf	strtod@_u+3,w
  6550  16A2  00F3               	movwf	___xxtofl@val+3
  6551  16A3  084B               	movf	strtod@_u+2,w
  6552  16A4  00F2               	movwf	___xxtofl@val+2
  6553  16A5  084A               	movf	strtod@_u+1,w
  6554  16A6  00F1               	movwf	___xxtofl@val+1
  6555  16A7  0849               	movf	strtod@_u,w
  6556  16A8  00F0               	movwf	___xxtofl@val
  6557  16A9  3001               	movlw	1
  6558  16AA  160A  118A  2062  160A  118A  	fcall	___xxtofl
  6559  16AF  0873               	movf	?___xxtofl+3,w
  6560  16B0  1283               	bcf	3,5	;RP0=0, select bank0
  6561  16B1  1303               	bcf	3,6	;RP1=0, select bank0
  6562  16B2  00CC               	movwf	strtod@_u+3
  6563  16B3  0872               	movf	?___xxtofl+2,w
  6564  16B4  00CB               	movwf	strtod@_u+2
  6565  16B5  0871               	movf	?___xxtofl+1,w
  6566  16B6  00CA               	movwf	strtod@_u+1
  6567  16B7  0870               	movf	?___xxtofl,w
  6568  16B8  00C9               	movwf	strtod@_u
  6569  16B9  084C               	movf	strtod@_u+3,w
  6570  16BA  00F3               	movwf	___fleq@ff1+3
  6571  16BB  084B               	movf	strtod@_u+2,w
  6572  16BC  00F2               	movwf	___fleq@ff1+2
  6573  16BD  084A               	movf	strtod@_u+1,w
  6574  16BE  00F1               	movwf	___fleq@ff1+1
  6575  16BF  0849               	movf	strtod@_u,w
  6576  16C0  00F0               	movwf	___fleq@ff1
  6577  16C1  3000               	movlw	0
  6578  16C2  00F7               	movwf	___fleq@ff2+3
  6579  16C3  3000               	movlw	0
  6580  16C4  00F6               	movwf	___fleq@ff2+2
  6581  16C5  3000               	movlw	0
  6582  16C6  00F5               	movwf	___fleq@ff2+1
  6583  16C7  3000               	movlw	0
  6584  16C8  00F4               	movwf	___fleq@ff2
  6585  16C9  120A  158A  20B0  160A  118A  	fcall	___fleq
  6586  16CE  1C03               	btfss	3,0
  6587  16CF  2EDB               	goto	l698
  6588  16D0  3000               	movlw	0
  6589  16D1  1283               	bcf	3,5	;RP0=0, select bank0
  6590  16D2  1303               	bcf	3,6	;RP1=0, select bank0
  6591  16D3  00C1               	movwf	?_strtod+3
  6592  16D4  3000               	movlw	0
  6593  16D5  00C0               	movwf	?_strtod+2
  6594  16D6  3000               	movlw	0
  6595  16D7  00BF               	movwf	?_strtod+1
  6596  16D8  3000               	movlw	0
  6597  16D9  00BE               	movwf	?_strtod
  6598  16DA  0008               	return
  6599  16DB                     l698:	
  6600  16DB  1283               	bcf	3,5	;RP0=0, select bank0
  6601  16DC  1303               	bcf	3,6	;RP1=0, select bank0
  6602  16DD  1FC8               	btfss	strtod@expon,7
  6603  16DE  2F5D               	goto	l3484
  6604  16DF  09C8               	comf	strtod@expon,f
  6605  16E0  0AC8               	incf	strtod@expon,f
  6606  16E1                     l3464:	
  6607  16E1  0848               	movf	strtod@expon,w
  6608  16E2  3A80               	xorlw	128
  6609  16E3  3E76               	addlw	-138
  6610  16E4  1C03               	btfss	3,0
  6611  16E5  2F2D               	goto	l3470
  6612  16E6  3050               	movlw	80
  6613  16E7  00F3               	movwf	___fldiv@a+3
  6614  16E8  3015               	movlw	21
  6615  16E9  00F2               	movwf	___fldiv@a+2
  6616  16EA  3002               	movlw	2
  6617  16EB  00F1               	movwf	___fldiv@a+1
  6618  16EC  30F9               	movlw	249
  6619  16ED  00F0               	movwf	___fldiv@a
  6620  16EE  084C               	movf	strtod@_u+3,w
  6621  16EF  00F7               	movwf	___fldiv@b+3
  6622  16F0  084B               	movf	strtod@_u+2,w
  6623  16F1  00F6               	movwf	___fldiv@b+2
  6624  16F2  084A               	movf	strtod@_u+1,w
  6625  16F3  00F5               	movwf	___fldiv@b+1
  6626  16F4  0849               	movf	strtod@_u,w
  6627  16F5  00F4               	movwf	___fldiv@b
  6628  16F6  160A  118A  21AE  160A  118A  	fcall	___fldiv
  6629  16FB  0873               	movf	?___fldiv+3,w
  6630  16FC  1283               	bcf	3,5	;RP0=0, select bank0
  6631  16FD  1303               	bcf	3,6	;RP1=0, select bank0
  6632  16FE  00CC               	movwf	strtod@_u+3
  6633  16FF  0872               	movf	?___fldiv+2,w
  6634  1700  00CB               	movwf	strtod@_u+2
  6635  1701  0871               	movf	?___fldiv+1,w
  6636  1702  00CA               	movwf	strtod@_u+1
  6637  1703  0870               	movf	?___fldiv,w
  6638  1704  00C9               	movwf	strtod@_u
  6639  1705  30F6               	movlw	246
  6640  1706  00C2               	movwf	??_strtod
  6641  1707  0842               	movf	??_strtod,w
  6642  1708  07C8               	addwf	strtod@expon,f
  6643  1709  2EE1               	goto	l3464
  6644  170A                     l3466:	
  6645  170A  3041               	movlw	65
  6646  170B  00F3               	movwf	___fldiv@a+3
  6647  170C  3020               	movlw	32
  6648  170D  00F2               	movwf	___fldiv@a+2
  6649  170E  3000               	movlw	0
  6650  170F  00F1               	movwf	___fldiv@a+1
  6651  1710  3000               	movlw	0
  6652  1711  00F0               	movwf	___fldiv@a
  6653  1712  084C               	movf	strtod@_u+3,w
  6654  1713  00F7               	movwf	___fldiv@b+3
  6655  1714  084B               	movf	strtod@_u+2,w
  6656  1715  00F6               	movwf	___fldiv@b+2
  6657  1716  084A               	movf	strtod@_u+1,w
  6658  1717  00F5               	movwf	___fldiv@b+1
  6659  1718  0849               	movf	strtod@_u,w
  6660  1719  00F4               	movwf	___fldiv@b
  6661  171A  160A  118A  21AE  160A  118A  	fcall	___fldiv
  6662  171F  0873               	movf	?___fldiv+3,w
  6663  1720  1283               	bcf	3,5	;RP0=0, select bank0
  6664  1721  1303               	bcf	3,6	;RP1=0, select bank0
  6665  1722  00CC               	movwf	strtod@_u+3
  6666  1723  0872               	movf	?___fldiv+2,w
  6667  1724  00CB               	movwf	strtod@_u+2
  6668  1725  0871               	movf	?___fldiv+1,w
  6669  1726  00CA               	movwf	strtod@_u+1
  6670  1727  0870               	movf	?___fldiv,w
  6671  1728  00C9               	movwf	strtod@_u
  6672  1729  30FF               	movlw	255
  6673  172A  00C2               	movwf	??_strtod
  6674  172B  0842               	movf	??_strtod,w
  6675  172C  07C8               	addwf	strtod@expon,f
  6676  172D                     l3470:	
  6677  172D  0848               	movf	strtod@expon,w
  6678  172E  1D03               	btfss	3,2
  6679  172F  2F0A               	goto	l3466
  6680  1730  084C               	movf	strtod@_u+3,w
  6681  1731  00F3               	movwf	___flge@ff1+3
  6682  1732  084B               	movf	strtod@_u+2,w
  6683  1733  00F2               	movwf	___flge@ff1+2
  6684  1734  084A               	movf	strtod@_u+1,w
  6685  1735  00F1               	movwf	___flge@ff1+1
  6686  1736  0849               	movf	strtod@_u,w
  6687  1737  00F0               	movwf	___flge@ff1
  6688  1738  3000               	movlw	0
  6689  1739  00F7               	movwf	___flge@ff2+3
  6690  173A  3080               	movlw	128
  6691  173B  00F6               	movwf	___flge@ff2+2
  6692  173C  3000               	movlw	0
  6693  173D  00F5               	movwf	___flge@ff2+1
  6694  173E  3000               	movlw	0
  6695  173F  00F4               	movwf	___flge@ff2
  6696  1740  160A  158A  276D  160A  118A  	fcall	___flge
  6697  1745  1803               	btfsc	3,0
  6698  1746  2FDE               	goto	l709
  6699  1747  1283               	bcf	3,5	;RP0=0, select bank0
  6700  1748  1303               	bcf	3,6	;RP1=0, select bank0
  6701  1749  1C47               	btfss	strtod@flags,0
  6702  174A  2F54               	goto	l3480
  6703  174B  3080               	movlw	128
  6704  174C  00C1               	movwf	?_strtod+3
  6705  174D  3080               	movlw	128
  6706  174E  00C0               	movwf	?_strtod+2
  6707  174F  3000               	movlw	0
  6708  1750  00BF               	movwf	?_strtod+1
  6709  1751  3000               	movlw	0
  6710  1752  00BE               	movwf	?_strtod
  6711  1753  0008               	return
  6712  1754                     l3480:	
  6713  1754  3000               	movlw	0
  6714  1755  00C1               	movwf	?_strtod+3
  6715  1756  3080               	movlw	128
  6716  1757  00C0               	movwf	?_strtod+2
  6717  1758  3000               	movlw	0
  6718  1759  00BF               	movwf	?_strtod+1
  6719  175A  3000               	movlw	0
  6720  175B  00BE               	movwf	?_strtod
  6721  175C  0008               	return
  6722  175D                     l3484:	
  6723  175D  0848               	movf	strtod@expon,w
  6724  175E  3A80               	xorlw	128
  6725  175F  3E7F               	addlw	-129
  6726  1760  1803               	btfsc	3,0
  6727  1761  2F86               	goto	l3492
  6728  1762  2FDE               	goto	l709
  6729  1763                     l3488:	
  6730  1763  3050               	movlw	80
  6731  1764  00A7               	movwf	___flmul@b+3
  6732  1765  3015               	movlw	21
  6733  1766  00A6               	movwf	___flmul@b+2
  6734  1767  3002               	movlw	2
  6735  1768  00A5               	movwf	___flmul@b+1
  6736  1769  30F9               	movlw	249
  6737  176A  00A4               	movwf	___flmul@b
  6738  176B  084C               	movf	strtod@_u+3,w
  6739  176C  00AB               	movwf	___flmul@a+3
  6740  176D  084B               	movf	strtod@_u+2,w
  6741  176E  00AA               	movwf	___flmul@a+2
  6742  176F  084A               	movf	strtod@_u+1,w
  6743  1770  00A9               	movwf	___flmul@a+1
  6744  1771  0849               	movf	strtod@_u,w
  6745  1772  00A8               	movwf	___flmul@a
  6746  1773  120A  158A  21A2  160A  118A  	fcall	___flmul
  6747  1778  1283               	bcf	3,5	;RP0=0, select bank0
  6748  1779  1303               	bcf	3,6	;RP1=0, select bank0
  6749  177A  0827               	movf	?___flmul+3,w
  6750  177B  00CC               	movwf	strtod@_u+3
  6751  177C  0826               	movf	?___flmul+2,w
  6752  177D  00CB               	movwf	strtod@_u+2
  6753  177E  0825               	movf	?___flmul+1,w
  6754  177F  00CA               	movwf	strtod@_u+1
  6755  1780  0824               	movf	?___flmul,w
  6756  1781  00C9               	movwf	strtod@_u
  6757  1782  30F6               	movlw	246
  6758  1783  00C2               	movwf	??_strtod
  6759  1784  0842               	movf	??_strtod,w
  6760  1785  07C8               	addwf	strtod@expon,f
  6761  1786                     l3492:	
  6762  1786  300A               	movlw	10
  6763  1787  0248               	subwf	strtod@expon,w
  6764  1788  1C03               	btfss	3,0
  6765  1789  2FAE               	goto	l3498
  6766  178A  2F63               	goto	l3488
  6767  178B                     l3494:	
  6768  178B  3041               	movlw	65
  6769  178C  00A7               	movwf	___flmul@b+3
  6770  178D  3020               	movlw	32
  6771  178E  00A6               	movwf	___flmul@b+2
  6772  178F  3000               	movlw	0
  6773  1790  00A5               	movwf	___flmul@b+1
  6774  1791  3000               	movlw	0
  6775  1792  00A4               	movwf	___flmul@b
  6776  1793  084C               	movf	strtod@_u+3,w
  6777  1794  00AB               	movwf	___flmul@a+3
  6778  1795  084B               	movf	strtod@_u+2,w
  6779  1796  00AA               	movwf	___flmul@a+2
  6780  1797  084A               	movf	strtod@_u+1,w
  6781  1798  00A9               	movwf	___flmul@a+1
  6782  1799  0849               	movf	strtod@_u,w
  6783  179A  00A8               	movwf	___flmul@a
  6784  179B  120A  158A  21A2  160A  118A  	fcall	___flmul
  6785  17A0  1283               	bcf	3,5	;RP0=0, select bank0
  6786  17A1  1303               	bcf	3,6	;RP1=0, select bank0
  6787  17A2  0827               	movf	?___flmul+3,w
  6788  17A3  00CC               	movwf	strtod@_u+3
  6789  17A4  0826               	movf	?___flmul+2,w
  6790  17A5  00CB               	movwf	strtod@_u+2
  6791  17A6  0825               	movf	?___flmul+1,w
  6792  17A7  00CA               	movwf	strtod@_u+1
  6793  17A8  0824               	movf	?___flmul,w
  6794  17A9  00C9               	movwf	strtod@_u
  6795  17AA  30FF               	movlw	255
  6796  17AB  00C2               	movwf	??_strtod
  6797  17AC  0842               	movf	??_strtod,w
  6798  17AD  07C8               	addwf	strtod@expon,f
  6799  17AE                     l3498:	
  6800  17AE  0848               	movf	strtod@expon,w
  6801  17AF  1D03               	btfss	3,2
  6802  17B0  2F8B               	goto	l3494
  6803  17B1  307F               	movlw	127
  6804  17B2  00F3               	movwf	___flge@ff1+3
  6805  17B3  307F               	movlw	127
  6806  17B4  00F2               	movwf	___flge@ff1+2
  6807  17B5  30FF               	movlw	255
  6808  17B6  00F1               	movwf	___flge@ff1+1
  6809  17B7  30FF               	movlw	255
  6810  17B8  00F0               	movwf	___flge@ff1
  6811  17B9  084C               	movf	strtod@_u+3,w
  6812  17BA  00F7               	movwf	___flge@ff2+3
  6813  17BB  084B               	movf	strtod@_u+2,w
  6814  17BC  00F6               	movwf	___flge@ff2+2
  6815  17BD  084A               	movf	strtod@_u+1,w
  6816  17BE  00F5               	movwf	___flge@ff2+1
  6817  17BF  0849               	movf	strtod@_u,w
  6818  17C0  00F4               	movwf	___flge@ff2
  6819  17C1  160A  158A  276D  160A  118A  	fcall	___flge
  6820  17C6  1803               	btfsc	3,0
  6821  17C7  2FDE               	goto	l709
  6822  17C8  1283               	bcf	3,5	;RP0=0, select bank0
  6823  17C9  1303               	bcf	3,6	;RP1=0, select bank0
  6824  17CA  1C47               	btfss	strtod@flags,0
  6825  17CB  2FD5               	goto	l3508
  6826  17CC  3080               	movlw	128
  6827  17CD  00C1               	movwf	?_strtod+3
  6828  17CE  3080               	movlw	128
  6829  17CF  00C0               	movwf	?_strtod+2
  6830  17D0  3000               	movlw	0
  6831  17D1  00BF               	movwf	?_strtod+1
  6832  17D2  3000               	movlw	0
  6833  17D3  00BE               	movwf	?_strtod
  6834  17D4  0008               	return
  6835  17D5                     l3508:	
  6836  17D5  3000               	movlw	0
  6837  17D6  00C1               	movwf	?_strtod+3
  6838  17D7  3080               	movlw	128
  6839  17D8  00C0               	movwf	?_strtod+2
  6840  17D9  3000               	movlw	0
  6841  17DA  00BF               	movwf	?_strtod+1
  6842  17DB  3000               	movlw	0
  6843  17DC  00BE               	movwf	?_strtod
  6844  17DD  0008               	return
  6845  17DE                     l709:	
  6846  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  6847  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  6848  17E0  1C47               	btfss	strtod@flags,0
  6849  17E1  2FF7               	goto	l3514
  6850  17E2  084C               	movf	strtod@_u+3,w
  6851  17E3  00F3               	movwf	___flneg@f1+3
  6852  17E4  084B               	movf	strtod@_u+2,w
  6853  17E5  00F2               	movwf	___flneg@f1+2
  6854  17E6  084A               	movf	strtod@_u+1,w
  6855  17E7  00F1               	movwf	___flneg@f1+1
  6856  17E8  0849               	movf	strtod@_u,w
  6857  17E9  00F0               	movwf	___flneg@f1
  6858  17EA  120A  118A  2006   	fcall	___flneg
  6859  17ED  0873               	movf	?___flneg+3,w
  6860  17EE  1283               	bcf	3,5	;RP0=0, select bank0
  6861  17EF  1303               	bcf	3,6	;RP1=0, select bank0
  6862  17F0  00CC               	movwf	strtod@_u+3
  6863  17F1  0872               	movf	?___flneg+2,w
  6864  17F2  00CB               	movwf	strtod@_u+2
  6865  17F3  0871               	movf	?___flneg+1,w
  6866  17F4  00CA               	movwf	strtod@_u+1
  6867  17F5  0870               	movf	?___flneg,w
  6868  17F6  00C9               	movwf	strtod@_u
  6869  17F7                     l3514:	
  6870  17F7  084C               	movf	strtod@_u+3,w
  6871  17F8  00C1               	movwf	?_strtod+3
  6872  17F9  084B               	movf	strtod@_u+2,w
  6873  17FA  00C0               	movwf	?_strtod+2
  6874  17FB  084A               	movf	strtod@_u+1,w
  6875  17FC  00BF               	movwf	?_strtod+1
  6876  17FD  0849               	movf	strtod@_u,w
  6877  17FE  00BE               	movwf	?_strtod
  6878  17FF  0008               	return
  6879  1800                     __end_of_strtod:	
  6880                           
  6881                           	psect	text21
  6882  1C60                     __ptext21:	
  6883 ;; *************** function _isspace *****************
  6884 ;; Defined at:
  6885 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isspace.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  c               1    wreg     unsigned char 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  c               1    1[COMMON] unsigned char 
  6890 ;; Return value:  Size  Location     Type
  6891 ;;		None               void
  6892 ;; Registers used:
  6893 ;;		wreg, status,2, status,0
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6899 ;;      Params:         0       0       0       0       0
  6900 ;;      Locals:         2       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0
  6902 ;;      Totals:         2       0       0       0       0
  6903 ;;Total ram usage:        2 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_strtod
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           
  6913                           ;psect for function _isspace
  6914  1C60                     _isspace:	
  6915                           
  6916                           ;incstack = 0
  6917                           ; Regs used in _isspace: [wreg+status,2+status,0]
  6918                           ;isspace@c stored from wreg
  6919  1C60  00F1               	movwf	isspace@c
  6920  1C61  01F0               	clrf	_isspace$589
  6921  1C62  0AF0               	incf	_isspace$589,f
  6922  1C63  3020               	movlw	32
  6923  1C64  0671               	xorwf	isspace@c,w
  6924  1C65  1903               	btfsc	3,2
  6925  1C66  2C70               	goto	l3074
  6926  1C67  300E               	movlw	14
  6927  1C68  0271               	subwf	isspace@c,w
  6928  1C69  1803               	skipnc
  6929  1C6A  2C6F               	goto	l3072
  6930  1C6B  3009               	movlw	9
  6931  1C6C  0271               	subwf	isspace@c,w
  6932  1C6D  1803               	skipnc
  6933  1C6E  2C70               	goto	l3074
  6934  1C6F                     l3072:	
  6935  1C6F  01F0               	clrf	_isspace$589
  6936  1C70                     l3074:	
  6937  1C70  0C70               	rrf	_isspace$589,w
  6938  1C71  0008               	return
  6939  1C72                     __end_of_isspace:	
  6940                           
  6941                           	psect	text22
  6942  1C41                     __ptext22:	
  6943 ;; *************** function _isdigit *****************
  6944 ;; Defined at:
  6945 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  c               1    wreg     unsigned char 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;  c               1    1[COMMON] unsigned char 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;		None               void
  6952 ;; Registers used:
  6953 ;;		wreg, status,2, status,0
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6959 ;;      Params:         0       0       0       0       0
  6960 ;;      Locals:         2       0       0       0       0
  6961 ;;      Temps:          0       0       0       0       0
  6962 ;;      Totals:         2       0       0       0       0
  6963 ;;Total ram usage:        2 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_strtod
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           
  6973                           ;psect for function _isdigit
  6974  1C41                     _isdigit:	
  6975                           
  6976                           ;incstack = 0
  6977                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6978                           ;isdigit@c stored from wreg
  6979  1C41  00F1               	movwf	isdigit@c
  6980  1C42  01F0               	clrf	_isdigit$586
  6981  1C43  303A               	movlw	58
  6982  1C44  0271               	subwf	isdigit@c,w
  6983  1C45  1803               	skipnc
  6984  1C46  2C4D               	goto	l3086
  6985  1C47  3030               	movlw	48
  6986  1C48  0271               	subwf	isdigit@c,w
  6987  1C49  1C03               	skipc
  6988  1C4A  2C4D               	goto	l3086
  6989  1C4B  01F0               	clrf	_isdigit$586
  6990  1C4C  0AF0               	incf	_isdigit$586,f
  6991  1C4D                     l3086:	
  6992  1C4D  0C70               	rrf	_isdigit$586,w
  6993  1C4E  0008               	return
  6994  1C4F                     __end_of_isdigit:	
  6995                           
  6996                           	psect	text23
  6997  1062                     __ptext23:	
  6998 ;; *************** function ___xxtofl *****************
  6999 ;; Defined at:
  7000 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  sign            1    wreg     unsigned char 
  7003 ;;  val             4    0[COMMON] long 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  sign            1    8[COMMON] unsigned char 
  7006 ;;  arg             4   10[COMMON] unsigned long 
  7007 ;;  exp             1    9[COMMON] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  4    0[COMMON] unsigned char 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7017 ;;      Params:         4       0       0       0       0
  7018 ;;      Locals:         6       0       0       0       0
  7019 ;;      Temps:          4       0       0       0       0
  7020 ;;      Totals:        14       0       0       0       0
  7021 ;;Total ram usage:       14 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_printf
  7027 ;;		_strtod
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           
  7032                           ;psect for function ___xxtofl
  7033  1062                     ___xxtofl:	
  7034                           
  7035                           ;incstack = 0
  7036                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7037                           ;___xxtofl@sign stored from wreg
  7038  1062  00F8               	movwf	___xxtofl@sign
  7039  1063  0878               	movf	___xxtofl@sign,w
  7040  1064  1D03               	btfss	3,2
  7041  1065  1FF3               	btfss	___xxtofl@val+3,7
  7042  1066  2877               	goto	l3026
  7043  1067  0970               	comf	___xxtofl@val,w
  7044  1068  00FA               	movwf	___xxtofl@arg
  7045  1069  0971               	comf	___xxtofl@val+1,w
  7046  106A  00FB               	movwf	___xxtofl@arg+1
  7047  106B  0972               	comf	___xxtofl@val+2,w
  7048  106C  00FC               	movwf	___xxtofl@arg+2
  7049  106D  0973               	comf	___xxtofl@val+3,w
  7050  106E  00FD               	movwf	___xxtofl@arg+3
  7051  106F  0AFA               	incf	___xxtofl@arg,f
  7052  1070  1903               	skipnz
  7053  1071  0AFB               	incf	___xxtofl@arg+1,f
  7054  1072  1903               	skipnz
  7055  1073  0AFC               	incf	___xxtofl@arg+2,f
  7056  1074  1903               	skipnz
  7057  1075  0AFD               	incf	___xxtofl@arg+3,f
  7058  1076  287F               	goto	l646
  7059  1077                     l3026:	
  7060  1077  0873               	movf	___xxtofl@val+3,w
  7061  1078  00FD               	movwf	___xxtofl@arg+3
  7062  1079  0872               	movf	___xxtofl@val+2,w
  7063  107A  00FC               	movwf	___xxtofl@arg+2
  7064  107B  0871               	movf	___xxtofl@val+1,w
  7065  107C  00FB               	movwf	___xxtofl@arg+1
  7066  107D  0870               	movf	___xxtofl@val,w
  7067  107E  00FA               	movwf	___xxtofl@arg
  7068  107F                     l646:	
  7069  107F  0873               	movf	___xxtofl@val+3,w
  7070  1080  0472               	iorwf	___xxtofl@val+2,w
  7071  1081  0471               	iorwf	___xxtofl@val+1,w
  7072  1082  0470               	iorwf	___xxtofl@val,w
  7073  1083  1D03               	skipz
  7074  1084  288E               	goto	l3032
  7075  1085  3000               	movlw	0
  7076  1086  00F3               	movwf	?___xxtofl+3
  7077  1087  3000               	movlw	0
  7078  1088  00F2               	movwf	?___xxtofl+2
  7079  1089  3000               	movlw	0
  7080  108A  00F1               	movwf	?___xxtofl+1
  7081  108B  3000               	movlw	0
  7082  108C  00F0               	movwf	?___xxtofl
  7083  108D  0008               	return
  7084  108E                     l3032:	
  7085  108E  3096               	movlw	150
  7086  108F  00F4               	movwf	??___xxtofl
  7087  1090  0874               	movf	??___xxtofl,w
  7088  1091  00F9               	movwf	___xxtofl@exp
  7089  1092                     l3036:	
  7090  1092  30FE               	movlw	254
  7091  1093  057D               	andwf	___xxtofl@arg+3,w
  7092  1094  1903               	btfsc	3,2
  7093  1095  28BF               	goto	l652
  7094  1096  3001               	movlw	1
  7095  1097  00F4               	movwf	??___xxtofl
  7096  1098  0874               	movf	??___xxtofl,w
  7097  1099  07F9               	addwf	___xxtofl@exp,f
  7098  109A  3001               	movlw	1
  7099  109B                     u4985:	
  7100  109B  1003               	clrc
  7101  109C  0CFD               	rrf	___xxtofl@arg+3,f
  7102  109D  0CFC               	rrf	___xxtofl@arg+2,f
  7103  109E  0CFB               	rrf	___xxtofl@arg+1,f
  7104  109F  0CFA               	rrf	___xxtofl@arg,f
  7105  10A0  3EFF               	addlw	-1
  7106  10A1  1D03               	skipz
  7107  10A2  289B               	goto	u4985
  7108  10A3  2892               	goto	l3036
  7109  10A4                     l3038:	
  7110  10A4  3001               	movlw	1
  7111  10A5  00F4               	movwf	??___xxtofl
  7112  10A6  0874               	movf	??___xxtofl,w
  7113  10A7  07F9               	addwf	___xxtofl@exp,f
  7114  10A8  3001               	movlw	1
  7115  10A9  07FA               	addwf	___xxtofl@arg,f
  7116  10AA  3000               	movlw	0
  7117  10AB  1803               	skipnc
  7118  10AC  3001               	movlw	1
  7119  10AD  07FB               	addwf	___xxtofl@arg+1,f
  7120  10AE  3000               	movlw	0
  7121  10AF  1803               	skipnc
  7122  10B0  3001               	movlw	1
  7123  10B1  07FC               	addwf	___xxtofl@arg+2,f
  7124  10B2  3000               	movlw	0
  7125  10B3  1803               	skipnc
  7126  10B4  3001               	movlw	1
  7127  10B5  07FD               	addwf	___xxtofl@arg+3,f
  7128  10B6  3001               	movlw	1
  7129  10B7                     u5005:	
  7130  10B7  1003               	clrc
  7131  10B8  0CFD               	rrf	___xxtofl@arg+3,f
  7132  10B9  0CFC               	rrf	___xxtofl@arg+2,f
  7133  10BA  0CFB               	rrf	___xxtofl@arg+1,f
  7134  10BB  0CFA               	rrf	___xxtofl@arg,f
  7135  10BC  3EFF               	addlw	-1
  7136  10BD  1D03               	skipz
  7137  10BE  28B7               	goto	u5005
  7138  10BF                     l652:	
  7139  10BF  30FF               	movlw	255
  7140  10C0  057D               	andwf	___xxtofl@arg+3,w
  7141  10C1  1903               	btfsc	3,2
  7142  10C2  28D3               	goto	l3046
  7143  10C3  28A4               	goto	l3038
  7144  10C4                     l3048:	
  7145  10C4  3002               	movlw	2
  7146  10C5  0279               	subwf	___xxtofl@exp,w
  7147  10C6  1C03               	btfss	3,0
  7148  10C7  28D5               	goto	l659
  7149  10C8  3001               	movlw	1
  7150  10C9  02F9               	subwf	___xxtofl@exp,f
  7151  10CA  3001               	movlw	1
  7152  10CB  00F4               	movwf	??___xxtofl
  7153  10CC                     u5025:	
  7154  10CC  1003               	clrc
  7155  10CD  0DFA               	rlf	___xxtofl@arg,f
  7156  10CE  0DFB               	rlf	___xxtofl@arg+1,f
  7157  10CF  0DFC               	rlf	___xxtofl@arg+2,f
  7158  10D0  0DFD               	rlf	___xxtofl@arg+3,f
  7159  10D1  0BF4               	decfsz	??___xxtofl,f
  7160  10D2  28CC               	goto	u5025
  7161  10D3                     l3046:	
  7162  10D3  1FFC               	btfss	___xxtofl@arg+2,7
  7163  10D4  28C4               	goto	l3048
  7164  10D5                     l659:	
  7165  10D5  1879               	btfsc	___xxtofl@exp,0
  7166  10D6  28DF               	goto	l660
  7167  10D7  30FF               	movlw	255
  7168  10D8  05FA               	andwf	___xxtofl@arg,f
  7169  10D9  30FF               	movlw	255
  7170  10DA  05FB               	andwf	___xxtofl@arg+1,f
  7171  10DB  307F               	movlw	127
  7172  10DC  05FC               	andwf	___xxtofl@arg+2,f
  7173  10DD  30FF               	movlw	255
  7174  10DE  05FD               	andwf	___xxtofl@arg+3,f
  7175  10DF                     l660:	
  7176  10DF  1003               	clrc
  7177  10E0  0CF9               	rrf	___xxtofl@exp,f
  7178  10E1  0879               	movf	___xxtofl@exp,w
  7179  10E2  00F4               	movwf	??___xxtofl
  7180  10E3  01F5               	clrf	??___xxtofl+1
  7181  10E4  01F6               	clrf	??___xxtofl+2
  7182  10E5  01F7               	clrf	??___xxtofl+3
  7183  10E6  3018               	movlw	24
  7184  10E7                     u5065:	
  7185  10E7  1003               	clrc
  7186  10E8  0DF4               	rlf	??___xxtofl,f
  7187  10E9  0DF5               	rlf	??___xxtofl+1,f
  7188  10EA  0DF6               	rlf	??___xxtofl+2,f
  7189  10EB  0DF7               	rlf	??___xxtofl+3,f
  7190  10EC  3EFF               	addlw	-1
  7191  10ED  1D03               	skipz
  7192  10EE  28E7               	goto	u5065
  7193  10EF  0874               	movf	??___xxtofl,w
  7194  10F0  04FA               	iorwf	___xxtofl@arg,f
  7195  10F1  0875               	movf	??___xxtofl+1,w
  7196  10F2  04FB               	iorwf	___xxtofl@arg+1,f
  7197  10F3  0876               	movf	??___xxtofl+2,w
  7198  10F4  04FC               	iorwf	___xxtofl@arg+2,f
  7199  10F5  0877               	movf	??___xxtofl+3,w
  7200  10F6  04FD               	iorwf	___xxtofl@arg+3,f
  7201  10F7  0878               	movf	___xxtofl@sign,w
  7202  10F8  1D03               	btfss	3,2
  7203  10F9  1FF3               	btfss	___xxtofl@val+3,7
  7204  10FA  28FC               	goto	l3060
  7205  10FB  17FD               	bsf	___xxtofl@arg+3,7
  7206  10FC                     l3060:	
  7207  10FC  087D               	movf	___xxtofl@arg+3,w
  7208  10FD  00F3               	movwf	?___xxtofl+3
  7209  10FE  087C               	movf	___xxtofl@arg+2,w
  7210  10FF  00F2               	movwf	?___xxtofl+2
  7211  1100  087B               	movf	___xxtofl@arg+1,w
  7212  1101  00F1               	movwf	?___xxtofl+1
  7213  1102  087A               	movf	___xxtofl@arg,w
  7214  1103  00F0               	movwf	?___xxtofl
  7215  1104  0008               	return
  7216  1105                     __end_of___xxtofl:	
  7217                           
  7218                           	psect	text24
  7219  1D71                     __ptext24:	
  7220 ;; *************** function ___lmul *****************
  7221 ;; Defined at:
  7222 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  multiplier      4    0[COMMON] unsigned long 
  7225 ;;  multiplicand    4    4[COMMON] unsigned long 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  product         4    9[COMMON] unsigned long 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  4    0[COMMON] unsigned long 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7237 ;;      Params:         8       0       0       0       0
  7238 ;;      Locals:         4       0       0       0       0
  7239 ;;      Temps:          1       0       0       0       0
  7240 ;;      Totals:        13       0       0       0       0
  7241 ;;Total ram usage:       13 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; This function calls:
  7244 ;;		Nothing
  7245 ;; This function is called by:
  7246 ;;		_strtod
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           
  7251                           ;psect for function ___lmul
  7252  1D71                     ___lmul:	
  7253                           
  7254                           ;incstack = 0
  7255                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7256  1D71  3000               	movlw	0
  7257  1D72  00FC               	movwf	___lmul@product+3
  7258  1D73  3000               	movlw	0
  7259  1D74  00FB               	movwf	___lmul@product+2
  7260  1D75  3000               	movlw	0
  7261  1D76  00FA               	movwf	___lmul@product+1
  7262  1D77  3000               	movlw	0
  7263  1D78  00F9               	movwf	___lmul@product
  7264  1D79                     l2348:	
  7265  1D79  1C70               	btfss	___lmul@multiplier,0
  7266  1D7A  2D8F               	goto	l2352
  7267  1D7B  0874               	movf	___lmul@multiplicand,w
  7268  1D7C  07F9               	addwf	___lmul@product,f
  7269  1D7D  0875               	movf	___lmul@multiplicand+1,w
  7270  1D7E  1103               	clrz
  7271  1D7F  1803               	skipnc
  7272  1D80  3E01               	addlw	1
  7273  1D81  1D03               	btfss	3,2
  7274  1D82  07FA               	addwf	___lmul@product+1,f
  7275  1D83  0876               	movf	___lmul@multiplicand+2,w
  7276  1D84  1103               	clrz
  7277  1D85  1803               	skipnc
  7278  1D86  3E01               	addlw	1
  7279  1D87  1D03               	btfss	3,2
  7280  1D88  07FB               	addwf	___lmul@product+2,f
  7281  1D89  0877               	movf	___lmul@multiplicand+3,w
  7282  1D8A  1103               	clrz
  7283  1D8B  1803               	skipnc
  7284  1D8C  3E01               	addlw	1
  7285  1D8D  1D03               	btfss	3,2
  7286  1D8E  07FC               	addwf	___lmul@product+3,f
  7287  1D8F                     l2352:	
  7288  1D8F  3001               	movlw	1
  7289  1D90  00F8               	movwf	??___lmul
  7290  1D91                     u3345:	
  7291  1D91  1003               	clrc
  7292  1D92  0DF4               	rlf	___lmul@multiplicand,f
  7293  1D93  0DF5               	rlf	___lmul@multiplicand+1,f
  7294  1D94  0DF6               	rlf	___lmul@multiplicand+2,f
  7295  1D95  0DF7               	rlf	___lmul@multiplicand+3,f
  7296  1D96  0BF8               	decfsz	??___lmul,f
  7297  1D97  2D91               	goto	u3345
  7298  1D98  3001               	movlw	1
  7299  1D99                     u3355:	
  7300  1D99  1003               	clrc
  7301  1D9A  0CF3               	rrf	___lmul@multiplier+3,f
  7302  1D9B  0CF2               	rrf	___lmul@multiplier+2,f
  7303  1D9C  0CF1               	rrf	___lmul@multiplier+1,f
  7304  1D9D  0CF0               	rrf	___lmul@multiplier,f
  7305  1D9E  3EFF               	addlw	-1
  7306  1D9F  1D03               	skipz
  7307  1DA0  2D99               	goto	u3355
  7308  1DA1  0873               	movf	___lmul@multiplier+3,w
  7309  1DA2  0472               	iorwf	___lmul@multiplier+2,w
  7310  1DA3  0471               	iorwf	___lmul@multiplier+1,w
  7311  1DA4  0470               	iorwf	___lmul@multiplier,w
  7312  1DA5  1D03               	skipz
  7313  1DA6  2D79               	goto	l2348
  7314  1DA7  087C               	movf	___lmul@product+3,w
  7315  1DA8  00F3               	movwf	?___lmul+3
  7316  1DA9  087B               	movf	___lmul@product+2,w
  7317  1DAA  00F2               	movwf	?___lmul+2
  7318  1DAB  087A               	movf	___lmul@product+1,w
  7319  1DAC  00F1               	movwf	?___lmul+1
  7320  1DAD  0879               	movf	___lmul@product,w
  7321  1DAE  00F0               	movwf	?___lmul
  7322  1DAF  0008               	return
  7323  1DB0                     __end_of___lmul:	
  7324                           
  7325                           	psect	text25
  7326  0006                     __ptext25:	
  7327 ;; *************** function ___flneg *****************
  7328 ;; Defined at:
  7329 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  f1              4    0[COMMON] unsigned long 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  4    0[COMMON] unsigned long 
  7336 ;; Registers used:
  7337 ;;		wreg
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7343 ;;      Params:         4       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0
  7345 ;;      Temps:          0       0       0       0       0
  7346 ;;      Totals:         4       0       0       0       0
  7347 ;;Total ram usage:        4 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_printf
  7353 ;;		_strtod
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           
  7358                           ;psect for function ___flneg
  7359  0006                     ___flneg:	
  7360                           
  7361                           ;incstack = 0
  7362                           ; Regs used in ___flneg: [wreg]
  7363  0006  0873               	movf	___flneg@f1+3,w
  7364  0007  0472               	iorwf	___flneg@f1+2,w
  7365  0008  0471               	iorwf	___flneg@f1+1,w
  7366  0009  0470               	iorwf	___flneg@f1,w
  7367  000A  1903               	skipnz
  7368  000B  0008               	return
  7369  000C  3080               	movlw	128
  7370  000D  06F3               	xorwf	___flneg@f1+3,f
  7371  000E  0008               	return
  7372  000F                     __end_of___flneg:	
  7373                           
  7374                           	psect	text26
  7375  09A2                     __ptext26:	
  7376 ;; *************** function ___flmul *****************
  7377 ;; Defined at:
  7378 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  b               4    4[BANK0 ] unsigned long 
  7381 ;;  a               4    8[BANK0 ] unsigned long 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  prod            4   24[BANK0 ] struct .
  7384 ;;  grs             4   18[BANK0 ] unsigned long 
  7385 ;;  temp            2   28[BANK0 ] struct .
  7386 ;;  bexp            1   23[BANK0 ] unsigned char 
  7387 ;;  aexp            1   22[BANK0 ] unsigned char 
  7388 ;;  sign            1   17[BANK0 ] unsigned char 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  4    4[BANK0 ] unsigned char 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7398 ;;      Params:         0       8       0       0       0
  7399 ;;      Locals:         0      13       0       0       0
  7400 ;;      Temps:          0       5       0       0       0
  7401 ;;      Totals:         0      26       0       0       0
  7402 ;;Total ram usage:       26 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    1
  7405 ;; This function calls:
  7406 ;;		__Umul8_16
  7407 ;; This function is called by:
  7408 ;;		_fround
  7409 ;;		_scale
  7410 ;;		_printf
  7411 ;;		_strtod
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           
  7416                           ;psect for function ___flmul
  7417  09A2                     ___flmul:	
  7418                           
  7419                           ;incstack = 0
  7420                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7421  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  7422  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  7423  09A4  0827               	movf	___flmul@b+3,w
  7424  09A5  3980               	andlw	128
  7425  09A6  00AC               	movwf	??___flmul
  7426  09A7  082C               	movf	??___flmul,w
  7427  09A8  00B1               	movwf	___flmul@sign
  7428  09A9  0827               	movf	___flmul@b+3,w
  7429  09AA  00AC               	movwf	??___flmul
  7430  09AB  072C               	addwf	??___flmul,w
  7431  09AC  00AD               	movwf	??___flmul+1
  7432  09AD  082D               	movf	??___flmul+1,w
  7433  09AE  00B7               	movwf	___flmul@bexp
  7434  09AF  1BA6               	btfsc	___flmul@b+2,7
  7435  09B0  1437               	bsf	___flmul@bexp,0
  7436  09B1  0837               	movf	___flmul@bexp,w
  7437  09B2  1903               	btfsc	3,2
  7438  09B3  29C1               	goto	l2896
  7439  09B4  0A37               	incf	___flmul@bexp,w
  7440  09B5  1D03               	btfss	3,2
  7441  09B6  29BF               	goto	l2894
  7442  09B7  3000               	movlw	0
  7443  09B8  00A7               	movwf	___flmul@b+3
  7444  09B9  3000               	movlw	0
  7445  09BA  00A6               	movwf	___flmul@b+2
  7446  09BB  3000               	movlw	0
  7447  09BC  00A5               	movwf	___flmul@b+1
  7448  09BD  3000               	movlw	0
  7449  09BE  00A4               	movwf	___flmul@b
  7450  09BF                     l2894:	
  7451  09BF  17A6               	bsf	___flmul@b+2,7
  7452  09C0  29C9               	goto	l2898
  7453  09C1                     l2896:	
  7454  09C1  3000               	movlw	0
  7455  09C2  00A7               	movwf	___flmul@b+3
  7456  09C3  3000               	movlw	0
  7457  09C4  00A6               	movwf	___flmul@b+2
  7458  09C5  3000               	movlw	0
  7459  09C6  00A5               	movwf	___flmul@b+1
  7460  09C7  3000               	movlw	0
  7461  09C8  00A4               	movwf	___flmul@b
  7462  09C9                     l2898:	
  7463  09C9  082B               	movf	___flmul@a+3,w
  7464  09CA  3980               	andlw	128
  7465  09CB  00AC               	movwf	??___flmul
  7466  09CC  082C               	movf	??___flmul,w
  7467  09CD  06B1               	xorwf	___flmul@sign,f
  7468  09CE  082B               	movf	___flmul@a+3,w
  7469  09CF  00AC               	movwf	??___flmul
  7470  09D0  072C               	addwf	??___flmul,w
  7471  09D1  00AD               	movwf	??___flmul+1
  7472  09D2  082D               	movf	??___flmul+1,w
  7473  09D3  00B6               	movwf	___flmul@aexp
  7474  09D4  1BAA               	btfsc	___flmul@a+2,7
  7475  09D5  1436               	bsf	___flmul@aexp,0
  7476  09D6  0836               	movf	___flmul@aexp,w
  7477  09D7  1903               	btfsc	3,2
  7478  09D8  29E6               	goto	l2914
  7479  09D9  0A36               	incf	___flmul@aexp,w
  7480  09DA  1D03               	btfss	3,2
  7481  09DB  29E4               	goto	l2912
  7482  09DC  3000               	movlw	0
  7483  09DD  00AB               	movwf	___flmul@a+3
  7484  09DE  3000               	movlw	0
  7485  09DF  00AA               	movwf	___flmul@a+2
  7486  09E0  3000               	movlw	0
  7487  09E1  00A9               	movwf	___flmul@a+1
  7488  09E2  3000               	movlw	0
  7489  09E3  00A8               	movwf	___flmul@a
  7490  09E4                     l2912:	
  7491  09E4  17AA               	bsf	___flmul@a+2,7
  7492  09E5  29EE               	goto	l2916
  7493  09E6                     l2914:	
  7494  09E6  3000               	movlw	0
  7495  09E7  00AB               	movwf	___flmul@a+3
  7496  09E8  3000               	movlw	0
  7497  09E9  00AA               	movwf	___flmul@a+2
  7498  09EA  3000               	movlw	0
  7499  09EB  00A9               	movwf	___flmul@a+1
  7500  09EC  3000               	movlw	0
  7501  09ED  00A8               	movwf	___flmul@a
  7502  09EE                     l2916:	
  7503  09EE  0836               	movf	___flmul@aexp,w
  7504  09EF  1D03               	btfss	3,2
  7505  09F0  0837               	movf	___flmul@bexp,w
  7506  09F1  1D03               	btfss	3,2
  7507  09F2  29FC               	goto	l2924
  7508  09F3  3000               	movlw	0
  7509  09F4  00A7               	movwf	?___flmul+3
  7510  09F5  3000               	movlw	0
  7511  09F6  00A6               	movwf	?___flmul+2
  7512  09F7  3000               	movlw	0
  7513  09F8  00A5               	movwf	?___flmul+1
  7514  09F9  3000               	movlw	0
  7515  09FA  00A4               	movwf	?___flmul
  7516  09FB  0008               	return
  7517  09FC                     l2924:	
  7518  09FC  0824               	movf	___flmul@b,w
  7519  09FD  00AC               	movwf	??___flmul
  7520  09FE  082C               	movf	??___flmul,w
  7521  09FF  00F0               	movwf	__Umul8_16@multiplicand
  7522  0A00  082A               	movf	___flmul@a+2,w
  7523  0A01  120A  118A  200F  120A  158A  	fcall	__Umul8_16
  7524  0A06  0871               	movf	?__Umul8_16+1,w
  7525  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  7526  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  7527  0A09  00BD               	movwf	___flmul@temp+1
  7528  0A0A  0870               	movf	?__Umul8_16,w
  7529  0A0B  00BC               	movwf	___flmul@temp
  7530  0A0C  083C               	movf	___flmul@temp,w
  7531  0A0D  00AC               	movwf	??___flmul
  7532  0A0E  01AD               	clrf	??___flmul+1
  7533  0A0F  01AE               	clrf	??___flmul+2
  7534  0A10  01AF               	clrf	??___flmul+3
  7535  0A11  082F               	movf	??___flmul+3,w
  7536  0A12  00B5               	movwf	___flmul@grs+3
  7537  0A13  082E               	movf	??___flmul+2,w
  7538  0A14  00B4               	movwf	___flmul@grs+2
  7539  0A15  082D               	movf	??___flmul+1,w
  7540  0A16  00B3               	movwf	___flmul@grs+1
  7541  0A17  082C               	movf	??___flmul,w
  7542  0A18  00B2               	movwf	___flmul@grs
  7543  0A19  083D               	movf	___flmul@temp+1,w
  7544  0A1A  00AC               	movwf	??___flmul
  7545  0A1B  01AD               	clrf	??___flmul+1
  7546  0A1C  01AE               	clrf	??___flmul+2
  7547  0A1D  01AF               	clrf	??___flmul+3
  7548  0A1E  082F               	movf	??___flmul+3,w
  7549  0A1F  00BB               	movwf	___flmul@prod+3
  7550  0A20  082E               	movf	??___flmul+2,w
  7551  0A21  00BA               	movwf	___flmul@prod+2
  7552  0A22  082D               	movf	??___flmul+1,w
  7553  0A23  00B9               	movwf	___flmul@prod+1
  7554  0A24  082C               	movf	??___flmul,w
  7555  0A25  00B8               	movwf	___flmul@prod
  7556  0A26  0825               	movf	___flmul@b+1,w
  7557  0A27  00AC               	movwf	??___flmul
  7558  0A28  082C               	movf	??___flmul,w
  7559  0A29  00F0               	movwf	__Umul8_16@multiplicand
  7560  0A2A  0829               	movf	___flmul@a+1,w
  7561  0A2B  120A  118A  200F  120A  158A  	fcall	__Umul8_16
  7562  0A30  0871               	movf	?__Umul8_16+1,w
  7563  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  7564  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  7565  0A33  00BD               	movwf	___flmul@temp+1
  7566  0A34  0870               	movf	?__Umul8_16,w
  7567  0A35  00BC               	movwf	___flmul@temp
  7568  0A36  083C               	movf	___flmul@temp,w
  7569  0A37  00AC               	movwf	??___flmul
  7570  0A38  01AD               	clrf	??___flmul+1
  7571  0A39  01AE               	clrf	??___flmul+2
  7572  0A3A  01AF               	clrf	??___flmul+3
  7573  0A3B  082C               	movf	??___flmul,w
  7574  0A3C  07B2               	addwf	___flmul@grs,f
  7575  0A3D  082D               	movf	??___flmul+1,w
  7576  0A3E  1103               	clrz
  7577  0A3F  1803               	skipnc
  7578  0A40  3E01               	addlw	1
  7579  0A41  1D03               	btfss	3,2
  7580  0A42  07B3               	addwf	___flmul@grs+1,f
  7581  0A43  082E               	movf	??___flmul+2,w
  7582  0A44  1103               	clrz
  7583  0A45  1803               	skipnc
  7584  0A46  3E01               	addlw	1
  7585  0A47  1D03               	btfss	3,2
  7586  0A48  07B4               	addwf	___flmul@grs+2,f
  7587  0A49  082F               	movf	??___flmul+3,w
  7588  0A4A  1103               	clrz
  7589  0A4B  1803               	skipnc
  7590  0A4C  3E01               	addlw	1
  7591  0A4D  1D03               	btfss	3,2
  7592  0A4E  07B5               	addwf	___flmul@grs+3,f
  7593  0A4F  083D               	movf	___flmul@temp+1,w
  7594  0A50  00AC               	movwf	??___flmul
  7595  0A51  01AD               	clrf	??___flmul+1
  7596  0A52  01AE               	clrf	??___flmul+2
  7597  0A53  01AF               	clrf	??___flmul+3
  7598  0A54  082C               	movf	??___flmul,w
  7599  0A55  07B8               	addwf	___flmul@prod,f
  7600  0A56  082D               	movf	??___flmul+1,w
  7601  0A57  1103               	clrz
  7602  0A58  1803               	skipnc
  7603  0A59  3E01               	addlw	1
  7604  0A5A  1D03               	btfss	3,2
  7605  0A5B  07B9               	addwf	___flmul@prod+1,f
  7606  0A5C  082E               	movf	??___flmul+2,w
  7607  0A5D  1103               	clrz
  7608  0A5E  1803               	skipnc
  7609  0A5F  3E01               	addlw	1
  7610  0A60  1D03               	btfss	3,2
  7611  0A61  07BA               	addwf	___flmul@prod+2,f
  7612  0A62  082F               	movf	??___flmul+3,w
  7613  0A63  1103               	clrz
  7614  0A64  1803               	skipnc
  7615  0A65  3E01               	addlw	1
  7616  0A66  1D03               	btfss	3,2
  7617  0A67  07BB               	addwf	___flmul@prod+3,f
  7618  0A68  0826               	movf	___flmul@b+2,w
  7619  0A69  00AC               	movwf	??___flmul
  7620  0A6A  082C               	movf	??___flmul,w
  7621  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  7622  0A6C  0828               	movf	___flmul@a,w
  7623  0A6D  120A  118A  200F  120A  158A  	fcall	__Umul8_16
  7624  0A72  0871               	movf	?__Umul8_16+1,w
  7625  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  7626  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  7627  0A75  00BD               	movwf	___flmul@temp+1
  7628  0A76  0870               	movf	?__Umul8_16,w
  7629  0A77  00BC               	movwf	___flmul@temp
  7630  0A78  083C               	movf	___flmul@temp,w
  7631  0A79  00AC               	movwf	??___flmul
  7632  0A7A  01AD               	clrf	??___flmul+1
  7633  0A7B  01AE               	clrf	??___flmul+2
  7634  0A7C  01AF               	clrf	??___flmul+3
  7635  0A7D  082C               	movf	??___flmul,w
  7636  0A7E  07B2               	addwf	___flmul@grs,f
  7637  0A7F  082D               	movf	??___flmul+1,w
  7638  0A80  1103               	clrz
  7639  0A81  1803               	skipnc
  7640  0A82  3E01               	addlw	1
  7641  0A83  1D03               	btfss	3,2
  7642  0A84  07B3               	addwf	___flmul@grs+1,f
  7643  0A85  082E               	movf	??___flmul+2,w
  7644  0A86  1103               	clrz
  7645  0A87  1803               	skipnc
  7646  0A88  3E01               	addlw	1
  7647  0A89  1D03               	btfss	3,2
  7648  0A8A  07B4               	addwf	___flmul@grs+2,f
  7649  0A8B  082F               	movf	??___flmul+3,w
  7650  0A8C  1103               	clrz
  7651  0A8D  1803               	skipnc
  7652  0A8E  3E01               	addlw	1
  7653  0A8F  1D03               	btfss	3,2
  7654  0A90  07B5               	addwf	___flmul@grs+3,f
  7655  0A91  083D               	movf	___flmul@temp+1,w
  7656  0A92  00AC               	movwf	??___flmul
  7657  0A93  01AD               	clrf	??___flmul+1
  7658  0A94  01AE               	clrf	??___flmul+2
  7659  0A95  01AF               	clrf	??___flmul+3
  7660  0A96  082C               	movf	??___flmul,w
  7661  0A97  07B8               	addwf	___flmul@prod,f
  7662  0A98  082D               	movf	??___flmul+1,w
  7663  0A99  1103               	clrz
  7664  0A9A  1803               	skipnc
  7665  0A9B  3E01               	addlw	1
  7666  0A9C  1D03               	btfss	3,2
  7667  0A9D  07B9               	addwf	___flmul@prod+1,f
  7668  0A9E  082E               	movf	??___flmul+2,w
  7669  0A9F  1103               	clrz
  7670  0AA0  1803               	skipnc
  7671  0AA1  3E01               	addlw	1
  7672  0AA2  1D03               	btfss	3,2
  7673  0AA3  07BA               	addwf	___flmul@prod+2,f
  7674  0AA4  082F               	movf	??___flmul+3,w
  7675  0AA5  1103               	clrz
  7676  0AA6  1803               	skipnc
  7677  0AA7  3E01               	addlw	1
  7678  0AA8  1D03               	btfss	3,2
  7679  0AA9  07BB               	addwf	___flmul@prod+3,f
  7680  0AAA  3008               	movlw	8
  7681  0AAB  00AC               	movwf	??___flmul
  7682  0AAC                     u4705:	
  7683  0AAC  1003               	clrc
  7684  0AAD  0DB2               	rlf	___flmul@grs,f
  7685  0AAE  0DB3               	rlf	___flmul@grs+1,f
  7686  0AAF  0DB4               	rlf	___flmul@grs+2,f
  7687  0AB0  0DB5               	rlf	___flmul@grs+3,f
  7688  0AB1  0BAC               	decfsz	??___flmul,f
  7689  0AB2  2AAC               	goto	u4705
  7690  0AB3  0825               	movf	___flmul@b+1,w
  7691  0AB4  00AC               	movwf	??___flmul
  7692  0AB5  082C               	movf	??___flmul,w
  7693  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  7694  0AB7  0828               	movf	___flmul@a,w
  7695  0AB8  120A  118A  200F  120A  158A  	fcall	__Umul8_16
  7696  0ABD  0871               	movf	?__Umul8_16+1,w
  7697  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  7698  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  7699  0AC0  00BD               	movwf	___flmul@temp+1
  7700  0AC1  0870               	movf	?__Umul8_16,w
  7701  0AC2  00BC               	movwf	___flmul@temp
  7702  0AC3  083C               	movf	___flmul@temp,w
  7703  0AC4  00AC               	movwf	??___flmul
  7704  0AC5  083D               	movf	___flmul@temp+1,w
  7705  0AC6  00AD               	movwf	??___flmul+1
  7706  0AC7  01AE               	clrf	??___flmul+2
  7707  0AC8  01AF               	clrf	??___flmul+3
  7708  0AC9  082C               	movf	??___flmul,w
  7709  0ACA  07B2               	addwf	___flmul@grs,f
  7710  0ACB  082D               	movf	??___flmul+1,w
  7711  0ACC  1103               	clrz
  7712  0ACD  1803               	skipnc
  7713  0ACE  3E01               	addlw	1
  7714  0ACF  1D03               	btfss	3,2
  7715  0AD0  07B3               	addwf	___flmul@grs+1,f
  7716  0AD1  082E               	movf	??___flmul+2,w
  7717  0AD2  1103               	clrz
  7718  0AD3  1803               	skipnc
  7719  0AD4  3E01               	addlw	1
  7720  0AD5  1D03               	btfss	3,2
  7721  0AD6  07B4               	addwf	___flmul@grs+2,f
  7722  0AD7  082F               	movf	??___flmul+3,w
  7723  0AD8  1103               	clrz
  7724  0AD9  1803               	skipnc
  7725  0ADA  3E01               	addlw	1
  7726  0ADB  1D03               	btfss	3,2
  7727  0ADC  07B5               	addwf	___flmul@grs+3,f
  7728  0ADD  0824               	movf	___flmul@b,w
  7729  0ADE  00AC               	movwf	??___flmul
  7730  0ADF  082C               	movf	??___flmul,w
  7731  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  7732  0AE1  0829               	movf	___flmul@a+1,w
  7733  0AE2  120A  118A  200F  120A  158A  	fcall	__Umul8_16
  7734  0AE7  0871               	movf	?__Umul8_16+1,w
  7735  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  7736  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  7737  0AEA  00BD               	movwf	___flmul@temp+1
  7738  0AEB  0870               	movf	?__Umul8_16,w
  7739  0AEC  00BC               	movwf	___flmul@temp
  7740  0AED  083C               	movf	___flmul@temp,w
  7741  0AEE  00AC               	movwf	??___flmul
  7742  0AEF  083D               	movf	___flmul@temp+1,w
  7743  0AF0  00AD               	movwf	??___flmul+1
  7744  0AF1  01AE               	clrf	??___flmul+2
  7745  0AF2  01AF               	clrf	??___flmul+3
  7746  0AF3  082C               	movf	??___flmul,w
  7747  0AF4  07B2               	addwf	___flmul@grs,f
  7748  0AF5  082D               	movf	??___flmul+1,w
  7749  0AF6  1103               	clrz
  7750  0AF7  1803               	skipnc
  7751  0AF8  3E01               	addlw	1
  7752  0AF9  1D03               	btfss	3,2
  7753  0AFA  07B3               	addwf	___flmul@grs+1,f
  7754  0AFB  082E               	movf	??___flmul+2,w
  7755  0AFC  1103               	clrz
  7756  0AFD  1803               	skipnc
  7757  0AFE  3E01               	addlw	1
  7758  0AFF  1D03               	btfss	3,2
  7759  0B00  07B4               	addwf	___flmul@grs+2,f
  7760  0B01  082F               	movf	??___flmul+3,w
  7761  0B02  1103               	clrz
  7762  0B03  1803               	skipnc
  7763  0B04  3E01               	addlw	1
  7764  0B05  1D03               	btfss	3,2
  7765  0B06  07B5               	addwf	___flmul@grs+3,f
  7766  0B07  3008               	movlw	8
  7767  0B08  00AC               	movwf	??___flmul
  7768  0B09                     u4735:	
  7769  0B09  1003               	clrc
  7770  0B0A  0DB2               	rlf	___flmul@grs,f
  7771  0B0B  0DB3               	rlf	___flmul@grs+1,f
  7772  0B0C  0DB4               	rlf	___flmul@grs+2,f
  7773  0B0D  0DB5               	rlf	___flmul@grs+3,f
  7774  0B0E  0BAC               	decfsz	??___flmul,f
  7775  0B0F  2B09               	goto	u4735
  7776  0B10  0824               	movf	___flmul@b,w
  7777  0B11  00AC               	movwf	??___flmul
  7778  0B12  082C               	movf	??___flmul,w
  7779  0B13  00F0               	movwf	__Umul8_16@multiplicand
  7780  0B14  0828               	movf	___flmul@a,w
  7781  0B15  120A  118A  200F  120A  158A  	fcall	__Umul8_16
  7782  0B1A  0871               	movf	?__Umul8_16+1,w
  7783  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  7784  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  7785  0B1D  00BD               	movwf	___flmul@temp+1
  7786  0B1E  0870               	movf	?__Umul8_16,w
  7787  0B1F  00BC               	movwf	___flmul@temp
  7788  0B20  083C               	movf	___flmul@temp,w
  7789  0B21  00AC               	movwf	??___flmul
  7790  0B22  083D               	movf	___flmul@temp+1,w
  7791  0B23  00AD               	movwf	??___flmul+1
  7792  0B24  01AE               	clrf	??___flmul+2
  7793  0B25  01AF               	clrf	??___flmul+3
  7794  0B26  082C               	movf	??___flmul,w
  7795  0B27  07B2               	addwf	___flmul@grs,f
  7796  0B28  082D               	movf	??___flmul+1,w
  7797  0B29  1103               	clrz
  7798  0B2A  1803               	skipnc
  7799  0B2B  3E01               	addlw	1
  7800  0B2C  1D03               	btfss	3,2
  7801  0B2D  07B3               	addwf	___flmul@grs+1,f
  7802  0B2E  082E               	movf	??___flmul+2,w
  7803  0B2F  1103               	clrz
  7804  0B30  1803               	skipnc
  7805  0B31  3E01               	addlw	1
  7806  0B32  1D03               	btfss	3,2
  7807  0B33  07B4               	addwf	___flmul@grs+2,f
  7808  0B34  082F               	movf	??___flmul+3,w
  7809  0B35  1103               	clrz
  7810  0B36  1803               	skipnc
  7811  0B37  3E01               	addlw	1
  7812  0B38  1D03               	btfss	3,2
  7813  0B39  07B5               	addwf	___flmul@grs+3,f
  7814  0B3A  0825               	movf	___flmul@b+1,w
  7815  0B3B  00AC               	movwf	??___flmul
  7816  0B3C  082C               	movf	??___flmul,w
  7817  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  7818  0B3E  082A               	movf	___flmul@a+2,w
  7819  0B3F  120A  118A  200F  120A  158A  	fcall	__Umul8_16
  7820  0B44  0871               	movf	?__Umul8_16+1,w
  7821  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  7822  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  7823  0B47  00BD               	movwf	___flmul@temp+1
  7824  0B48  0870               	movf	?__Umul8_16,w
  7825  0B49  00BC               	movwf	___flmul@temp
  7826  0B4A  083C               	movf	___flmul@temp,w
  7827  0B4B  00AC               	movwf	??___flmul
  7828  0B4C  083D               	movf	___flmul@temp+1,w
  7829  0B4D  00AD               	movwf	??___flmul+1
  7830  0B4E  01AE               	clrf	??___flmul+2
  7831  0B4F  01AF               	clrf	??___flmul+3
  7832  0B50  082C               	movf	??___flmul,w
  7833  0B51  07B8               	addwf	___flmul@prod,f
  7834  0B52  082D               	movf	??___flmul+1,w
  7835  0B53  1103               	clrz
  7836  0B54  1803               	skipnc
  7837  0B55  3E01               	addlw	1
  7838  0B56  1D03               	btfss	3,2
  7839  0B57  07B9               	addwf	___flmul@prod+1,f
  7840  0B58  082E               	movf	??___flmul+2,w
  7841  0B59  1103               	clrz
  7842  0B5A  1803               	skipnc
  7843  0B5B  3E01               	addlw	1
  7844  0B5C  1D03               	btfss	3,2
  7845  0B5D  07BA               	addwf	___flmul@prod+2,f
  7846  0B5E  082F               	movf	??___flmul+3,w
  7847  0B5F  1103               	clrz
  7848  0B60  1803               	skipnc
  7849  0B61  3E01               	addlw	1
  7850  0B62  1D03               	btfss	3,2
  7851  0B63  07BB               	addwf	___flmul@prod+3,f
  7852  0B64  0826               	movf	___flmul@b+2,w
  7853  0B65  00AC               	movwf	??___flmul
  7854  0B66  082C               	movf	??___flmul,w
  7855  0B67  00F0               	movwf	__Umul8_16@multiplicand
  7856  0B68  0829               	movf	___flmul@a+1,w
  7857  0B69  120A  118A  200F  120A  158A  	fcall	__Umul8_16
  7858  0B6E  0871               	movf	?__Umul8_16+1,w
  7859  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  7860  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  7861  0B71  00BD               	movwf	___flmul@temp+1
  7862  0B72  0870               	movf	?__Umul8_16,w
  7863  0B73  00BC               	movwf	___flmul@temp
  7864  0B74  083C               	movf	___flmul@temp,w
  7865  0B75  00AC               	movwf	??___flmul
  7866  0B76  083D               	movf	___flmul@temp+1,w
  7867  0B77  00AD               	movwf	??___flmul+1
  7868  0B78  01AE               	clrf	??___flmul+2
  7869  0B79  01AF               	clrf	??___flmul+3
  7870  0B7A  082C               	movf	??___flmul,w
  7871  0B7B  07B8               	addwf	___flmul@prod,f
  7872  0B7C  082D               	movf	??___flmul+1,w
  7873  0B7D  1103               	clrz
  7874  0B7E  1803               	skipnc
  7875  0B7F  3E01               	addlw	1
  7876  0B80  1D03               	btfss	3,2
  7877  0B81  07B9               	addwf	___flmul@prod+1,f
  7878  0B82  082E               	movf	??___flmul+2,w
  7879  0B83  1103               	clrz
  7880  0B84  1803               	skipnc
  7881  0B85  3E01               	addlw	1
  7882  0B86  1D03               	btfss	3,2
  7883  0B87  07BA               	addwf	___flmul@prod+2,f
  7884  0B88  082F               	movf	??___flmul+3,w
  7885  0B89  1103               	clrz
  7886  0B8A  1803               	skipnc
  7887  0B8B  3E01               	addlw	1
  7888  0B8C  1D03               	btfss	3,2
  7889  0B8D  07BB               	addwf	___flmul@prod+3,f
  7890  0B8E  0826               	movf	___flmul@b+2,w
  7891  0B8F  00AC               	movwf	??___flmul
  7892  0B90  082C               	movf	??___flmul,w
  7893  0B91  00F0               	movwf	__Umul8_16@multiplicand
  7894  0B92  082A               	movf	___flmul@a+2,w
  7895  0B93  120A  118A  200F  120A  158A  	fcall	__Umul8_16
  7896  0B98  0871               	movf	?__Umul8_16+1,w
  7897  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  7898  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  7899  0B9B  00BD               	movwf	___flmul@temp+1
  7900  0B9C  0870               	movf	?__Umul8_16,w
  7901  0B9D  00BC               	movwf	___flmul@temp
  7902  0B9E  083C               	movf	___flmul@temp,w
  7903  0B9F  00AC               	movwf	??___flmul
  7904  0BA0  083D               	movf	___flmul@temp+1,w
  7905  0BA1  00AD               	movwf	??___flmul+1
  7906  0BA2  01AE               	clrf	??___flmul+2
  7907  0BA3  01AF               	clrf	??___flmul+3
  7908  0BA4  3008               	movlw	8
  7909  0BA5                     u4775:	
  7910  0BA5  1003               	clrc
  7911  0BA6  0DAC               	rlf	??___flmul,f
  7912  0BA7  0DAD               	rlf	??___flmul+1,f
  7913  0BA8  0DAE               	rlf	??___flmul+2,f
  7914  0BA9  0DAF               	rlf	??___flmul+3,f
  7915  0BAA  3EFF               	addlw	-1
  7916  0BAB  1D03               	skipz
  7917  0BAC  2BA5               	goto	u4775
  7918  0BAD  082C               	movf	??___flmul,w
  7919  0BAE  07B8               	addwf	___flmul@prod,f
  7920  0BAF  082D               	movf	??___flmul+1,w
  7921  0BB0  1103               	clrz
  7922  0BB1  1803               	skipnc
  7923  0BB2  3E01               	addlw	1
  7924  0BB3  1D03               	btfss	3,2
  7925  0BB4  07B9               	addwf	___flmul@prod+1,f
  7926  0BB5  082E               	movf	??___flmul+2,w
  7927  0BB6  1103               	clrz
  7928  0BB7  1803               	skipnc
  7929  0BB8  3E01               	addlw	1
  7930  0BB9  1D03               	btfss	3,2
  7931  0BBA  07BA               	addwf	___flmul@prod+2,f
  7932  0BBB  082F               	movf	??___flmul+3,w
  7933  0BBC  1103               	clrz
  7934  0BBD  1803               	skipnc
  7935  0BBE  3E01               	addlw	1
  7936  0BBF  1D03               	btfss	3,2
  7937  0BC0  07BB               	addwf	___flmul@prod+3,f
  7938  0BC1  0832               	movf	___flmul@grs,w
  7939  0BC2  00AC               	movwf	??___flmul
  7940  0BC3  0833               	movf	___flmul@grs+1,w
  7941  0BC4  00AD               	movwf	??___flmul+1
  7942  0BC5  0834               	movf	___flmul@grs+2,w
  7943  0BC6  00AE               	movwf	??___flmul+2
  7944  0BC7  0835               	movf	___flmul@grs+3,w
  7945  0BC8  00AF               	movwf	??___flmul+3
  7946  0BC9  3018               	movlw	24
  7947  0BCA                     u4795:	
  7948  0BCA  1003               	clrc
  7949  0BCB  0CAF               	rrf	??___flmul+3,f
  7950  0BCC  0CAE               	rrf	??___flmul+2,f
  7951  0BCD  0CAD               	rrf	??___flmul+1,f
  7952  0BCE  0CAC               	rrf	??___flmul,f
  7953  0BCF  3EFF               	addlw	-1
  7954  0BD0  1D03               	skipz
  7955  0BD1  2BCA               	goto	u4795
  7956  0BD2  082C               	movf	??___flmul,w
  7957  0BD3  07B8               	addwf	___flmul@prod,f
  7958  0BD4  082D               	movf	??___flmul+1,w
  7959  0BD5  1103               	clrz
  7960  0BD6  1803               	skipnc
  7961  0BD7  3E01               	addlw	1
  7962  0BD8  1D03               	btfss	3,2
  7963  0BD9  07B9               	addwf	___flmul@prod+1,f
  7964  0BDA  082E               	movf	??___flmul+2,w
  7965  0BDB  1103               	clrz
  7966  0BDC  1803               	skipnc
  7967  0BDD  3E01               	addlw	1
  7968  0BDE  1D03               	btfss	3,2
  7969  0BDF  07BA               	addwf	___flmul@prod+2,f
  7970  0BE0  082F               	movf	??___flmul+3,w
  7971  0BE1  1103               	clrz
  7972  0BE2  1803               	skipnc
  7973  0BE3  3E01               	addlw	1
  7974  0BE4  1D03               	btfss	3,2
  7975  0BE5  07BB               	addwf	___flmul@prod+3,f
  7976  0BE6  3008               	movlw	8
  7977  0BE7  00AC               	movwf	??___flmul
  7978  0BE8                     u4815:	
  7979  0BE8  1003               	clrc
  7980  0BE9  0DB2               	rlf	___flmul@grs,f
  7981  0BEA  0DB3               	rlf	___flmul@grs+1,f
  7982  0BEB  0DB4               	rlf	___flmul@grs+2,f
  7983  0BEC  0DB5               	rlf	___flmul@grs+3,f
  7984  0BED  0BAC               	decfsz	??___flmul,f
  7985  0BEE  2BE8               	goto	u4815
  7986  0BEF  0837               	movf	___flmul@bexp,w
  7987  0BF0  0736               	addwf	___flmul@aexp,w
  7988  0BF1  00AC               	movwf	??___flmul
  7989  0BF2  01AD               	clrf	??___flmul+1
  7990  0BF3  0DAD               	rlf	??___flmul+1,f
  7991  0BF4  082C               	movf	??___flmul,w
  7992  0BF5  3E82               	addlw	130
  7993  0BF6  00BC               	movwf	___flmul@temp
  7994  0BF7  082D               	movf	??___flmul+1,w
  7995  0BF8  1803               	skipnc
  7996  0BF9  3E01               	addlw	1
  7997  0BFA  3EFF               	addlw	255
  7998  0BFB  00BD               	movwf	___flmul@temp+1
  7999  0BFC                     l2976:	
  8000  0BFC  1BBA               	btfsc	___flmul@prod+2,7
  8001  0BFD  2C19               	goto	l2978
  8002  0BFE  3001               	movlw	1
  8003  0BFF  00AC               	movwf	??___flmul
  8004  0C00                     u4825:	
  8005  0C00  1003               	clrc
  8006  0C01  0DB8               	rlf	___flmul@prod,f
  8007  0C02  0DB9               	rlf	___flmul@prod+1,f
  8008  0C03  0DBA               	rlf	___flmul@prod+2,f
  8009  0C04  0DBB               	rlf	___flmul@prod+3,f
  8010  0C05  0BAC               	decfsz	??___flmul,f
  8011  0C06  2C00               	goto	u4825
  8012  0C07  1BB5               	btfsc	___flmul@grs+3,7
  8013  0C08  1438               	bsf	___flmul@prod,0
  8014  0C09  3001               	movlw	1
  8015  0C0A  00AC               	movwf	??___flmul
  8016  0C0B                     u4845:	
  8017  0C0B  1003               	clrc
  8018  0C0C  0DB2               	rlf	___flmul@grs,f
  8019  0C0D  0DB3               	rlf	___flmul@grs+1,f
  8020  0C0E  0DB4               	rlf	___flmul@grs+2,f
  8021  0C0F  0DB5               	rlf	___flmul@grs+3,f
  8022  0C10  0BAC               	decfsz	??___flmul,f
  8023  0C11  2C0B               	goto	u4845
  8024  0C12  30FF               	movlw	255
  8025  0C13  07BC               	addwf	___flmul@temp,f
  8026  0C14  1803               	skipnc
  8027  0C15  0ABD               	incf	___flmul@temp+1,f
  8028  0C16  30FF               	movlw	255
  8029  0C17  07BD               	addwf	___flmul@temp+1,f
  8030  0C18  2BFC               	goto	l2976
  8031  0C19                     l2978:	
  8032  0C19  01B6               	clrf	___flmul@aexp
  8033  0C1A  1FB5               	btfss	___flmul@grs+3,7
  8034  0C1B  2C32               	goto	l2988
  8035  0C1C  30FF               	movlw	255
  8036  0C1D  0532               	andwf	___flmul@grs,w
  8037  0C1E  00AC               	movwf	??___flmul
  8038  0C1F  30FF               	movlw	255
  8039  0C20  0533               	andwf	___flmul@grs+1,w
  8040  0C21  00AD               	movwf	??___flmul+1
  8041  0C22  30FF               	movlw	255
  8042  0C23  0534               	andwf	___flmul@grs+2,w
  8043  0C24  00AE               	movwf	??___flmul+2
  8044  0C25  307F               	movlw	127
  8045  0C26  0535               	andwf	___flmul@grs+3,w
  8046  0C27  00AF               	movwf	??___flmul+3
  8047  0C28  082F               	movf	??___flmul+3,w
  8048  0C29  042E               	iorwf	??___flmul+2,w
  8049  0C2A  042D               	iorwf	??___flmul+1,w
  8050  0C2B  042C               	iorwf	??___flmul,w
  8051  0C2C  1903               	skipnz
  8052  0C2D  1838               	btfsc	___flmul@prod,0
  8053  0C2E  2C30               	goto	l2984
  8054  0C2F  2C32               	goto	l2988
  8055  0C30                     l2984:	
  8056  0C30  01B6               	clrf	___flmul@aexp
  8057  0C31  0AB6               	incf	___flmul@aexp,f
  8058  0C32                     l2988:	
  8059  0C32  0836               	movf	___flmul@aexp,w
  8060  0C33  1903               	btfsc	3,2
  8061  0C34  2C64               	goto	l2998
  8062  0C35  3001               	movlw	1
  8063  0C36  07B8               	addwf	___flmul@prod,f
  8064  0C37  3000               	movlw	0
  8065  0C38  1803               	skipnc
  8066  0C39  3001               	movlw	1
  8067  0C3A  07B9               	addwf	___flmul@prod+1,f
  8068  0C3B  3000               	movlw	0
  8069  0C3C  1803               	skipnc
  8070  0C3D  3001               	movlw	1
  8071  0C3E  07BA               	addwf	___flmul@prod+2,f
  8072  0C3F  3000               	movlw	0
  8073  0C40  1803               	skipnc
  8074  0C41  3001               	movlw	1
  8075  0C42  07BB               	addwf	___flmul@prod+3,f
  8076  0C43  1C3B               	btfss	___flmul@prod+3,0
  8077  0C44  2C64               	goto	l2998
  8078  0C45  0838               	movf	___flmul@prod,w
  8079  0C46  00AC               	movwf	??___flmul
  8080  0C47  0839               	movf	___flmul@prod+1,w
  8081  0C48  00AD               	movwf	??___flmul+1
  8082  0C49  083A               	movf	___flmul@prod+2,w
  8083  0C4A  00AE               	movwf	??___flmul+2
  8084  0C4B  083B               	movf	___flmul@prod+3,w
  8085  0C4C  00AF               	movwf	??___flmul+3
  8086  0C4D  3001               	movlw	1
  8087  0C4E  00B0               	movwf	??___flmul+4
  8088  0C4F                     u4915:	
  8089  0C4F  0D2F               	rlf	??___flmul+3,w
  8090  0C50  0CAF               	rrf	??___flmul+3,f
  8091  0C51  0CAE               	rrf	??___flmul+2,f
  8092  0C52  0CAD               	rrf	??___flmul+1,f
  8093  0C53  0CAC               	rrf	??___flmul,f
  8094  0C54  0BB0               	decfsz	??___flmul+4,f
  8095  0C55  2C4F               	goto	u4915
  8096  0C56  082F               	movf	??___flmul+3,w
  8097  0C57  00BB               	movwf	___flmul@prod+3
  8098  0C58  082E               	movf	??___flmul+2,w
  8099  0C59  00BA               	movwf	___flmul@prod+2
  8100  0C5A  082D               	movf	??___flmul+1,w
  8101  0C5B  00B9               	movwf	___flmul@prod+1
  8102  0C5C  082C               	movf	??___flmul,w
  8103  0C5D  00B8               	movwf	___flmul@prod
  8104  0C5E  3001               	movlw	1
  8105  0C5F  07BC               	addwf	___flmul@temp,f
  8106  0C60  1803               	skipnc
  8107  0C61  0ABD               	incf	___flmul@temp+1,f
  8108  0C62  3000               	movlw	0
  8109  0C63  07BD               	addwf	___flmul@temp+1,f
  8110  0C64                     l2998:	
  8111  0C64  083D               	movf	___flmul@temp+1,w
  8112  0C65  3A80               	xorlw	128
  8113  0C66  00FF               	movwf	127
  8114  0C67  3080               	movlw	128
  8115  0C68  027F               	subwf	127,w
  8116  0C69  1D03               	skipz
  8117  0C6A  2C6D               	goto	u4925
  8118  0C6B  30FF               	movlw	255
  8119  0C6C  023C               	subwf	___flmul@temp,w
  8120  0C6D                     u4925:	
  8121  0C6D  1C03               	skipc
  8122  0C6E  2C7A               	goto	l3002
  8123  0C6F  307F               	movlw	127
  8124  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  8125  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  8126  0C72  00BB               	movwf	___flmul@prod+3
  8127  0C73  3080               	movlw	128
  8128  0C74  00BA               	movwf	___flmul@prod+2
  8129  0C75  3000               	movlw	0
  8130  0C76  00B9               	movwf	___flmul@prod+1
  8131  0C77  3000               	movlw	0
  8132  0C78  00B8               	movwf	___flmul@prod
  8133  0C79  2CAA               	goto	l620
  8134  0C7A                     l3002:	
  8135  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  8136  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  8137  0C7C  083D               	movf	___flmul@temp+1,w
  8138  0C7D  3A80               	xorlw	128
  8139  0C7E  00FF               	movwf	127
  8140  0C7F  3080               	movlw	128
  8141  0C80  027F               	subwf	127,w
  8142  0C81  1D03               	skipz
  8143  0C82  2C85               	goto	u4935
  8144  0C83  3001               	movlw	1
  8145  0C84  023C               	subwf	___flmul@temp,w
  8146  0C85                     u4935:	
  8147  0C85  1803               	skipnc
  8148  0C86  2C93               	goto	l3008
  8149  0C87  3000               	movlw	0
  8150  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  8151  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  8152  0C8A  00BB               	movwf	___flmul@prod+3
  8153  0C8B  3000               	movlw	0
  8154  0C8C  00BA               	movwf	___flmul@prod+2
  8155  0C8D  3000               	movlw	0
  8156  0C8E  00B9               	movwf	___flmul@prod+1
  8157  0C8F  3000               	movlw	0
  8158  0C90  00B8               	movwf	___flmul@prod
  8159  0C91  01B1               	clrf	___flmul@sign
  8160  0C92  2CAA               	goto	l620
  8161  0C93                     l3008:	
  8162  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  8163  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  8164  0C95  083C               	movf	___flmul@temp,w
  8165  0C96  00AC               	movwf	??___flmul
  8166  0C97  082C               	movf	??___flmul,w
  8167  0C98  00B7               	movwf	___flmul@bexp
  8168  0C99  30FF               	movlw	255
  8169  0C9A  05B8               	andwf	___flmul@prod,f
  8170  0C9B  30FF               	movlw	255
  8171  0C9C  05B9               	andwf	___flmul@prod+1,f
  8172  0C9D  307F               	movlw	127
  8173  0C9E  05BA               	andwf	___flmul@prod+2,f
  8174  0C9F  3000               	movlw	0
  8175  0CA0  05BB               	andwf	___flmul@prod+3,f
  8176  0CA1  1837               	btfsc	___flmul@bexp,0
  8177  0CA2  17BA               	bsf	___flmul@prod+2,7
  8178  0CA3  0837               	movf	___flmul@bexp,w
  8179  0CA4  00AC               	movwf	??___flmul
  8180  0CA5  1003               	clrc
  8181  0CA6  0C2C               	rrf	??___flmul,w
  8182  0CA7  00AD               	movwf	??___flmul+1
  8183  0CA8  082D               	movf	??___flmul+1,w
  8184  0CA9  00BB               	movwf	___flmul@prod+3
  8185  0CAA                     l620:	
  8186  0CAA  0831               	movf	___flmul@sign,w
  8187  0CAB  00AC               	movwf	??___flmul
  8188  0CAC  082C               	movf	??___flmul,w
  8189  0CAD  04BB               	iorwf	___flmul@prod+3,f
  8190  0CAE  083B               	movf	___flmul@prod+3,w
  8191  0CAF  00A7               	movwf	?___flmul+3
  8192  0CB0  083A               	movf	___flmul@prod+2,w
  8193  0CB1  00A6               	movwf	?___flmul+2
  8194  0CB2  0839               	movf	___flmul@prod+1,w
  8195  0CB3  00A5               	movwf	?___flmul+1
  8196  0CB4  0838               	movf	___flmul@prod,w
  8197  0CB5  00A4               	movwf	?___flmul
  8198  0CB6  0008               	return
  8199  0CB7                     __end_of___flmul:	
  8200                           
  8201                           	psect	text27
  8202  000F                     __ptext27:	
  8203 ;; *************** function __Umul8_16 *****************
  8204 ;; Defined at:
  8205 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  multiplier      1    wreg     unsigned char 
  8208 ;;  multiplicand    1    0[COMMON] unsigned char 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;  multiplier      1    8[COMMON] unsigned char 
  8211 ;;  word_mpld       2    6[COMMON] unsigned int 
  8212 ;;  product         2    4[COMMON] unsigned int 
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  2    0[COMMON] unsigned int 
  8215 ;; Registers used:
  8216 ;;		wreg, status,2, status,0
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8222 ;;      Params:         2       0       0       0       0
  8223 ;;      Locals:         5       0       0       0       0
  8224 ;;      Temps:          2       0       0       0       0
  8225 ;;      Totals:         9       0       0       0       0
  8226 ;;Total ram usage:        9 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		___flmul
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           
  8236                           ;psect for function __Umul8_16
  8237  000F                     __Umul8_16:	
  8238                           
  8239                           ;incstack = 0
  8240                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8241                           ;__Umul8_16@multiplier stored from wreg
  8242  000F  00F8               	movwf	__Umul8_16@multiplier
  8243  0010  01F4               	clrf	__Umul8_16@product
  8244  0011  01F5               	clrf	__Umul8_16@product+1
  8245  0012  0870               	movf	__Umul8_16@multiplicand,w
  8246  0013  00F2               	movwf	??__Umul8_16
  8247  0014  01F3               	clrf	??__Umul8_16+1
  8248  0015  0872               	movf	??__Umul8_16,w
  8249  0016  00F6               	movwf	__Umul8_16@word_mpld
  8250  0017  0873               	movf	??__Umul8_16+1,w
  8251  0018  00F7               	movwf	__Umul8_16@word_mpld+1
  8252  0019                     l2336:	
  8253  0019  1C78               	btfss	__Umul8_16@multiplier,0
  8254  001A  2821               	goto	l766
  8255  001B  0876               	movf	__Umul8_16@word_mpld,w
  8256  001C  07F4               	addwf	__Umul8_16@product,f
  8257  001D  1803               	skipnc
  8258  001E  0AF5               	incf	__Umul8_16@product+1,f
  8259  001F  0877               	movf	__Umul8_16@word_mpld+1,w
  8260  0020  07F5               	addwf	__Umul8_16@product+1,f
  8261  0021                     l766:	
  8262  0021  3001               	movlw	1
  8263  0022                     u3305:	
  8264  0022  1003               	clrc
  8265  0023  0DF6               	rlf	__Umul8_16@word_mpld,f
  8266  0024  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8267  0025  3EFF               	addlw	-1
  8268  0026  1D03               	skipz
  8269  0027  2822               	goto	u3305
  8270  0028  1003               	clrc
  8271  0029  0CF8               	rrf	__Umul8_16@multiplier,f
  8272  002A  0878               	movf	__Umul8_16@multiplier,w
  8273  002B  1D03               	btfss	3,2
  8274  002C  2819               	goto	l2336
  8275  002D  0875               	movf	__Umul8_16@product+1,w
  8276  002E  00F1               	movwf	?__Umul8_16+1
  8277  002F  0874               	movf	__Umul8_16@product,w
  8278  0030  00F0               	movwf	?__Umul8_16
  8279  0031  0008               	return
  8280  0032                     __end_of__Umul8_16:	
  8281                           
  8282                           	psect	text28
  8283  1F6D                     __ptext28:	
  8284 ;; *************** function ___flge *****************
  8285 ;; Defined at:
  8286 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  ff1             4    0[COMMON] unsigned int 
  8289 ;;  ff2             4    4[COMMON] unsigned int 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;		None
  8292 ;; Return value:  Size  Location     Type
  8293 ;;		None               void
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8301 ;;      Params:         8       0       0       0       0
  8302 ;;      Locals:         0       0       0       0       0
  8303 ;;      Temps:          4       0       0       0       0
  8304 ;;      Totals:        12       0       0       0       0
  8305 ;;Total ram usage:       12 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; This function calls:
  8308 ;;		Nothing
  8309 ;; This function is called by:
  8310 ;;		_printf
  8311 ;;		_strtod
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           
  8316                           ;psect for function ___flge
  8317  1F6D                     ___flge:	
  8318                           
  8319                           ;incstack = 0
  8320                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8321  1F6D  3000               	movlw	0
  8322  1F6E  0570               	andwf	___flge@ff1,w
  8323  1F6F  00F8               	movwf	??___flge
  8324  1F70  3000               	movlw	0
  8325  1F71  0571               	andwf	___flge@ff1+1,w
  8326  1F72  00F9               	movwf	??___flge+1
  8327  1F73  3080               	movlw	128
  8328  1F74  0572               	andwf	___flge@ff1+2,w
  8329  1F75  00FA               	movwf	??___flge+2
  8330  1F76  307F               	movlw	127
  8331  1F77  0573               	andwf	___flge@ff1+3,w
  8332  1F78  00FB               	movwf	??___flge+3
  8333  1F79  087B               	movf	??___flge+3,w
  8334  1F7A  047A               	iorwf	??___flge+2,w
  8335  1F7B  0479               	iorwf	??___flge+1,w
  8336  1F7C  0478               	iorwf	??___flge,w
  8337  1F7D  1D03               	skipz
  8338  1F7E  2F87               	goto	l376
  8339  1F7F  3000               	movlw	0
  8340  1F80  00F3               	movwf	___flge@ff1+3
  8341  1F81  3000               	movlw	0
  8342  1F82  00F2               	movwf	___flge@ff1+2
  8343  1F83  3000               	movlw	0
  8344  1F84  00F1               	movwf	___flge@ff1+1
  8345  1F85  3000               	movlw	0
  8346  1F86  00F0               	movwf	___flge@ff1
  8347  1F87                     l376:	
  8348  1F87  3000               	movlw	0
  8349  1F88  0574               	andwf	___flge@ff2,w
  8350  1F89  00F8               	movwf	??___flge
  8351  1F8A  3000               	movlw	0
  8352  1F8B  0575               	andwf	___flge@ff2+1,w
  8353  1F8C  00F9               	movwf	??___flge+1
  8354  1F8D  3080               	movlw	128
  8355  1F8E  0576               	andwf	___flge@ff2+2,w
  8356  1F8F  00FA               	movwf	??___flge+2
  8357  1F90  307F               	movlw	127
  8358  1F91  0577               	andwf	___flge@ff2+3,w
  8359  1F92  00FB               	movwf	??___flge+3
  8360  1F93  087B               	movf	??___flge+3,w
  8361  1F94  047A               	iorwf	??___flge+2,w
  8362  1F95  0479               	iorwf	??___flge+1,w
  8363  1F96  0478               	iorwf	??___flge,w
  8364  1F97  1D03               	skipz
  8365  1F98  2FA1               	goto	l2474
  8366  1F99  3000               	movlw	0
  8367  1F9A  00F7               	movwf	___flge@ff2+3
  8368  1F9B  3000               	movlw	0
  8369  1F9C  00F6               	movwf	___flge@ff2+2
  8370  1F9D  3000               	movlw	0
  8371  1F9E  00F5               	movwf	___flge@ff2+1
  8372  1F9F  3000               	movlw	0
  8373  1FA0  00F4               	movwf	___flge@ff2
  8374  1FA1                     l2474:	
  8375  1FA1  1FF3               	btfss	___flge@ff1+3,7
  8376  1FA2  2FC7               	goto	l2478
  8377  1FA3  3000               	movlw	0
  8378  1FA4  00F8               	movwf	??___flge
  8379  1FA5  3000               	movlw	0
  8380  1FA6  00F9               	movwf	??___flge+1
  8381  1FA7  3000               	movlw	0
  8382  1FA8  00FA               	movwf	??___flge+2
  8383  1FA9  3080               	movlw	128
  8384  1FAA  00FB               	movwf	??___flge+3
  8385  1FAB  0870               	movf	___flge@ff1,w
  8386  1FAC  02F8               	subwf	??___flge,f
  8387  1FAD  0871               	movf	___flge@ff1+1,w
  8388  1FAE  1C03               	skipc
  8389  1FAF  0F71               	incfsz	___flge@ff1+1,w
  8390  1FB0  2FB2               	goto	u3641
  8391  1FB1  2FB3               	goto	u3642
  8392  1FB2                     u3641:	
  8393  1FB2  02F9               	subwf	??___flge+1,f
  8394  1FB3                     u3642:	
  8395  1FB3  0872               	movf	___flge@ff1+2,w
  8396  1FB4  1C03               	skipc
  8397  1FB5  0F72               	incfsz	___flge@ff1+2,w
  8398  1FB6  2FB8               	goto	u3643
  8399  1FB7  2FB9               	goto	u3644
  8400  1FB8                     u3643:	
  8401  1FB8  02FA               	subwf	??___flge+2,f
  8402  1FB9                     u3644:	
  8403  1FB9  0873               	movf	___flge@ff1+3,w
  8404  1FBA  1C03               	skipc
  8405  1FBB  0F73               	incfsz	___flge@ff1+3,w
  8406  1FBC  2FBE               	goto	u3645
  8407  1FBD  2FBF               	goto	u3646
  8408  1FBE                     u3645:	
  8409  1FBE  02FB               	subwf	??___flge+3,f
  8410  1FBF                     u3646:	
  8411  1FBF  087B               	movf	??___flge+3,w
  8412  1FC0  00F3               	movwf	___flge@ff1+3
  8413  1FC1  087A               	movf	??___flge+2,w
  8414  1FC2  00F2               	movwf	___flge@ff1+2
  8415  1FC3  0879               	movf	??___flge+1,w
  8416  1FC4  00F1               	movwf	___flge@ff1+1
  8417  1FC5  0878               	movf	??___flge,w
  8418  1FC6  00F0               	movwf	___flge@ff1
  8419  1FC7                     l2478:	
  8420  1FC7  1FF7               	btfss	___flge@ff2+3,7
  8421  1FC8  2FED               	goto	l379
  8422  1FC9  3000               	movlw	0
  8423  1FCA  00F8               	movwf	??___flge
  8424  1FCB  3000               	movlw	0
  8425  1FCC  00F9               	movwf	??___flge+1
  8426  1FCD  3000               	movlw	0
  8427  1FCE  00FA               	movwf	??___flge+2
  8428  1FCF  3080               	movlw	128
  8429  1FD0  00FB               	movwf	??___flge+3
  8430  1FD1  0874               	movf	___flge@ff2,w
  8431  1FD2  02F8               	subwf	??___flge,f
  8432  1FD3  0875               	movf	___flge@ff2+1,w
  8433  1FD4  1C03               	skipc
  8434  1FD5  0F75               	incfsz	___flge@ff2+1,w
  8435  1FD6  2FD8               	goto	u3661
  8436  1FD7  2FD9               	goto	u3662
  8437  1FD8                     u3661:	
  8438  1FD8  02F9               	subwf	??___flge+1,f
  8439  1FD9                     u3662:	
  8440  1FD9  0876               	movf	___flge@ff2+2,w
  8441  1FDA  1C03               	skipc
  8442  1FDB  0F76               	incfsz	___flge@ff2+2,w
  8443  1FDC  2FDE               	goto	u3663
  8444  1FDD  2FDF               	goto	u3664
  8445  1FDE                     u3663:	
  8446  1FDE  02FA               	subwf	??___flge+2,f
  8447  1FDF                     u3664:	
  8448  1FDF  0877               	movf	___flge@ff2+3,w
  8449  1FE0  1C03               	skipc
  8450  1FE1  0F77               	incfsz	___flge@ff2+3,w
  8451  1FE2  2FE4               	goto	u3665
  8452  1FE3  2FE5               	goto	u3666
  8453  1FE4                     u3665:	
  8454  1FE4  02FB               	subwf	??___flge+3,f
  8455  1FE5                     u3666:	
  8456  1FE5  087B               	movf	??___flge+3,w
  8457  1FE6  00F7               	movwf	___flge@ff2+3
  8458  1FE7  087A               	movf	??___flge+2,w
  8459  1FE8  00F6               	movwf	___flge@ff2+2
  8460  1FE9  0879               	movf	??___flge+1,w
  8461  1FEA  00F5               	movwf	___flge@ff2+1
  8462  1FEB  0878               	movf	??___flge,w
  8463  1FEC  00F4               	movwf	___flge@ff2
  8464  1FED                     l379:	
  8465  1FED  3080               	movlw	128
  8466  1FEE  06F3               	xorwf	___flge@ff1+3,f
  8467  1FEF  3080               	movlw	128
  8468  1FF0  06F7               	xorwf	___flge@ff2+3,f
  8469  1FF1  0877               	movf	___flge@ff2+3,w
  8470  1FF2  0273               	subwf	___flge@ff1+3,w
  8471  1FF3  1D03               	skipz
  8472  1FF4  0008               	return
  8473  1FF5  0876               	movf	___flge@ff2+2,w
  8474  1FF6  0272               	subwf	___flge@ff1+2,w
  8475  1FF7  1D03               	skipz
  8476  1FF8  0008               	return
  8477  1FF9  0875               	movf	___flge@ff2+1,w
  8478  1FFA  0271               	subwf	___flge@ff1+1,w
  8479  1FFB  1D03               	skipz
  8480  1FFC  0008               	return
  8481  1FFD  0874               	movf	___flge@ff2,w
  8482  1FFE  0270               	subwf	___flge@ff1,w
  8483  1FFF  0008               	return
  8484  2000                     __end_of___flge:	
  8485                           
  8486                           	psect	text29
  8487  08B0                     __ptext29:	
  8488 ;; *************** function ___fleq *****************
  8489 ;; Defined at:
  8490 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  ff1             4    0[COMMON] unsigned int 
  8493 ;;  ff2             4    4[COMMON] unsigned int 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;		None               void
  8498 ;; Registers used:
  8499 ;;		wreg, status,2, status,0
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8505 ;;      Params:         8       0       0       0       0
  8506 ;;      Locals:         0       0       0       0       0
  8507 ;;      Temps:          4       0       0       0       0
  8508 ;;      Totals:        12       0       0       0       0
  8509 ;;Total ram usage:       12 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_printf
  8515 ;;		_strtod
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           
  8520                           ;psect for function ___fleq
  8521  08B0                     ___fleq:	
  8522                           
  8523                           ;incstack = 0
  8524                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8525  08B0  3000               	movlw	0
  8526  08B1  0570               	andwf	___fleq@ff1,w
  8527  08B2  00F8               	movwf	??___fleq
  8528  08B3  3000               	movlw	0
  8529  08B4  0571               	andwf	___fleq@ff1+1,w
  8530  08B5  00F9               	movwf	??___fleq+1
  8531  08B6  3080               	movlw	128
  8532  08B7  0572               	andwf	___fleq@ff1+2,w
  8533  08B8  00FA               	movwf	??___fleq+2
  8534  08B9  307F               	movlw	127
  8535  08BA  0573               	andwf	___fleq@ff1+3,w
  8536  08BB  00FB               	movwf	??___fleq+3
  8537  08BC  087B               	movf	??___fleq+3,w
  8538  08BD  047A               	iorwf	??___fleq+2,w
  8539  08BE  0479               	iorwf	??___fleq+1,w
  8540  08BF  0478               	iorwf	??___fleq,w
  8541  08C0  1D03               	skipz
  8542  08C1  28CA               	goto	l371
  8543  08C2  3000               	movlw	0
  8544  08C3  00F3               	movwf	___fleq@ff1+3
  8545  08C4  3000               	movlw	0
  8546  08C5  00F2               	movwf	___fleq@ff1+2
  8547  08C6  3000               	movlw	0
  8548  08C7  00F1               	movwf	___fleq@ff1+1
  8549  08C8  3000               	movlw	0
  8550  08C9  00F0               	movwf	___fleq@ff1
  8551  08CA                     l371:	
  8552  08CA  3000               	movlw	0
  8553  08CB  0574               	andwf	___fleq@ff2,w
  8554  08CC  00F8               	movwf	??___fleq
  8555  08CD  3000               	movlw	0
  8556  08CE  0575               	andwf	___fleq@ff2+1,w
  8557  08CF  00F9               	movwf	??___fleq+1
  8558  08D0  3080               	movlw	128
  8559  08D1  0576               	andwf	___fleq@ff2+2,w
  8560  08D2  00FA               	movwf	??___fleq+2
  8561  08D3  307F               	movlw	127
  8562  08D4  0577               	andwf	___fleq@ff2+3,w
  8563  08D5  00FB               	movwf	??___fleq+3
  8564  08D6  087B               	movf	??___fleq+3,w
  8565  08D7  047A               	iorwf	??___fleq+2,w
  8566  08D8  0479               	iorwf	??___fleq+1,w
  8567  08D9  0478               	iorwf	??___fleq,w
  8568  08DA  1D03               	skipz
  8569  08DB  28E4               	goto	l372
  8570  08DC  3000               	movlw	0
  8571  08DD  00F7               	movwf	___fleq@ff2+3
  8572  08DE  3000               	movlw	0
  8573  08DF  00F6               	movwf	___fleq@ff2+2
  8574  08E0  3000               	movlw	0
  8575  08E1  00F5               	movwf	___fleq@ff2+1
  8576  08E2  3000               	movlw	0
  8577  08E3  00F4               	movwf	___fleq@ff2
  8578  08E4                     l372:	
  8579  08E4  0877               	movf	___fleq@ff2+3,w
  8580  08E5  0673               	xorwf	___fleq@ff1+3,w
  8581  08E6  1D03               	skipz
  8582  08E7  28F2               	goto	u3605
  8583  08E8  0876               	movf	___fleq@ff2+2,w
  8584  08E9  0672               	xorwf	___fleq@ff1+2,w
  8585  08EA  1D03               	skipz
  8586  08EB  28F2               	goto	u3605
  8587  08EC  0875               	movf	___fleq@ff2+1,w
  8588  08ED  0671               	xorwf	___fleq@ff1+1,w
  8589  08EE  1D03               	skipz
  8590  08EF  28F2               	goto	u3605
  8591  08F0  0874               	movf	___fleq@ff2,w
  8592  08F1  0670               	xorwf	___fleq@ff1,w
  8593  08F2                     u3605:	
  8594  08F2  1903               	skipnz
  8595  08F3  28F6               	goto	l2464
  8596  08F4  1003               	clrc
  8597  08F5  0008               	return
  8598  08F6                     l2464:	
  8599  08F6  1403               	setc
  8600  08F7  0008               	return
  8601  08F8                     __end_of___fleq:	
  8602                           
  8603                           	psect	text30
  8604  11AE                     __ptext30:	
  8605 ;; *************** function ___fldiv *****************
  8606 ;; Defined at:
  8607 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  a               4    0[COMMON] unsigned int 
  8610 ;;  b               4    4[COMMON] unsigned int 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;  grs             4    7[BANK0 ] unsigned long 
  8613 ;;  rem             4    0[BANK0 ] unsigned long 
  8614 ;;  new_exp         2    5[BANK0 ] int 
  8615 ;;  aexp            1   12[BANK0 ] unsigned char 
  8616 ;;  bexp            1   11[BANK0 ] unsigned char 
  8617 ;;  sign            1    4[BANK0 ] unsigned char 
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  4    0[COMMON] unsigned char 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0, btemp+1
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8627 ;;      Params:         8       0       0       0       0
  8628 ;;      Locals:         0      13       0       0       0
  8629 ;;      Temps:          5       0       0       0       0
  8630 ;;      Totals:        13      13       0       0       0
  8631 ;;Total ram usage:       26 bytes
  8632 ;; Hardware stack levels used:    1
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_strtod
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           
  8641                           ;psect for function ___fldiv
  8642  11AE                     ___fldiv:	
  8643                           
  8644                           ;incstack = 0
  8645                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8646  11AE  0877               	movf	___fldiv@b+3,w
  8647  11AF  3980               	andlw	128
  8648  11B0  00F8               	movwf	??___fldiv
  8649  11B1  0878               	movf	??___fldiv,w
  8650  11B2  1283               	bcf	3,5	;RP0=0, select bank0
  8651  11B3  1303               	bcf	3,6	;RP1=0, select bank0
  8652  11B4  00A4               	movwf	___fldiv@sign
  8653  11B5  0877               	movf	___fldiv@b+3,w
  8654  11B6  00F8               	movwf	??___fldiv
  8655  11B7  0778               	addwf	??___fldiv,w
  8656  11B8  00F9               	movwf	??___fldiv+1
  8657  11B9  0879               	movf	??___fldiv+1,w
  8658  11BA  00AB               	movwf	___fldiv@bexp
  8659  11BB  1BF6               	btfsc	___fldiv@b+2,7
  8660  11BC  142B               	bsf	___fldiv@bexp,0
  8661  11BD  082B               	movf	___fldiv@bexp,w
  8662  11BE  1903               	btfsc	3,2
  8663  11BF  29CE               	goto	l2756
  8664  11C0  0A2B               	incf	___fldiv@bexp,w
  8665  11C1  1D03               	btfss	3,2
  8666  11C2  29CB               	goto	l2752
  8667  11C3  3000               	movlw	0
  8668  11C4  00F7               	movwf	___fldiv@b+3
  8669  11C5  3000               	movlw	0
  8670  11C6  00F6               	movwf	___fldiv@b+2
  8671  11C7  3000               	movlw	0
  8672  11C8  00F5               	movwf	___fldiv@b+1
  8673  11C9  3000               	movlw	0
  8674  11CA  00F4               	movwf	___fldiv@b
  8675  11CB                     l2752:	
  8676  11CB  17F6               	bsf	___fldiv@b+2,7
  8677  11CC  01F7               	clrf	___fldiv@b+3
  8678  11CD  29D6               	goto	l2758
  8679  11CE                     l2756:	
  8680  11CE  3000               	movlw	0
  8681  11CF  00F7               	movwf	___fldiv@b+3
  8682  11D0  3000               	movlw	0
  8683  11D1  00F6               	movwf	___fldiv@b+2
  8684  11D2  3000               	movlw	0
  8685  11D3  00F5               	movwf	___fldiv@b+1
  8686  11D4  3000               	movlw	0
  8687  11D5  00F4               	movwf	___fldiv@b
  8688  11D6                     l2758:	
  8689  11D6  0873               	movf	___fldiv@a+3,w
  8690  11D7  3980               	andlw	128
  8691  11D8  00F8               	movwf	??___fldiv
  8692  11D9  0878               	movf	??___fldiv,w
  8693  11DA  06A4               	xorwf	___fldiv@sign,f
  8694  11DB  0873               	movf	___fldiv@a+3,w
  8695  11DC  00F8               	movwf	??___fldiv
  8696  11DD  0778               	addwf	??___fldiv,w
  8697  11DE  00F9               	movwf	??___fldiv+1
  8698  11DF  0879               	movf	??___fldiv+1,w
  8699  11E0  00AC               	movwf	___fldiv@aexp
  8700  11E1  1BF2               	btfsc	___fldiv@a+2,7
  8701  11E2  142C               	bsf	___fldiv@aexp,0
  8702  11E3  082C               	movf	___fldiv@aexp,w
  8703  11E4  1903               	btfsc	3,2
  8704  11E5  29F4               	goto	l2776
  8705  11E6  0A2C               	incf	___fldiv@aexp,w
  8706  11E7  1D03               	btfss	3,2
  8707  11E8  29F1               	goto	l2772
  8708  11E9  3000               	movlw	0
  8709  11EA  00F3               	movwf	___fldiv@a+3
  8710  11EB  3000               	movlw	0
  8711  11EC  00F2               	movwf	___fldiv@a+2
  8712  11ED  3000               	movlw	0
  8713  11EE  00F1               	movwf	___fldiv@a+1
  8714  11EF  3000               	movlw	0
  8715  11F0  00F0               	movwf	___fldiv@a
  8716  11F1                     l2772:	
  8717  11F1  17F2               	bsf	___fldiv@a+2,7
  8718  11F2  01F3               	clrf	___fldiv@a+3
  8719  11F3  29FC               	goto	l568
  8720  11F4                     l2776:	
  8721  11F4  3000               	movlw	0
  8722  11F5  00F3               	movwf	___fldiv@a+3
  8723  11F6  3000               	movlw	0
  8724  11F7  00F2               	movwf	___fldiv@a+2
  8725  11F8  3000               	movlw	0
  8726  11F9  00F1               	movwf	___fldiv@a+1
  8727  11FA  3000               	movlw	0
  8728  11FB  00F0               	movwf	___fldiv@a
  8729  11FC                     l568:	
  8730  11FC  0873               	movf	___fldiv@a+3,w
  8731  11FD  0472               	iorwf	___fldiv@a+2,w
  8732  11FE  0471               	iorwf	___fldiv@a+1,w
  8733  11FF  0470               	iorwf	___fldiv@a,w
  8734  1200  1D03               	skipz
  8735  1201  2A1B               	goto	l2786
  8736  1202  3000               	movlw	0
  8737  1203  00F7               	movwf	___fldiv@b+3
  8738  1204  3000               	movlw	0
  8739  1205  00F6               	movwf	___fldiv@b+2
  8740  1206  3000               	movlw	0
  8741  1207  00F5               	movwf	___fldiv@b+1
  8742  1208  3000               	movlw	0
  8743  1209  00F4               	movwf	___fldiv@b
  8744  120A  3080               	movlw	128
  8745  120B  04F6               	iorwf	___fldiv@b+2,f
  8746  120C  307F               	movlw	127
  8747  120D  04F7               	iorwf	___fldiv@b+3,f
  8748  120E                     L9:	
  8749  120E  0824               	movf	___fldiv@sign,w
  8750  120F  00F8               	movwf	??___fldiv
  8751  1210  0878               	movf	??___fldiv,w
  8752  1211  04F7               	iorwf	___fldiv@b+3,f
  8753  1212  0877               	movf	___fldiv@b+3,w
  8754  1213  00F3               	movwf	?___fldiv+3
  8755  1214  0876               	movf	___fldiv@b+2,w
  8756  1215  00F2               	movwf	?___fldiv+2
  8757  1216  0875               	movf	___fldiv@b+1,w
  8758  1217  00F1               	movwf	?___fldiv+1
  8759  1218  0874               	movf	___fldiv@b,w
  8760  1219  00F0               	movwf	?___fldiv
  8761  121A  0008               	return
  8762  121B                     l2786:	
  8763  121B  082B               	movf	___fldiv@bexp,w
  8764  121C  1D03               	btfss	3,2
  8765  121D  2A27               	goto	l2792
  8766  121E  3000               	movlw	0
  8767  121F  00F3               	movwf	?___fldiv+3
  8768  1220  3000               	movlw	0
  8769  1221  00F2               	movwf	?___fldiv+2
  8770  1222  3000               	movlw	0
  8771  1223  00F1               	movwf	?___fldiv+1
  8772  1224  3000               	movlw	0
  8773  1225  00F0               	movwf	?___fldiv
  8774  1226  0008               	return
  8775  1227                     l2792:	
  8776  1227  082B               	movf	___fldiv@bexp,w
  8777  1228  00F8               	movwf	??___fldiv
  8778  1229  01F9               	clrf	??___fldiv+1
  8779  122A  0879               	movf	??___fldiv+1,w
  8780  122B  00FB               	movwf	??___fldiv+3
  8781  122C  082C               	movf	___fldiv@aexp,w
  8782  122D  0278               	subwf	??___fldiv,w
  8783  122E  00FA               	movwf	??___fldiv+2
  8784  122F  1C03               	skipc
  8785  1230  03FB               	decf	??___fldiv+3,f
  8786  1231  087A               	movf	??___fldiv+2,w
  8787  1232  3E7F               	addlw	127
  8788  1233  00A5               	movwf	___fldiv@new_exp
  8789  1234  087B               	movf	??___fldiv+3,w
  8790  1235  1803               	skipnc
  8791  1236  3E01               	addlw	1
  8792  1237  3E00               	addlw	0
  8793  1238  00A6               	movwf	___fldiv@new_exp+1
  8794  1239  0877               	movf	___fldiv@b+3,w
  8795  123A  00A3               	movwf	___fldiv@rem+3
  8796  123B  0876               	movf	___fldiv@b+2,w
  8797  123C  00A2               	movwf	___fldiv@rem+2
  8798  123D  0875               	movf	___fldiv@b+1,w
  8799  123E  00A1               	movwf	___fldiv@rem+1
  8800  123F  0874               	movf	___fldiv@b,w
  8801  1240  00A0               	movwf	___fldiv@rem
  8802  1241  3000               	movlw	0
  8803  1242  00F7               	movwf	___fldiv@b+3
  8804  1243  3000               	movlw	0
  8805  1244  00F6               	movwf	___fldiv@b+2
  8806  1245  3000               	movlw	0
  8807  1246  00F5               	movwf	___fldiv@b+1
  8808  1247  3000               	movlw	0
  8809  1248  00F4               	movwf	___fldiv@b
  8810  1249  3000               	movlw	0
  8811  124A  00AA               	movwf	___fldiv@grs+3
  8812  124B  3000               	movlw	0
  8813  124C  00A9               	movwf	___fldiv@grs+2
  8814  124D  3000               	movlw	0
  8815  124E  00A8               	movwf	___fldiv@grs+1
  8816  124F  3000               	movlw	0
  8817  1250  00A7               	movwf	___fldiv@grs
  8818  1251  01AC               	clrf	___fldiv@aexp
  8819  1252                     l2820:	
  8820  1252  301A               	movlw	26
  8821  1253  022C               	subwf	___fldiv@aexp,w
  8822  1254  1803               	btfsc	3,0
  8823  1255  2AA0               	goto	l2822
  8824  1256  082C               	movf	___fldiv@aexp,w
  8825  1257  1903               	btfsc	3,2
  8826  1258  2A76               	goto	l2812
  8827  1259  3001               	movlw	1
  8828  125A  00F8               	movwf	??___fldiv
  8829  125B                     u4375:	
  8830  125B  1003               	clrc
  8831  125C  0DA0               	rlf	___fldiv@rem,f
  8832  125D  0DA1               	rlf	___fldiv@rem+1,f
  8833  125E  0DA2               	rlf	___fldiv@rem+2,f
  8834  125F  0DA3               	rlf	___fldiv@rem+3,f
  8835  1260  0BF8               	decfsz	??___fldiv,f
  8836  1261  2A5B               	goto	u4375
  8837  1262  3001               	movlw	1
  8838  1263  00F8               	movwf	??___fldiv
  8839  1264                     u4385:	
  8840  1264  1003               	clrc
  8841  1265  0DF4               	rlf	___fldiv@b,f
  8842  1266  0DF5               	rlf	___fldiv@b+1,f
  8843  1267  0DF6               	rlf	___fldiv@b+2,f
  8844  1268  0DF7               	rlf	___fldiv@b+3,f
  8845  1269  0BF8               	decfsz	??___fldiv,f
  8846  126A  2A64               	goto	u4385
  8847  126B  1BAA               	btfsc	___fldiv@grs+3,7
  8848  126C  1474               	bsf	___fldiv@b,0
  8849  126D  3001               	movlw	1
  8850  126E  00F8               	movwf	??___fldiv
  8851  126F                     u4405:	
  8852  126F  1003               	clrc
  8853  1270  0DA7               	rlf	___fldiv@grs,f
  8854  1271  0DA8               	rlf	___fldiv@grs+1,f
  8855  1272  0DA9               	rlf	___fldiv@grs+2,f
  8856  1273  0DAA               	rlf	___fldiv@grs+3,f
  8857  1274  0BF8               	decfsz	??___fldiv,f
  8858  1275  2A6F               	goto	u4405
  8859  1276                     l2812:	
  8860  1276  0873               	movf	___fldiv@a+3,w
  8861  1277  0223               	subwf	___fldiv@rem+3,w
  8862  1278  1D03               	skipz
  8863  1279  2A84               	goto	u4415
  8864  127A  0872               	movf	___fldiv@a+2,w
  8865  127B  0222               	subwf	___fldiv@rem+2,w
  8866  127C  1D03               	skipz
  8867  127D  2A84               	goto	u4415
  8868  127E  0871               	movf	___fldiv@a+1,w
  8869  127F  0221               	subwf	___fldiv@rem+1,w
  8870  1280  1D03               	skipz
  8871  1281  2A84               	goto	u4415
  8872  1282  0870               	movf	___fldiv@a,w
  8873  1283  0220               	subwf	___fldiv@rem,w
  8874  1284                     u4415:	
  8875  1284  1C03               	skipc
  8876  1285  2A9B               	goto	l2818
  8877  1286  172A               	bsf	___fldiv@grs+3,6
  8878  1287  0870               	movf	___fldiv@a,w
  8879  1288  02A0               	subwf	___fldiv@rem,f
  8880  1289  0871               	movf	___fldiv@a+1,w
  8881  128A  1C03               	skipc
  8882  128B  0F71               	incfsz	___fldiv@a+1,w
  8883  128C  2A8E               	goto	u4425
  8884  128D  2A8F               	goto	u4426
  8885  128E                     u4425:	
  8886  128E  02A1               	subwf	___fldiv@rem+1,f
  8887  128F                     u4426:	
  8888  128F  0872               	movf	___fldiv@a+2,w
  8889  1290  1C03               	skipc
  8890  1291  0F72               	incfsz	___fldiv@a+2,w
  8891  1292  2A94               	goto	u4427
  8892  1293  2A95               	goto	u4428
  8893  1294                     u4427:	
  8894  1294  02A2               	subwf	___fldiv@rem+2,f
  8895  1295                     u4428:	
  8896  1295  0873               	movf	___fldiv@a+3,w
  8897  1296  1C03               	skipc
  8898  1297  0F73               	incfsz	___fldiv@a+3,w
  8899  1298  2A9A               	goto	u4429
  8900  1299  2A9B               	goto	l2818
  8901  129A                     u4429:	
  8902  129A  02A3               	subwf	___fldiv@rem+3,f
  8903  129B                     l2818:	
  8904  129B  3001               	movlw	1
  8905  129C  00F8               	movwf	??___fldiv
  8906  129D  0878               	movf	??___fldiv,w
  8907  129E  07AC               	addwf	___fldiv@aexp,f
  8908  129F  2A52               	goto	l2820
  8909  12A0                     l2822:	
  8910  12A0  0823               	movf	___fldiv@rem+3,w
  8911  12A1  0422               	iorwf	___fldiv@rem+2,w
  8912  12A2  0421               	iorwf	___fldiv@rem+1,w
  8913  12A3  0420               	iorwf	___fldiv@rem,w
  8914  12A4  1D03               	btfss	3,2
  8915  12A5  1427               	bsf	___fldiv@grs,0
  8916  12A6                     l2836:	
  8917  12A6  1BF6               	btfsc	___fldiv@b+2,7
  8918  12A7  2AC3               	goto	l2838
  8919  12A8  3001               	movlw	1
  8920  12A9  00F8               	movwf	??___fldiv
  8921  12AA                     u4455:	
  8922  12AA  1003               	clrc
  8923  12AB  0DF4               	rlf	___fldiv@b,f
  8924  12AC  0DF5               	rlf	___fldiv@b+1,f
  8925  12AD  0DF6               	rlf	___fldiv@b+2,f
  8926  12AE  0DF7               	rlf	___fldiv@b+3,f
  8927  12AF  0BF8               	decfsz	??___fldiv,f
  8928  12B0  2AAA               	goto	u4455
  8929  12B1  1BAA               	btfsc	___fldiv@grs+3,7
  8930  12B2  1474               	bsf	___fldiv@b,0
  8931  12B3  3001               	movlw	1
  8932  12B4  00F8               	movwf	??___fldiv
  8933  12B5                     u4475:	
  8934  12B5  1003               	clrc
  8935  12B6  0DA7               	rlf	___fldiv@grs,f
  8936  12B7  0DA8               	rlf	___fldiv@grs+1,f
  8937  12B8  0DA9               	rlf	___fldiv@grs+2,f
  8938  12B9  0DAA               	rlf	___fldiv@grs+3,f
  8939  12BA  0BF8               	decfsz	??___fldiv,f
  8940  12BB  2AB5               	goto	u4475
  8941  12BC  30FF               	movlw	255
  8942  12BD  07A5               	addwf	___fldiv@new_exp,f
  8943  12BE  1803               	skipnc
  8944  12BF  0AA6               	incf	___fldiv@new_exp+1,f
  8945  12C0  30FF               	movlw	255
  8946  12C1  07A6               	addwf	___fldiv@new_exp+1,f
  8947  12C2  2AA6               	goto	l2836
  8948  12C3                     l2838:	
  8949  12C3  01AC               	clrf	___fldiv@aexp
  8950  12C4  1FAA               	btfss	___fldiv@grs+3,7
  8951  12C5  2ADC               	goto	l2848
  8952  12C6  30FF               	movlw	255
  8953  12C7  0527               	andwf	___fldiv@grs,w
  8954  12C8  00F8               	movwf	??___fldiv
  8955  12C9  30FF               	movlw	255
  8956  12CA  0528               	andwf	___fldiv@grs+1,w
  8957  12CB  00F9               	movwf	??___fldiv+1
  8958  12CC  30FF               	movlw	255
  8959  12CD  0529               	andwf	___fldiv@grs+2,w
  8960  12CE  00FA               	movwf	??___fldiv+2
  8961  12CF  307F               	movlw	127
  8962  12D0  052A               	andwf	___fldiv@grs+3,w
  8963  12D1  00FB               	movwf	??___fldiv+3
  8964  12D2  087B               	movf	??___fldiv+3,w
  8965  12D3  047A               	iorwf	??___fldiv+2,w
  8966  12D4  0479               	iorwf	??___fldiv+1,w
  8967  12D5  0478               	iorwf	??___fldiv,w
  8968  12D6  1903               	skipnz
  8969  12D7  1874               	btfsc	___fldiv@b,0
  8970  12D8  2ADA               	goto	l2844
  8971  12D9  2ADC               	goto	l2848
  8972  12DA                     l2844:	
  8973  12DA  01AC               	clrf	___fldiv@aexp
  8974  12DB  0AAC               	incf	___fldiv@aexp,f
  8975  12DC                     l2848:	
  8976  12DC  082C               	movf	___fldiv@aexp,w
  8977  12DD  1903               	btfsc	3,2
  8978  12DE  2B0E               	goto	l2858
  8979  12DF  3001               	movlw	1
  8980  12E0  07F4               	addwf	___fldiv@b,f
  8981  12E1  3000               	movlw	0
  8982  12E2  1803               	skipnc
  8983  12E3  3001               	movlw	1
  8984  12E4  07F5               	addwf	___fldiv@b+1,f
  8985  12E5  3000               	movlw	0
  8986  12E6  1803               	skipnc
  8987  12E7  3001               	movlw	1
  8988  12E8  07F6               	addwf	___fldiv@b+2,f
  8989  12E9  3000               	movlw	0
  8990  12EA  1803               	skipnc
  8991  12EB  3001               	movlw	1
  8992  12EC  07F7               	addwf	___fldiv@b+3,f
  8993  12ED  1C77               	btfss	___fldiv@b+3,0
  8994  12EE  2B0E               	goto	l2858
  8995  12EF  0874               	movf	___fldiv@b,w
  8996  12F0  00F8               	movwf	??___fldiv
  8997  12F1  0875               	movf	___fldiv@b+1,w
  8998  12F2  00F9               	movwf	??___fldiv+1
  8999  12F3  0876               	movf	___fldiv@b+2,w
  9000  12F4  00FA               	movwf	??___fldiv+2
  9001  12F5  0877               	movf	___fldiv@b+3,w
  9002  12F6  00FB               	movwf	??___fldiv+3
  9003  12F7  3001               	movlw	1
  9004  12F8  00FC               	movwf	??___fldiv+4
  9005  12F9                     u4545:	
  9006  12F9  0D7B               	rlf	??___fldiv+3,w
  9007  12FA  0CFB               	rrf	??___fldiv+3,f
  9008  12FB  0CFA               	rrf	??___fldiv+2,f
  9009  12FC  0CF9               	rrf	??___fldiv+1,f
  9010  12FD  0CF8               	rrf	??___fldiv,f
  9011  12FE  0BFC               	decfsz	??___fldiv+4,f
  9012  12FF  2AF9               	goto	u4545
  9013  1300  087B               	movf	??___fldiv+3,w
  9014  1301  00F7               	movwf	___fldiv@b+3
  9015  1302  087A               	movf	??___fldiv+2,w
  9016  1303  00F6               	movwf	___fldiv@b+2
  9017  1304  0879               	movf	??___fldiv+1,w
  9018  1305  00F5               	movwf	___fldiv@b+1
  9019  1306  0878               	movf	??___fldiv,w
  9020  1307  00F4               	movwf	___fldiv@b
  9021  1308  3001               	movlw	1
  9022  1309  07A5               	addwf	___fldiv@new_exp,f
  9023  130A  1803               	skipnc
  9024  130B  0AA6               	incf	___fldiv@new_exp+1,f
  9025  130C  3000               	movlw	0
  9026  130D  07A6               	addwf	___fldiv@new_exp+1,f
  9027  130E                     l2858:	
  9028  130E  0826               	movf	___fldiv@new_exp+1,w
  9029  130F  3A80               	xorlw	128
  9030  1310  00FF               	movwf	127
  9031  1311  3080               	movlw	128
  9032  1312  027F               	subwf	127,w
  9033  1313  1D03               	skipz
  9034  1314  2B17               	goto	u4555
  9035  1315  30FF               	movlw	255
  9036  1316  0225               	subwf	___fldiv@new_exp,w
  9037  1317                     u4555:	
  9038  1317  1C03               	skipc
  9039  1318  2B27               	goto	l2862
  9040  1319  30FF               	movlw	255
  9041  131A  1283               	bcf	3,5	;RP0=0, select bank0
  9042  131B  1303               	bcf	3,6	;RP1=0, select bank0
  9043  131C  00A5               	movwf	___fldiv@new_exp
  9044  131D  3000               	movlw	0
  9045  131E  00A6               	movwf	___fldiv@new_exp+1
  9046  131F  3000               	movlw	0
  9047  1320  00F7               	movwf	___fldiv@b+3
  9048  1321  3000               	movlw	0
  9049  1322  00F6               	movwf	___fldiv@b+2
  9050  1323  3000               	movlw	0
  9051  1324  00F5               	movwf	___fldiv@b+1
  9052  1325  3000               	movlw	0
  9053  1326  00F4               	movwf	___fldiv@b
  9054  1327                     l2862:	
  9055  1327  1283               	bcf	3,5	;RP0=0, select bank0
  9056  1328  1303               	bcf	3,6	;RP1=0, select bank0
  9057  1329  0826               	movf	___fldiv@new_exp+1,w
  9058  132A  3A80               	xorlw	128
  9059  132B  00FF               	movwf	127
  9060  132C  3080               	movlw	128
  9061  132D  027F               	subwf	127,w
  9062  132E  1D03               	skipz
  9063  132F  2B32               	goto	u4565
  9064  1330  3001               	movlw	1
  9065  1331  0225               	subwf	___fldiv@new_exp,w
  9066  1332                     u4565:	
  9067  1332  1803               	skipnc
  9068  1333  2B41               	goto	l590
  9069  1334  1283               	bcf	3,5	;RP0=0, select bank0
  9070  1335  1303               	bcf	3,6	;RP1=0, select bank0
  9071  1336  01A5               	clrf	___fldiv@new_exp
  9072  1337  01A6               	clrf	___fldiv@new_exp+1
  9073  1338  3000               	movlw	0
  9074  1339  00F7               	movwf	___fldiv@b+3
  9075  133A  3000               	movlw	0
  9076  133B  00F6               	movwf	___fldiv@b+2
  9077  133C  3000               	movlw	0
  9078  133D  00F5               	movwf	___fldiv@b+1
  9079  133E  3000               	movlw	0
  9080  133F  00F4               	movwf	___fldiv@b
  9081  1340  01A4               	clrf	___fldiv@sign
  9082  1341                     l590:	
  9083  1341  1283               	bcf	3,5	;RP0=0, select bank0
  9084  1342  1303               	bcf	3,6	;RP1=0, select bank0
  9085  1343  0825               	movf	___fldiv@new_exp,w
  9086  1344  00F8               	movwf	??___fldiv
  9087  1345  0878               	movf	??___fldiv,w
  9088  1346  00AB               	movwf	___fldiv@bexp
  9089  1347  1C2B               	btfss	___fldiv@bexp,0
  9090  1348  2B4B               	goto	l2874
  9091  1349  17F6               	bsf	___fldiv@b+2,7
  9092  134A  2B4F               	goto	l592
  9093  134B                     l2874:	
  9094  134B  307F               	movlw	127
  9095  134C  00F8               	movwf	??___fldiv
  9096  134D  0878               	movf	??___fldiv,w
  9097  134E  05F6               	andwf	___fldiv@b+2,f
  9098  134F                     l592:	
  9099  134F  082B               	movf	___fldiv@bexp,w
  9100  1350  00F8               	movwf	??___fldiv
  9101  1351  1003               	clrc
  9102  1352  0C78               	rrf	??___fldiv,w
  9103  1353  00F9               	movwf	??___fldiv+1
  9104  1354  0879               	movf	??___fldiv+1,w
  9105  1355  00F7               	movwf	___fldiv@b+3
  9106  1356  2A0E               	goto	L9
  9107  1357                     __end_of___fldiv:	
  9108                           
  9109                           	psect	text31
  9110  1C4F                     __ptext31:	
  9111 ;; *************** function ___bmul *****************
  9112 ;; Defined at:
  9113 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  multiplier      1    wreg     unsigned char 
  9116 ;;  multiplicand    1    0[COMMON] unsigned char 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  multiplier      1    3[COMMON] unsigned char 
  9119 ;;  product         1    2[COMMON] unsigned char 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      unsigned char 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9129 ;;      Params:         1       0       0       0       0
  9130 ;;      Locals:         2       0       0       0       0
  9131 ;;      Temps:          1       0       0       0       0
  9132 ;;      Totals:         4       0       0       0       0
  9133 ;;Total ram usage:        4 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_strtod
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           
  9143                           ;psect for function ___bmul
  9144  1C4F                     ___bmul:	
  9145                           
  9146                           ;incstack = 0
  9147                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9148                           ;___bmul@multiplier stored from wreg
  9149  1C4F  00F3               	movwf	___bmul@multiplier
  9150  1C50  01F2               	clrf	___bmul@product
  9151  1C51                     l2362:	
  9152  1C51  1C73               	btfss	___bmul@multiplier,0
  9153  1C52  2C57               	goto	l2366
  9154  1C53  0870               	movf	___bmul@multiplicand,w
  9155  1C54  00F1               	movwf	??___bmul
  9156  1C55  0871               	movf	??___bmul,w
  9157  1C56  07F2               	addwf	___bmul@product,f
  9158  1C57                     l2366:	
  9159  1C57  1003               	clrc
  9160  1C58  0DF0               	rlf	___bmul@multiplicand,f
  9161  1C59  1003               	clrc
  9162  1C5A  0CF3               	rrf	___bmul@multiplier,f
  9163  1C5B  0873               	movf	___bmul@multiplier,w
  9164  1C5C  1D03               	btfss	3,2
  9165  1C5D  2C51               	goto	l2362
  9166  1C5E  0872               	movf	___bmul@product,w
  9167  1C5F  0008               	return
  9168  1C60                     __end_of___bmul:	
  9169  007E                     btemp	set	126	;btemp
  9170  007E                     wtemp0	set	126


Data Sizes:
    Strings     16
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     51      51
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cgets@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@buf(BANK1[10]), 

    cgets@s1	PTR unsigned char  size(1) Largest target is 10
		 -> main@buf(BANK1[10]), 

    atof@s	PTR const unsigned char  size(1) Largest target is 10
		 -> main@buf(BANK1[10]), 

    strtod@s	PTR const unsigned char  size(1) Largest target is 10
		 -> main@buf(BANK1[10]), 

    strtod@res	PTR PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[7]), ?_printf(BANK1[2]), main@buf(BANK1[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    sp__cgets	PTR unsigned char  size(1) Largest target is 10
		 -> main@buf(BANK1[10]), 


Critical Paths under _main in COMMON

    _printf->___lldiv
    _printf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _strtod->___xxtofl
    ___flmul->___lwdiv

Critical Paths under _main in BANK0

    _printf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _atof->_strtod
    _strtod->___flmul
    ___flmul->___awdiv

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   42037
                                             78 BANK0      1     1      0
                                             37 BANK1     14    14      0
                               _atof
                              _cgets
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   31235
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) _cgets                                                6     6      0     220
                                              0 COMMON     6     6      0
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _getche                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atof                                                 6     1      5   10472
                                             46 BANK0      6     1      5
                             _strtod
 ---------------------------------------------------------------------------------
 (2) _strtod                                              16    12      4   10417
                                             30 BANK0     16    12      4
                             ___bmul
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                           ___xxtofl
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              2     2      0      90
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     197
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1094
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     546
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atof
     _strtod
       ___bmul
       ___fldiv
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg
       ___lmul
       ___xxtofl
       _isdigit
       _isspace
   _cgets
     _getche
     _putch
   _printf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     33      33       7       63.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jul 26 14:47:51 2019

           ___fldiv@aexp 002C             ___fldiv@bexp 002B                        pc 0002  
           ___fldiv@sign 0024           ___bmul@product 0072              __CFG_CP$OFF 0000  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
    __Umul8_16@word_mpld 0076                      l134 0283                      l413 1196  
                    l181 07FB                      l512 0084                      l185 1C8F  
                    l371 08CA                      l372 08E4                      l620 0CAA  
                    l516 011D                      l533 01D6                      l518 00FB  
                    l366 098A                      l376 1F87                      l554 0256  
                    l546 023E                      l379 1FED                      l395 1F4F  
                    l660 10DF                      l652 10BF                      l709 17DE  
                    l590 1341                      l646 107F                      l592 134F  
                    l568 11FC                      l680 15FC                      l681 15BB  
                    l659 10D5                      l766 0021                      l698 16DB  
           __CFG_CPD$OFF 0000                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076             __CFG_FOSC$HS 0000             ___flmul@aexp 0036  
           ___flmul@bexp 0037             ___flmul@sign 0031             ___flmul@temp 003C  
           ___flmul@prod 0038             __CFG_LVP$OFF 0000             ___fltol@exp1 005B  
                   l3002 0C7A                     l3008 0C93                     l3032 108E  
                   l3104 1516                     l2400 1E74                     l3120 0DA9  
                   l3026 1077                     l3202 0903                     l2410 1E95  
                   l3130 0E5F                     l3060 10FC                     l3036 1092  
                   l3220 093A                     l3046 10D3                     l3038 10A4  
                   l3206 090C                     l3150 1116                     l2414 1E9D  
                   l2406 1E8A                     l2430 1DC1                     l3126 0E34  
                   l2336 0019                     l2352 1D8F                     l3048 10C4  
                   l3072 1C6F                     l3312 1F3B                     l3240 0986  
                   l2440 1DD5                     l3144 0FD5                     l2362 1C51  
                   l3074 1C70                     l3402 1603                     l3322 1F5E  
                   l3314 1F4B                     l3154 111F                     l2514 1D61  
                   l2506 1D3D                     l2530 1CCE                     l2426 1DBA  
                   l3138 0F4A                     l2348 1D79                     l3420 1625  
                   l3412 162B                     l2700 0200                     l3332 1E03  
                   l3228 0962                     l2508 1D4B                     l2532 1CDC  
                   l2540 1CF5                     l2452 1DF6                     l2444 1DE3  
                   l2366 1C57                     l3086 1C4D                     l3422 1630  
                   l3414 161F                     l2710 020B                     l2630 0106  
                   l2622 00CA                     l3334 1E13                     l3342 1E3E  
                   l3254 1C87                     l3238 0976                     l2518 1D6C  
                   l2382 1E53                     l2438 1DC7                     l2464 08F6  
                   l3408 1613                     l3360 1578                     l2632 0108  
                   l2640 0117                     l3272 1EB2                     l3248 0999  
                   l3176 116F                     l3168 114F                     l2536 1CEA  
                   l2448 1DEE                     l2474 1FA1                     l3514 17F7  
                   l3450 16A1                     l3442 1692                     l2706 0209  
                   l2562 0052                     l3282 1EEA                     l3274 1EC2  
                   l3338 1E31                     l3186 1182                     l3098 1469  
                   l2812 1276                     l2820 1252                     l3508 17D5  
                   l3380 1595                     l3372 158A                     l3532 101A  
                   l3524 1007                     l2732 0252                     l2564 005A  
                   l3292 1F0B                     l3196 11A5                     l3188 1192  
                   l2388 1E5E                     l2822 12A0                     l2478 1FC7  
                   l3470 172D                     l3438 168C                     l3366 1586  
                   l3358 1565                     l3542 1038                     l2582 0079  
                   l2558 004F                     l3286 1EF7                     l2398 1E66  
                   l3710 07D7                     l3622 041D                     l3614 0394  
                   l2752 11CB                     l2912 09E4                     l3480 1754  
                   l3464 16E1                     l3384 159D                     l3368 1582  
                   l3536 102E                     l2728 024E                     l2656 014C  
                   l2648 012B                     l2592 008E                     l3296 1F14  
                   l3720 0268                     l2818 129B                     l2914 09E6  
                   l3466 170A                     l3386 15A3                     l3378 15A1  
                   l3538 1033                     l2658 014E                     l2666 015E  
                   l2586 007C                     l3714 07E5                     l3642 04F4  
                   l2844 12DA                     l2836 12A6                     l2772 11F1  
                   l2756 11CE                     l2924 09FC                     l2916 09EE  
                   l3492 1786                     l3484 175D                     l3548 1043  
                   l2692 01F7                     l2684 01E8                     l2676 01C8  
                   l3652 0542                     l3628 043E                     l3716 07EA  
                   l3564 0280                     l2862 1327                     l2838 12C3  
                   l2758 11D6                     l3494 178B                     l3670 0604  
                   l3638 04D9                     l3566 0285                     l3582 02C9  
                   l2848 12DC                     l2792 1227                     l2776 11F4  
                   l3488 1763                     l3680 0614                     l3664 05C8  
                   l3584 02E6                     l2874 134B                     l2858 130E  
                   l2786 121B                     l3498 17AE                     l2698 01FE  
                   l3682 0678                     l3658 05C6                     l3578 0298  
                   l3692 06A2                     l2894 09BF                     l3686 0686  
                   l3598 033A                     l2984 0C30                     l2976 0BFC  
                   l2896 09C1                     l3784 02DB                     l2978 0C19  
                   l2898 09C9                     l3786 1053                     l3698 06BA  
                   l2988 0C32                     l2998 0C64                     STR_1 08A0  
                   STR_2 08A9                     u3305 0022                     u4115 01EA  
                   u5005 10B7                     u4061 0189                     u4053 0170  
                   u4045 0152                     u4070 019D                     u4062 018A  
                   u4215 0228                     u4071 019E                     u4063 018F  
                   u4072 01A3                     u4064 0190                     u3345 1D91  
                   u5025 10CC                     u4073 01A4                     u4065 0195  
                   u3425 1E69                     u4066 0196                     u3355 1D99  
           printf@tmpval 00BC                     u4405 126F                     u3605 08F2  
                   u5205 14D7                     u3445 1E75                     u3525 1DCA  
                   u4415 1284                     u5215 1521                     u3455 1E81  
                   u4425 128E                     u3641 1FB2                     u5065 10E7  
                   u3705 1D40                     u3465 1E8B                     u3545 1DDB  
                   u5305 0E37                     u4426 128F                     u3642 1FB3  
                   u4427 1294                     u3643 1FB8                     u5155 137B  
                   u3555 1DE4                     u4428 1295                     u3644 1FB9  
                   u4429 129A                     u3661 1FD8                     u3645 1FBE  
                   u3725 1D4C                     u3805 1CEB                     u5165 13D5  
                   u5325 0E84                     u5245 0CE3                     u3662 1FD9  
                   u3646 1FBF                     u4455 12AA                     u4375 125B  
                   u3663 1FDE                     u5415 1151                     u3735 1D58  
                   u5175 142A                     u5335 0EC0                     u5255 0D1F  
                   u3664 1FDF                     u3920 00EA                     u4545 12F9  
                   u4385 1264                     u3665 1FE4                     u4705 0AAC  
                   u5505 119B                     u5425 1162                     u3745 1D62  
                   u5345 0F0B                     u5265 0D6A                     u3666 1FE5  
                   u3930 00EB                     u4555 1317                     u4475 12B5  
                   u3915 00DE                     u5435 1170                     u5195 148A  
                   u4565 1332                     u5605 0977                     u5365 0F62  
                   u5285 0DC1                     u6405 04D7                     u4815 0BE8  
                   u4735 0B09                     u3775 1CD1                     u5375 0F9E  
                   u5295 0DFD                     u4825 0C00                     u5705 1EB6  
                   u5545 093C                     u5385 0FD8                     u6425 05CB  
                   u4915 0C4F                     u5635 098F                     u5555 0951  
                   u5475 1183                     u3795 1CE2                     u6515 073C  
                   u6435 05FA                     u4925 0C6D                     u4845 0C0B  
                   u3965 010C                     u5805 1F3C                     u5725 1EC4  
                   u5565 0964                     u6525 079F                     u4935 0C85  
                   u4775 0BA5                     u5735 1ED9                     u6375 048C  
                   u5745 1EEB                     u5905 1E32                     u5665 1C90  
                   u6465 061E                     u4795 0BCA                     u5835 1F54  
                   u5675 1C97                     u6485 068F                     u5775 1F1D  
                   u6495 069C                     u4985 109B                     u5875 1E07  
                   u5895 1E21             __CFG_WRT$OFF 0000                     _atof 1C72  
                   _main 1CFA                     btemp 007E                     start 0000  
        ___fldiv@new_exp 0025        ___bmul@multiplier 0073            ___fltol@sign1 005A  
                  ?_atof 004E          __end_of___fladd 0261                    ?_main 0070  
        __end_of___fldiv 1357          __end_of___awdiv 1EA2          __end_of___flneg 000F  
          __CFG_WDTE$OFF 0000          __end_of___awmod 1DFB          __end_of___flmul 0CB7  
        __end_of___flsub 1CC8          __end_of___fltol 1F6D          __end_of___lldiv 1F00  
        ___awdiv@divisor 0077          __end_of___llmod 1E47          __end_of___lwdiv 1D71  
        __end_of___lwmod 1CFA          ___awdiv@counter 0020      ___lmul@multiplicand 0074  
                  _cgets 1001          __end_of_dpowers 08A0                    _scale 0CB7  
        __end_of_isdigit 1C4F                    atof@s 0053                    _putch 0003  
                  main@i 00CF          __end_of_isspace 1C72           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_atof 1C85             __end_of_main 1D35  
                 ??_atof 007E                   ??_main 006E     __size_of__tdiv_to_l_ 00A9  
                 ?_cgets 0070         ___llmod@dividend 0074                   ?_scale 003E  
       ___awdiv@dividend 0079                   ?_putch 0070         __end_of___xxtofl 1105  
         __CFG_PWRTE$OFF 0000         __end_of__powers_ 0844                   ___flge 1F6D  
                 ___bmul 1C4F                   ___fleq 08B0                   ___lmul 1D71  
              ??___fladd 005A                   ___wmul 1C85                ??___fldiv 0078  
              ??___awdiv 007B                ??___flneg 0074                ??___awmod 0074  
              ??___flmul 002C                ??___flsub 007E                ??___fltol 0055  
              ??___lldiv 0078                ??___llmod 0078                ??___lwdiv 007A  
              ??___lwmod 0074                   _getche 0004                   _fround 1357  
                 cgets@c 0072                   cgets@s 0074         ___awdiv@quotient 0022  
        ___awmod@divisor 0070          ___awmod@counter 0075                   _printf 0261  
                 _strtod 1558                ??_isdigit 0070       __size_of__Umul8_16 0023  
              ??_isspace 0070                   putch@c 0070               ___flge@ff1 0070  
             ___flge@ff2 0074             ___xxtofl@arg 007A             ___xxtofl@exp 0079  
           ___xxtofl@val 0070               ___fleq@ff1 0070               ___fleq@ff2 0074  
__end_of__initialization 07FC               ___flneg@f1 0070               ___fltol@f1 0051  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070            __end_of_cgets 1062  
          __end_of_scale 1000            __end_of_putch 0004               __div_to_l_ 08F8  
                ??_cgets 0070          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 0042          __div_to_l_@quot 0020                  ??_putch 0070  
          __div_to_l_@f1 0070            __div_to_l_@f2 0074        __end_of__Umul8_16 0032  
             __pmaintext 1CFA                  ?___flge 0070                  ?___bmul 0070  
                ?___fleq 0070                  ?___lmul 0070                  ?___wmul 0070  
                ?_getche 0070                  ?_fround 003E           ___lmul@product 0079  
                ?_printf 00A0                  ?_strtod 003E                ?___xxtofl 0070  
             __stringtab 0800        __end_of__npowers_ 0878          __size_of___flge 0093  
        __size_of___bmul 0011          __size_of___fleq 0048                  ___fladd 0032  
                ___fldiv 11AE                  ___awdiv 1E47                  ___flneg 0006  
        __size_of___lmul 003F                  ___awmod 1DB0                  ___flmul 09A2  
                ___flsub 1CA6                  ___fltol 1F00                  ___lldiv 1EA2  
        __size_of___wmul 0021                  ___llmod 1DFB                  ___lwdiv 1D35  
             _fround$764 004D               _fround$765 0049                  ___lwmod 1CC8  
        __size_of_getche 0002          __size_of_fround 0201                  __ptext1 0261  
                __ptext2 0CB7                  __ptext3 1DB0                  __ptext4 1E47  
                __ptext5 1357                  __ptext6 1CC8                  __ptext7 1D35  
                __ptext8 1105                  __ptext9 08F8          __size_of_printf 059B  
            ?__div_to_l_ 0070          __size_of_strtod 02A8                  _dpowers 0878  
                _isdigit 1C41               ??___xxtofl 0074                  cgets@s1 0075  
       ___awmod@dividend 0072                  _isspace 1C60                  main@buf 00C5  
   end_of_initialization 07FC          ___lldiv@divisor 0070          ___lldiv@counter 007D  
                printf@c 00C4                  printf@f 00AE           __tdiv_to_l_@f1 0070  
         __tdiv_to_l_@f2 0074               _printf$767 00AA            ??__tdiv_to_l_ 0078  
                strtod@s 004D              ___fladd@grs 0065            ___xxtofl@sign 0078  
            ___fldiv@grs 0027              ___fldiv@rem 0020              ___flmul@grs 0032  
    __size_of__div_to_l_ 00AA           __end_of___flge 2000           __end_of___bmul 1C60  
         __end_of___fleq 08F8           __end_of___lmul 1DB0           __end_of___wmul 1CA6  
         __end_of_getche 0006           __end_of_fround 1558           __end_of_printf 07FC  
         __end_of_strtod 1800      start_initialization 07FC      __end_of__tdiv_to_l_ 11AE  
        ___llmod@divisor 0070          ___llmod@counter 0079                 ??___flge 0078  
               ??___bmul 0071                 ??___fleq 0078                 ??___lmul 0078  
               ??___wmul 0074                __Umul8_16 000F                 ??_getche 0070  
               ??_fround 0042                 ??_printf 00A5                 ??_strtod 0042  
              ___fladd@a 0056                ___fladd@b 0052               fround@prec 0051  
              ___fldiv@a 0070                ___fldiv@b 0074                ___flmul@a 0028  
              ___flmul@b 0024                ___flsub@a 0066                ___flsub@b 006A  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of___xxtofl 00A3         ___lwdiv@dividend 0078                 ?___fladd 0052  
               ?___fldiv 0070                 ?___awdiv 0077                 ?___flneg 0070  
               ?___awmod 0070                 ?___flmul 0024                 ?___flsub 0066  
               ?___fltol 0051                 ?___lldiv 0070                 ?___llmod 0070  
              __npowers_ 0844               ?__Umul8_16 0070                 ?___lwdiv 0076  
               ?___lwmod 0070                __pstrings 0800              __tdiv_to_l_ 1105  
           ??__div_to_l_ 0078                 ?_isdigit 0070                 ?_isspace 0070  
              _scale$766 004C         ___lwdiv@quotient 007B           __size_of_cgets 0061  
         __size_of_scale 0349           __size_of_putch 0001           ___wmul@product 0074  
     __end_of__div_to_l_ 09A2              strtod@flags 0047              strtod@expon 0048  
            __stringbase 080F        ___wmul@multiplier 0070               printf@flag 00B0  
             printf@eexp 00BA               printf@fval 00C0               printf@prec 00B4  
      ___lmul@multiplier 0070              ??__Umul8_16 0072         __size_of___fladd 022F  
       __size_of___fldiv 01A9         __size_of___awdiv 005B         __size_of___flneg 0009  
       __size_of___awmod 004B         __size_of___flmul 0315         __size_of___flsub 0022  
       __size_of___fltol 006D         __size_of___lldiv 005E         __size_of___llmod 004C  
       __size_of___lwdiv 003C         __size_of___lwmod 0032       __end_of__stringtab 0810  
            _isdigit$586 0070                 ___xxtofl 1062         __size_of_isdigit 000E  
        ___lwdiv@divisor 0076         __size_of_isspace 0012          ___lwdiv@counter 007D  
               __ptext10 1C85                 __ptext11 1DFB                 __ptext20 1558  
               __ptext12 1EA2                 __ptext21 1C60                 __ptext13 1F00  
               __ptext30 11AE                 __ptext22 1C41                 __ptext14 1CA6  
               __ptext31 1C4F                 __ptext23 1062                 __ptext15 0032  
               __ptext24 1D71                 __ptext16 1001                 __ptext25 0006  
               __ptext17 0003                 __ptext26 09A2                 __ptext18 0004  
               __ptext27 000F                 __ptext19 1C72                 __ptext28 1F6D  
               __ptext29 08B0                 __powers_ 0810            __size_of_atof 0013  
          __size_of_main 003B               strtod@eexp 0046                printf@val 00B6  
            _isspace$589 0070                 isdigit@c 0071                 scale@scl 0050  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024         __tdiv_to_l_@quot 0020  
       ___lwmod@dividend 0072                 isspace@c 0071         ___lldiv@dividend 0074  
              stringcode 080A                strtod@res 003E                 printf@ap 00AF  
               printf@cp 00B2             ?__tdiv_to_l_ 0070   __Umul8_16@multiplicand 0070  
       ___lldiv@quotient 0079          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 080A                 stringtab 0800                 strtod@_u 0049  
          ___fladd@signs 0062             ___fladd@aexp 0063             ___fladd@bexp 0064  
   __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
